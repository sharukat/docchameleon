question_contains_api,question_score,question_favorites,question_views,question_user_rep,question_age,question_answer_count,question_user_accept_rate,question_user_is_reg,question_contains_code,question_edited,question_size,answers,answer_score,answer_age,answer_question_time_dff,answer_user_reputation,answer_user_accept_rate,answer_user_is_reg,answer_contains_code,answer_accepted_or_edit,answer_rank,answer_size,sent_codeblock,sent_total_tokens,sent_position,sent_api_position,sent_start_islower,sent_code_char_count,sent_contains_html_tags,sent_tagged_token_percent,sent_max_cosine,sent_avg_cosine,sentence,sent_pos,isMeaningful
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],5128,5753,0,56152,60,TRUE,TRUE,TRUE,1,29,FALSE,29,0,61,FALSE,39,TRUE,3.448275862,0.48928088,0.27713394,"<p>You can use the following instruction:</p>
<pre><code>new ArrayList&lt;&gt;(Arrays.asList(array));
</code></pre>",NN PRP MD VB DT VBG NN : -LRB- NN -RRB- -LRB- NN -LRB- NNP FW : NN : -LRB- NNP NN -RRB- -RRB- : NFP NN NN -RRB-,no
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],1008,5753,0,69793,70,TRUE,TRUE,TRUE,2,202,FALSE,7,0,0,FALSE,0,FALSE,0,0.2753096,0.10291291,<p>Given:</p>,-LRB- NN VBN : -LRB- NN -RRB-,no
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],1008,5753,0,69793,70,TRUE,TRUE,TRUE,2,202,TRUE,38,15,0,FALSE,84,TRUE,7.894736842,0.48932812,0.27546462,"<pre><code>Element[] array = new Element[] { new Element(1), new Element(2), new Element(3) };
</code></pre>","-LRB- NN -RRB- -LRB- NN -RRB- NN -LRB- -RRB- NN SYM JJ NN -LRB- -RRB- : JJ NNP -LRB- CD -RRB- , JJ NN -LRB- CD -RRB- , JJ NN -LRB- CD -RRB- CD : ADD NN -RRB-",no
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],1008,5753,0,69793,70,TRUE,TRUE,TRUE,2,202,FALSE,9,125,0,FALSE,0,FALSE,0,0.6010159,0.42364487,<p>The simplest answer is to do:</p>,`` DT JJS NN VBZ TO VB RB -RRB-,no
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],1008,5753,0,69793,70,TRUE,TRUE,TRUE,2,202,TRUE,20,163,0,FALSE,43,TRUE,15,0.4357671,0.16651285,"<pre><code>List&lt;Element&gt; list = Arrays.asList(array);
</code></pre>",-LRB- NN -RRB- -LRB- NN -RRB- : : NN : NN SYM NN NN -RRB- : NFP GW NN -RRB-,no
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],1008,5753,0,69793,70,TRUE,TRUE,TRUE,2,202,FALSE,7,238,0,FALSE,0,FALSE,0,0.5861994,0.47729364,<p>This will work fine.,NFP -RRB- DT MD VB JJ .,no
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],1008,5753,0,69793,70,TRUE,TRUE,TRUE,2,202,FALSE,7,263,0,FALSE,0,FALSE,0,0.46486682,0.32735783,But some caveats:</p>,CC DT NNS : -LRB- NN -RRB-,no
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],1008,5753,0,69793,70,TRUE,TRUE,TRUE,2,202,FALSE,14,295,0,FALSE,0,TRUE,14.28571429,0.63556135,0.5086967,The list returned from asList has <strong>fixed size</strong>.,DT NN VBD IN NNP VBZ -LRB- JJ -RRB- VBN NN SYM JJ -RRB-,yes
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],1008,5753,0,69793,70,TRUE,TRUE,TRUE,2,202,FALSE,37,359,128,FALSE,9,TRUE,10.81081081,0.85773575,0.66762537,"So, if you want to be able to add or remove elements from the returned list in your code, you'll need to wrap it in a new <code>ArrayList</code>.","RB , IN PRP VBP TO VB JJ TO VB CC VB NNS IN DT VBN NN IN PRP$ NN , PRP MD VB TO VB PRP IN DT JJ -LRB- NN -RRB- NN -LRB- , NN NFP",yes
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],1008,5753,0,69793,70,TRUE,TRUE,TRUE,2,202,FALSE,7,506,0,FALSE,0,TRUE,14.28571429,0.4889667,0.3516485,Otherwise you'll get an <code>,RB PRP MD VB DT -LRB- NN -RRB-,no
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],1008,5753,0,69793,70,TRUE,TRUE,TRUE,2,202,FALSE,8,536,0,FALSE,0,FALSE,12.5,0.21264102,0.04970645,"UnsupportedOperationException</code>.</li>
<li>",NNP -LRB- NN -RRB- NFP -LRB- NNP -RRB-,no
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],1008,5753,0,69793,70,TRUE,TRUE,TRUE,2,202,FALSE,18,583,0,FALSE,8,TRUE,5.555555556,0.7427449,0.621314,The list returned from <code>asList()</code> is backed by the original array.,DT NN VBD IN -LRB- NNP -LRB- -RRB- SYM NN -RRB- VBZ VBN IN DT JJ NN .,yes
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],1008,5753,0,69793,70,TRUE,TRUE,TRUE,2,202,FALSE,15,662,0,FALSE,0,FALSE,0,0.89649665,0.7297278,"If you modify the original array, the list will be modified as well.","IN PRP VBP DT JJ NN , DT NN MD VB VBN RB RB .",yes
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],1008,5753,0,69793,70,TRUE,TRUE,TRUE,2,202,FALSE,5,732,0,FALSE,0,FALSE,0,0.8221328,0.611159,This may be surprising.,DT MD VB JJ .,no
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],404,4245,1507,22607,100,TRUE,TRUE,TRUE,3,1093,FALSE,40,0,0,FALSE,0,TRUE,7.5,0.5677687,0.44717303,"<p><em><sup>(old thread, but just 2 cents as none mention Guava or other libs and some other details)</sup></em></p>
<h1>If You Can, Use Guava</h1>
<p>","NN NNS -RRB- -LRB- NN -RRB- -LRB- JJ NN , CC RB CD NNS IN NN VBP NN CC JJ NNS CC DT JJ NNS -RRB- SYM ADD -LRB- NN PRP MD , VB NN NN -RRB- -LRB- NN -RRB-",no
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],404,4245,1507,22607,100,TRUE,TRUE,TRUE,3,1093,FALSE,31,151,0,FALSE,0,TRUE,9.677419355,0.5075425,0.37925196,"It's worth pointing out the Guava way, which greatly simplifies these shenanigans:</p>
<h2>Usage</h2>
<h3>For an Immutable List</h3>
<p>","PRP VBZ JJ VBG RP DT NNP NN , WDT RB VBZ DT NNS NN -LRB- NNP -LRB- CD -RRB- -LRB- NN , DT JJ NN , NN -RRB- -LRB- NN -RRB-",no
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],404,4245,1507,22607,100,TRUE,TRUE,TRUE,3,1093,FALSE,59,287,0,FALSE,25,TRUE,10.16949153,0.31524488,0.13527311,"Use the <a href=""https://github.com/google/guava/blob/master/guava/src/com/google/common/collect/ImmutableList.java"" rel=""noreferrer""><code>ImmutableList</code></a> class and its <a href=""https://github.com/google/guava/blob/master/guava/src/com/google/common/collect/ImmutableList.java#L108"" rel=""noreferrer""><code>of()</code></a> and <a href=""https://github.com/google/guava/blob/master/guava/src/com/google/common/collect/ImmutableList.java#L235"" rel=""noreferrer""><code>copyOf()</code></a>","VB DT -LRB- DT NN SYM `` ADD '' FW SYM `` NN '' , NN NN '' -RRB- NN CC PRP$ -LRB- DT NN SYM `` ADD '' NN `` NN '' , NNP -LRB- -RRB- , NN , NN CC -LRB- DT NN SYM `` ADD '' NN `` NN '' -LRB- NNP -RRB- SYM NN -RRB-",no
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],404,4245,1507,22607,100,TRUE,TRUE,TRUE,3,1093,FALSE,69,780,0,TRUE,148,TRUE,7.246376812,0.4720798,0.25306734,"factory methods <sup>(elements can't be null)</sup>:</p>
<pre><code>List&lt;String&gt; il = ImmutableList.of(&quot;string&quot;, &quot;elements&quot;); // from varargs
List&lt;String&gt; il = ImmutableList.copyOf(aStringArray); // from array
</code></pre>
<h3>For A Mutable List</h3>
<p>","NN NNS -LRB- NN -RRB- -LRB- NNS MD RB VB JJ -RRB- , NNP -LRB- NN -LRB- NN -RRB- : NNP : NNP SYM NNP -LRB- FW : FW : , FW : NN : -RRB- : NFP IN NNS NNP : NNP : NNP SYM FW FW -RRB- : NFP IN NN NFP NN NN -RRB- -LRB- LS -RRB- IN DT JJ NN , NN -RRB- -LRB- NN -RRB-",no
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],404,4245,1507,22607,100,TRUE,TRUE,TRUE,3,1093,FALSE,104,1073,294,FALSE,266,TRUE,4.807692308,0.42527664,0.19784285,"Use the <a href=""https://github.com/google/guava/blob/master/guava/src/com/google/common/collect/Lists.java"" rel=""noreferrer""><code>Lists</code></a> class and its <a href=""https://github.com/google/guava/blob/master/guava/src/com/google/common/collect/Lists.java#L84"" rel=""noreferrer""><code>newArrayList()</code></a> factory methods:</p>
<pre><code>List&lt;String&gt; l1 = Lists.newArrayList(anotherListOrCollection); // from collection
List&lt;String&gt; l2 = Lists.newArrayList(aStringArray); // from array
List&lt;String&gt; l3 = Lists.newArrayList(&quot;or&quot;, &quot;string&quot;, &quot;elements&quot;); // from varargs
</code></pre>
<p>","VB DT -LRB- DT NN SYM `` ADD '' NNP SYM `` NN '' , NN NN -RRB- -RRB- NN CC PRP$ -LRB- DT NN SYM `` ADD '' NNP `` NNP '' , NNP -LRB- -RRB- SYM NN NNP NN NNP -LRB- NNP NNP : NNP : FW SYM NNP NNP -RRB- : , IN NN NNP : NNP : NN SYM NNP NNP -RRB- : -LRB- IN NN NNP : NNP : NNP SYM NNP -LRB- FW : FW : , FW : NN : , FW : NN : -RRB- : , IN NN , FW NN -RRB- -LRB- NN -RRB-",no
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],404,4245,1507,22607,100,TRUE,TRUE,TRUE,3,1093,FALSE,22,1734,0,FALSE,0,FALSE,4.545454545,0.8909526,0.7760109,"Please also note the similar methods for other data structures in other classes, for instance in <a href=""","UH RB VB DT JJ NNS IN JJ NNS NNS IN JJ NNS , IN NN IN -LRB- DT NN SYM ''",no
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],404,4245,1507,22607,100,TRUE,TRUE,TRUE,3,1093,FALSE,24,1840,0,TRUE,4,TRUE,8.333333333,0.25235492,0.069180176,"https://github.com/google/guava/blob/master/guava/src/com/google/common/collect/Sets.java"" rel=""noreferrer""><code>Sets</code></a>.</p>
<h2><a href=""https://github.com/google/guava/wiki"" rel=""noreferrer"">","ADD `` FW SYM `` NN '' , NNP -LRB- CD , `` NN SYM `` FW '' FW SYM `` FW '' -RRB-",no
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],404,4245,1507,22607,100,TRUE,TRUE,TRUE,3,1093,FALSE,7,2043,0,FALSE,0,FALSE,0,0.25507724,0.09067369,"Why Guava?</a></h2>
<p>",WRB NN NNP -RRB- -LRB- NN -RRB-,no
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],404,4245,1507,22607,100,TRUE,TRUE,TRUE,3,1093,FALSE,28,2066,0,FALSE,0,FALSE,3.571428571,0.92106795,0.8017934,"The main attraction could be to reduce the clutter due to generics for type-safety, as the use of the Guava <a href=""","DT JJ NN MD VB TO VB DT NN IN IN NNS IN NN HYPH NN , IN DT NN IN DT NN -LRB- DT NN SYM ''",yes
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],404,4245,1507,22607,100,TRUE,TRUE,TRUE,3,1093,FALSE,23,2183,0,TRUE,0,FALSE,4.347826087,0.90213776,0.77565545,"https://github.com/google/guava/wiki/CollectionUtilitiesExplained#static-constructors"" rel=""noreferrer"">factory methods</a> allow the types to be inferred most of the time.",NN '' NN `` NN `` -RRB- NN NNS -LRB- LS -RRB- VB DT NNS TO VB VBN JJS IN DT NN .,no
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],404,4245,1507,22607,100,TRUE,TRUE,TRUE,3,1093,FALSE,19,2356,0,FALSE,0,FALSE,0,0.7327239,0.6199964,"However, this argument holds less water since Java 7 arrived with the new diamond operator.</p>
<p>","RB , DT NN VBZ JJR NN IN NNP CD VBD IN DT JJ NN NN -RRB- -LRB- NN",no
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],404,4245,1507,22607,100,TRUE,TRUE,TRUE,3,1093,FALSE,39,2455,0,FALSE,0,FALSE,2.564102564,0.9331845,0.8028017,"But it's not the only reason (and Java 7 isn't everywhere yet): the shorthand syntax is also very handy, and the methods initializers, as seen above, allow to write more expressive code.","CC PRP VBZ RB DT JJ NN -LRB- CC NNP CD VBZ RB RB RB -RRB- : DT NN NN VBZ RB RB JJ , CC DT NNS NNS , IN VBN RB , VBP TO VB RBR JJ NN .",no
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],404,4245,1507,22607,100,TRUE,TRUE,TRUE,3,1093,FALSE,37,2642,0,FALSE,0,TRUE,8.108108108,0.45785606,0.30496502,"You do in one Guava call what takes 2 with the current Java Collections.</p>
<hr />
<h1>If You Can't...</h1>
<h2>For an Immutable List</h2>
<p>","PRP VBP IN CD NNP NN WP VBZ CD IN DT JJ NNP NNS NFP -LRB- NN SYM -LRB- NN PRP MD RB -LRB- NN -RRB- -LRB- CD , DT JJ NN , CD -RRB- -LRB- NN -RRB-",no
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],404,4245,1507,22607,100,TRUE,TRUE,TRUE,3,1093,FALSE,41,2785,0,FALSE,14,TRUE,9.756097561,0.3310213,0.14449428,"Use the JDK's <a href=""https://docs.oracle.com/en/java/javase/18/docs/api/java.base/java/util/Arrays.html"" rel=""noreferrer""><code>Arrays</code></a> class and its <a href=""https://docs.oracle.com/en/java/javase/18/docs/api/java.base/java/util/Arrays.html#asList(T...)"" rel=""noreferrer""><code>asList()</code></a>","VB DT NNP POS -LRB- DT NN SYM `` ADD '' NN SYM `` NN '' , NN NN NFP -RRB- NN CC PRP$ -LRB- DT NN SYM `` ADD '' FW SYM `` FW '' -LRB- NNP -RRB- SYM NN -RRB-",yes
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],404,4245,1507,22607,100,TRUE,TRUE,TRUE,3,1093,FALSE,11,3096,0,TRUE,0,FALSE,18.18181818,0.76486206,0.6184396,"factory method, wrapped with a <a href=""","NN NN , VBN IN DT -LRB- DT NN SYM ''",no
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],404,4245,1507,22607,100,TRUE,TRUE,TRUE,3,1093,FALSE,52,3136,0,TRUE,199,TRUE,3.846153846,0.39735997,0.14155246,"https://docs.oracle.com/en/java/javase/18/docs/api/java.base/java/util/Collections.html#unmodifiableList(java.util.List)"" rel=""noreferrer""><code>Collections.unmodifiableList()</code></a>:</p>
<pre><code>List&lt;String&gt; l1 = Collections.unmodifiableList(Arrays.asList(anArrayOfElements));
List&lt;String&gt; l2 = Collections.unmodifiableList(Arrays.asList(&quot;element1&quot;, &quot;element2&quot;));
</code></pre>
<p>","ADD `` NNP SYM `` NNP '' -LRB- NNP FW NNP -LRB- NNP NN FW : NNP : NNP SYM NNP NNP -RRB- -RRB- : NNP : NNP : NN SYM FW FW FW : FW : , FW : FW : -RRB- -RRB- : -LRB- FW FW -RRB- -LRB- NN -RRB-",no
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],404,4245,1507,22607,100,TRUE,TRUE,TRUE,3,1093,FALSE,22,3557,0,FALSE,12,TRUE,13.63636364,0.5754527,0.44003174,"Note that the returned type for <code>asList()</code> is a <code>List</code> using a concrete <code>ArrayList</code> implementation, but <strong>it is NOT</strong> <code>java.util.ArrayList</code>.","VB IN DT VBN NN IN -LRB- NNP -LRB- -RRB- SYM NN -RRB- VBZ DT -LRB- NN NN -LRB- , NN -RRB- VBG DT NN -LRB- NN -RRB- NN -LRB- , NN -RRB- NN , CC -LRB- JJ -RRB- PRP VBZ NNP JJ -RRB- -LRB- ADD -RRB-",yes
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],404,4245,1507,22607,100,TRUE,TRUE,TRUE,3,1093,FALSE,16,3755,44,FALSE,9,TRUE,12.5,0.709399,0.5431624,"It's an inner type, which emulates an <code>ArrayList</code>","PRP VBZ DT JJ NN , WDT VBZ DT -LRB- NN -RRB- NN -LRB- , NN -RRB-",no
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],404,4245,1507,22607,100,TRUE,TRUE,TRUE,3,1093,FALSE,28,3816,0,TRUE,0,FALSE,0,0.7919899,0.6491772,"but actually directly references the passed array and makes it &quot;write through&quot; (modifications are reflected in the array).</p>
<p>",CC RB RB VBZ DT VBN NN CC VBZ PRP NN : VB NN : -LRB- NNS VBP VBN IN DT NN -RRB- . -RRB- -LRB- NN -RRB-,no
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],404,4245,1507,22607,100,TRUE,TRUE,TRUE,3,1093,FALSE,15,3956,0,FALSE,4,TRUE,13.33333333,0.67568016,0.58135825,It forbids modifications through some of the <code>List</code>,"PRP VBZ NNS IN DT IN DT -LRB- NN -RRB- NN -LRB- , NN -RRB-",no
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],404,4245,1507,22607,100,TRUE,TRUE,TRUE,3,1093,FALSE,16,4019,0,FALSE,12,TRUE,12.5,0.7291352,0.5751115,API's methods by way of simply extending an <code>AbstractList</code>,"NNP POS NNS IN NN IN RB VBG DT -LRB- NN -RRB- NNP -LRB- , NN -RRB-",no
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],404,4245,1507,22607,100,TRUE,TRUE,TRUE,3,1093,FALSE,27,4089,0,FALSE,5,TRUE,3.703703704,0.82188445,0.6959597,"(so, adding or removing elements is unsupported), however it allows calls to <code>set()</code> to override elements.","-LRB- RB , VBG CC VBG NNS VBZ JJ -RRB- , RB PRP VBZ NNS IN -LRB- NN -LRB- -RRB- , NN -RRB- TO VB NNS .",no
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],404,4245,1507,22607,100,TRUE,TRUE,TRUE,3,1093,FALSE,18,4207,0,FALSE,8,TRUE,11.11111111,0.7527002,0.62655485,Thus this list isn't truly immutable and a call to <code>asList()</code>,RB DT NN VBZ RB RB JJ CC DT NN IN -LRB- NN NNP -LRB- -RRB- SYM NN -RRB-,no
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],404,4245,1507,22607,100,TRUE,TRUE,TRUE,3,1093,FALSE,14,4280,0,TRUE,30,TRUE,7.142857143,0.42574012,0.2878603,"should be wrapped with <code>Collections.unmodifiableList()</code>.</p>
<p>",MD VB VBN IN -LRB- NN NN -RRB- NFP NN -RRB- -LRB- NN -RRB-,no
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],404,4245,1507,22607,100,TRUE,TRUE,TRUE,3,1093,FALSE,25,4355,0,FALSE,0,TRUE,16,0.49775836,0.40195456,"See the next step if you need a mutable list.</p>
<h2>For a Mutable List</h2>
<p>","VB DT JJ NN IN PRP VBP DT JJ NN -LRB- NN -LRB- LS -RRB- IN DT JJ NN , CD -RRB- -LRB- NN -RRB-",no
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],404,4245,1507,22607,100,TRUE,TRUE,TRUE,3,1093,FALSE,11,4436,0,FALSE,10,TRUE,0,0.76371807,0.6696402,"Same as above, but wrapped with an actual <code>java.util.","JJ IN RB , CC VBN IN DT JJ -LRB- ADD",no
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],404,4245,1507,22607,100,TRUE,TRUE,TRUE,3,1093,FALSE,19,5184,0,TRUE,0,FALSE,0,0.46350375,0.15987432,"for (final T s : array) {
l.add(s);
}
return (l);
}",IN -LRB- JJ NN POS : NN -RRB- -LRB- NNS -RRB- : JJ NN -LRB- NNP -RRB- : NFP,no
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],404,4245,1507,22607,100,TRUE,TRUE,TRUE,3,1093,FALSE,42,5245,139,FALSE,0,FALSE,0,0.63779217,0.41421708,"// for Java &lt; 1.5 (no generics, no compile-time type-safety, boo!)
static List arrayToList(final Object[] array) {
final List l = new ArrayList(array.length);","NFP IN NNP NNP : CD -LRB- DT NNS , DT NN HYPH NN NN HYPH NN , NN . -RRB- JJ NN NN -LRB- JJ NN -LRB- -RRB- NN -RRB- : JJ NN NN SYM JJ NN -LRB- NN -RRB- :",no
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],404,4245,1507,22607,100,TRUE,TRUE,TRUE,3,1093,FALSE,32,5412,0,TRUE,0,FALSE,12.5,0.38009864,0.12069307,"for (int i = 0; i &lt; array.length; i++) {
l.add(array[i]);
}
return (l);
}
</code></pre>","IN -LRB- NN CD SYM CD : NN NN : NNP : FW HYPH FW -LRB- FW CD -RRB- -RRB- : SYM NN -LRB- NNP -RRB- : NN , NN NN -RRB-",no
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],255,4759,993,63366,59,TRUE,TRUE,TRUE,4,88,FALSE,22,0,0,FALSE,0,FALSE,0,0.7520223,0.6083395,"<p>Since this question is pretty old, it surprises me that nobody suggested the simplest form yet:</p>","-LRB- NN IN DT NN VBZ RB JJ , PRP VBZ PRP IN NN VBD DT JJS NN RB HYPH NN -RRB-",no
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],255,4759,993,63366,59,TRUE,TRUE,TRUE,4,88,FALSE,15,225,0,FALSE,15,TRUE,6.666666667,0.4602022,0.30681756,"<p>As of Java 5, <code>Arrays.asList()</code> takes a varargs parameter and you don't have to construct the array explicitly.</p>","-LRB- NN IN IN NNP CD , -LRB- NN NNP -LRB- -RRB- NFP NN -RRB- VBZ DT NN NN CC PRP VBP RB VB TO VB DT NN RB . NN",no
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],228,5753,0,402714,93,TRUE,TRUE,TRUE,5,73,FALSE,20,74,0,FALSE,8,TRUE,15,0.5214739,0.38363156,<p>Make sure that <code>myArray</code> is the same type as <code>T</code>.,"NN VB JJ IN -LRB- NNP -LRB- , NN -RRB- VBZ DT JJ NN IN -LRB- NN -RRB- NN -RRB-",no
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],228,5753,0,402714,93,TRUE,TRUE,TRUE,5,73,FALSE,34,149,0,FALSE,16,TRUE,11.76470588,0.62160456,0.52848333,"You'll get a compiler error if you try to create a <code>List&lt;Integer&gt;</code> from an array of <code>int</code>, for example.</p>","PRP MD VB DT NN NN IN PRP VBP TO VB DT -LRB- NN -RRB- `` : NNP : -LRB- NN -RRB- IN DT NN IN -LRB- NN -LRB- , NN , IN NN -RRB-",no
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],114,2997,2755,47475,100,TRUE,TRUE,TRUE,7,294,FALSE,36,19,0,FALSE,7,TRUE,8.333333333,0.42388317,0.2396684,"In <a href=""https://en.wikipedia.org/wiki/Java_version_history#Java_SE_9"" rel=""noreferrer"">Java 9</a>, you can use <a href=""https://docs.oracle.com/javase/9/docs/api/java/util/List.html#of-E-E-E-"" rel=""noreferrer""><code>List.of</code></a>","IN -LRB- DT NN SYM `` NNP '' NN SYM `` NN '' -RRB- NNP NNP , PRP MD VB -LRB- DT NN SYM `` ADD '' FW SYM `` NN '' , NN NN -RRB-",no
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],114,2997,2755,47475,100,TRUE,TRUE,TRUE,7,294,FALSE,18,258,0,TRUE,4,TRUE,16.66666667,0.7494445,0.642547,static factory method in order to create a <code>List</code> literal.,"JJ NN NN IN NN TO VB DT -LRB- NN -RRB- NN -LRB- , NN -RRB- JJ .",yes
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],114,2997,2755,47475,100,TRUE,TRUE,TRUE,7,294,FALSE,46,328,0,FALSE,82,TRUE,4.347826087,0.52758527,0.2964798,"Something like the following:</p>
<pre><code>List&lt;Element&gt; elements = List.of(new Element(1), new Element(2), new Element(3));
</code></pre>
<p>","NN IN DT VBG : -LRB- NN -RRB- -LRB- NN -LRB- NN NN : NN : NNS SYM NN -LRB- JJ NN -LRB- CD -RRB- , JJ NN -LRB- CD -RRB- , JJ NN -LRB- CD -RRB- -RRB- : -LRB- NN NN -RRB- -LRB- NN -RRB-",yes
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],114,2997,2755,47475,100,TRUE,TRUE,TRUE,7,294,FALSE,18,478,0,FALSE,0,TRUE,5.555555556,0.5228628,0.3527928,"This would return an <a href=""https://en.wikipedia.org/wiki/Immutable_object"" rel=""noreferrer""><em><strong>immutable</strong></em></a>",DT MD VB DT -LRB- DT NN SYM `` FW '' NN SYM `` NN '' -LRB- ADD,no
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],114,2997,2755,47475,100,TRUE,TRUE,TRUE,7,294,FALSE,5,613,0,TRUE,0,FALSE,0,0.86144936,0.69672596,list containing three elements.,NN VBG CD NNS .,no
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],114,2997,2755,47475,100,TRUE,TRUE,TRUE,7,294,FALSE,99,645,82,FALSE,54,TRUE,7.070707071,0.5292778,0.32984665,"If you want a <em><strong>mutable</strong></em> list, pass that list to the <code>ArrayList</code> constructor:</p>
<pre><code>new ArrayList&lt;&gt;(List.of(// elements vararg))
</code></pre>
<hr />
<h3>JEP 269: Convenience Factory Methods for Collections</h3>
<p><a href=""http://openjdk.java.net/jeps/269"" rel=""noreferrer"">JEP 269</a> provides some convenience factory methods for <a href=""https://en.wikipedia.org/wiki/Java_collections_framework"" rel=""noreferrer"">Java Collections</a> API.","IN PRP VBP DT -LRB- NN -LRB- NN -RRB- NN , VB DT NN IN DT -LRB- NN -RRB- NN NFP NN -RRB- NNP -LRB- NN -LRB- NNP NNP : NNP : -LRB- NNP -LRB- SYM NNS NN -RRB- -RRB- , NN NN -RRB- -LRB- NN SYM -LRB- NN CD : NN NN NNS IN NNS -LRB- NN -RRB- -LRB- NN , NN NN SYM `` ADD '' NN `` NN '' NFP NN VBZ DT NN NN NNS IN -LRB- DT NN SYM `` ADD '' NN SYM `` NN '' -RRB- NNP NNS , NN NN .",no
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],114,2997,2755,47475,100,TRUE,TRUE,TRUE,7,294,FALSE,14,1137,0,FALSE,0,FALSE,7.142857143,0.8250823,0.7284859,"These immutable static factory methods are built into the <a href=""",DT JJ JJ NN NNS VBP VBN IN DT -LRB- DT NN SYM '',no
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],114,2997,2755,47475,100,TRUE,TRUE,TRUE,7,294,FALSE,49,1204,0,TRUE,10,TRUE,4.081632653,0.39031133,0.20173714,"https://docs.oracle.com/javase/9/docs/api/java/util/List.html"" rel=""noreferrer""><code>List</code></a>, <a href=""https://docs.oracle.com/javase/9/docs/api/java/util/Set.html"" rel=""noreferrer""><code>Set</code></a>, and <a href=""https://docs.oracle.com/javase/9/docs/api/java/util/Map.html"" rel=""noreferrer""><code>Map</code></a> interfaces in Java 9 and later.</p>","ADD `` FW SYM `` FW '' , NNP , -LRB- `` FW SYM `` ADD '' FW SYM `` NN '' , FW FW , CC -LRB- DT NN SYM `` ADD '' FW SYM `` NN '' , NN -RRB- NNS IN NNP CD CC RBR NFP",no
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],94,5753,0,108572,92,TRUE,TRUE,FALSE,8,42,FALSE,13,0,41,FALSE,0,FALSE,7.692307692,0.70815414,0.59937525,"<p>You probably just need a List, not an ArrayList.","-LRB- NN PRP RB RB VBP DT NN , RB DT NN .",yes
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],94,5753,0,108572,92,TRUE,TRUE,FALSE,8,42,FALSE,9,53,0,FALSE,0,FALSE,0,0.65109277,0.51123166,In that case you can just do:</p>,IN DT NN PRP MD RB VB RB -RRB-,no
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],94,5753,0,108572,92,TRUE,TRUE,FALSE,8,42,FALSE,14,99,0,FALSE,0,FALSE,7.142857143,0.4127996,0.1499442,"List&lt;Element&gt; arraylist = Arrays.asList(array);
</code></pre>",NNP : NNP : NN SYM NNP NN -RRB- : NFP FW FW -RRB-,no
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],78,3506,2246,3335,100,TRUE,TRUE,FALSE,9,92,FALSE,19,0,0,FALSE,0,FALSE,0,0.6573042,0.53442335,"<p>Another update, almost ending year 2014, you can do it with Java 8 too:</p>","NN DT NN , RB VBG NN CD , PRP MD VB PRP IN NNP CD RB RB -RRB-",no
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],78,3506,2246,3335,100,TRUE,TRUE,FALSE,9,92,FALSE,22,212,0,FALSE,4,TRUE,13.63636364,0.52537274,0.405976,"<p>A few characters would be saved, if this could be just a <code>List</code> </p>","NN DT JJ NNS MD VB VBN , IN DT MD VB RB DT -LRB- NN -RRB- NN , NN -RRB- -RRB-",no
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],49,3818,1934,6948,79,TRUE,TRUE,TRUE,10,392,FALSE,7,0,0,FALSE,0,FALSE,0,0.34524363,0.16961576,<p>If you use :</p>,NFP -RRB- IN PRP VBP NN -RRB-,no
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],49,3818,1934,6948,79,TRUE,TRUE,TRUE,10,392,FALSE,22,95,0,FALSE,0,TRUE,18.18181818,0.42210352,0.2657846,<p>you <strong>may</strong> create <strong>and fill</strong> two lists !,"-LRB- NN PRP -LRB- JJ -RRB- -LRB- , JJ -RRB- VB -LRB- JJ -RRB- CC VB SYM JJ -RRB- CD NNS .",yes
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],49,3818,1934,6948,79,TRUE,TRUE,TRUE,10,392,FALSE,27,168,0,FALSE,8,TRUE,11.11111111,0.73998517,0.53370875,Filling twice a big list is exactly what you don't want to do because it will create another <code>Object[]</code> array each time the capacity needs to be extended.</p>,VBG RB DT JJ NN VBZ RB WP PRP VBP RB VB TO VB IN PRP MD VB DT -LRB- NN -RRB- NN -LRB- -RRB- SYM NN -RRB-,yes
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],49,3818,1934,6948,79,TRUE,TRUE,TRUE,10,392,FALSE,26,339,0,FALSE,18,TRUE,11.53846154,0.64110124,0.5264111,<p>Fortunately the JDK implementation is fast and <code>Arrays.asList(a[])</code> is very well done.,-LRB- NN RB DT NNP NN VBZ JJ CC -LRB- NN -RRB- NNP -LRB- LS -LRB- -RRB- -RRB- SYM NN -RRB- VBZ RB RB VBN .,yes
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],49,3818,1934,6948,79,TRUE,TRUE,TRUE,10,392,FALSE,9,440,20,FALSE,0,FALSE,11.11111111,0.8472359,0.7096495,It create a kind of ArrayList named Arrays.,PRP VBP DT NN IN NN VBN NNS .,no
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],49,3818,1934,6948,79,TRUE,TRUE,TRUE,10,392,FALSE,15,483,0,FALSE,0,FALSE,0,0.74101305,0.5811132,ArrayList where the Object[] data points directly to the array.</p>,NN WRB DT NN -LRB- -RRB- NNS VBZ RB IN DT NN -LRB- NN -RRB-,no
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],49,3818,1934,6948,79,TRUE,TRUE,TRUE,10,392,FALSE,52,552,107,FALSE,186,TRUE,7.692307692,0.77456695,0.6003025,"<pre><code>// in Arrays
@SafeVarargs
public static &lt;T&gt; List&lt;T&gt; asList(T... a) {
return new ArrayList&lt;&gt;(a);
}
//still in Arrays, creating a private unseen class
private static class ArrayList&lt;E&gt;","-LRB- NN -RRB- -LRB- NN -RRB- IN NNP IN NNP JJ NN NN : NNP : NNP : NNP : NNP , LS -RRB- : NN JJ NNP : NN : NN -RRB- : NN , RB IN NNPS , VBG DT JJ JJ NN JJ NN NN NNP : NNP :",no
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],49,3818,1934,6948,79,TRUE,TRUE,TRUE,10,392,FALSE,31,779,29,TRUE,0,FALSE,9.677419355,0.60532105,0.42858392,"private final E[] a; ArrayList(E[] array) {
a = array; // you point to the previous array
}
....
}
</code></pre>","JJ JJ NN -RRB- DT : NN -LRB- NNP -RRB- NN -RRB- : DT SYM NN : SYM PRP VBP IN DT JJ NN NN , SYM , NN NN -RRB-",no
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],49,3818,1934,6948,79,TRUE,TRUE,TRUE,10,392,FALSE,24,917,0,FALSE,0,TRUE,8.333333333,0.6674895,0.57253355,"<p>The dangerous side is that <strong>if you change the initial array, you change the List !</strong>","LS -RRB- DT JJ NN VBZ DT -LRB- JJ -RRB- IN PRP VBP DT JJ NN , PRP VBP DT NN . JJ -RRB-",yes
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],49,3818,1934,6948,79,TRUE,TRUE,TRUE,10,392,FALSE,7,1019,0,FALSE,0,FALSE,0,0.5306075,0.30181694,Are you sure you want that ?,VBP PRP JJ PRP VBP DT .,no
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],49,3818,1934,6948,79,TRUE,TRUE,TRUE,10,392,FALSE,7,1048,0,FALSE,0,FALSE,0,0.4305354,0.2826763,"Maybe yes, maybe not.</p>","RB UH , RB RB . -RRB-",no
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],49,3818,1934,6948,79,TRUE,TRUE,TRUE,10,392,FALSE,15,1075,0,FALSE,0,FALSE,0,0.61575896,0.475634,"<p>If not, the most understandable way is to do this :</p>","NFP -RRB- IN RB , DT RBS JJ NN VBZ TO VB DT RB -RRB-",no
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],49,3818,1934,6948,79,TRUE,TRUE,TRUE,10,392,TRUE,45,1135,11,FALSE,158,TRUE,6.666666667,0.60320246,0.32531354,"<pre><code>ArrayList&lt;Element&gt; list = new ArrayList&lt;Element&gt;(myArray.length); // you know the initial capacity
for (Element element : myArray) {
list.add(element);
}
</code></pre>","-LRB- NN -RRB- -LRB- NN -RRB- NN : NN : NN SYM JJ NNP : NNP : -LRB- NNP -RRB- : SYM PRP VBP DT JJ NN IN -LRB- NN NN : NN -RRB- NFP NN -LRB- NN -RRB- : NN , NN NN -RRB-",no
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],49,3818,1934,6948,79,TRUE,TRUE,TRUE,10,392,FALSE,16,1331,58,FALSE,0,FALSE,0,0.5614822,0.40200847,"<p>Or as said @glglgl, you can create another independant ArrayList with :</p>","`` CC IN VBD IN NNP , PRP MD VB DT JJ NN IN NN -RRB-",no
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],49,3818,1934,6948,79,TRUE,TRUE,TRUE,10,392,TRUE,19,21,15,FALSE,42,TRUE,10.52631579,0.38701913,0.14553942,"<pre><code>new ArrayList&lt;T&gt;(Arrays.asList(myArray));
</code></pre>",-LRB- NN -RRB- -LRB- NNP NNP : NNP : -LRB- NNP FW -RRB- -RRB- : -LRB- FW FW -RRB-,no
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],49,3818,1934,6948,79,TRUE,TRUE,TRUE,10,392,FALSE,20,1485,0,FALSE,17,TRUE,0,0.50150675,0.34100226,"<p>I love to use <code>Collections</code>, <code>Arrays</code>, or Guava.","-LRB- NN PRP VBP TO VB -LRB- NN , NN , -LRB- NN NNS , NN , CC NNP .",no
TRUE,4105,0,1853377,54328,5753,42,81,TRUE,TRUE,TRUE,111,[],49,3818,1934,6948,79,TRUE,TRUE,TRUE,10,392,FALSE,20,1559,0,FALSE,0,FALSE,0,0.64861953,0.4208394,"But if it don't fit, or you don't feel it, just write another inelegant line instead.</p>","CC IN PRP VBP RB VB , CC PRP VBP RB VB PRP , RB VB DT JJ NN RB . -RRB-",no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],3869,5696,0,15244,100,TRUE,TRUE,TRUE,1,1832,FALSE,30,0,34,FALSE,29,TRUE,13.33333333,0.43614095,0.27464104,<p><strong>Summary</strong> <code>ArrayList</code> with <code>ArrayDeque</code> are preferable in <em>many</em> more use-cases than <code>LinkedList</code>.,"LS NN -LRB- JJ -RRB- -LRB- NN NN -RRB- IN -LRB- NN NN -RRB- VBP JJ IN -LRB- NN NN -RRB- JJR NNS IN -LRB- NN -LRB- , NN -RRB-",yes
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],3869,5696,0,15244,100,TRUE,TRUE,TRUE,1,1832,FALSE,54,157,43,FALSE,9,TRUE,5.555555556,0.6079228,0.47101703,"If you're not sure — just start with <code>ArrayList</code>.</p>
<hr />
<p>TLDR, in <code>ArrayList</code> accessing an element takes constant time [O(1)] and adding an element takes O(n) time [worst case].","IN PRP VBP RB JJ : RB VB IN -LRB- NN NN NN -RRB- -LRB- NN SYM -LRB- NN , IN -LRB- NN -RRB- NN -LRB- , NN -RRB- VBG DT NN VBZ JJ NN -LRB- NN -LRB- CD -RRB- -RRB- CC VBG DT NN VBZ NN NN -RRB- NN -LRB- JJS NN -RRB- .",no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],3869,5696,0,15244,100,TRUE,TRUE,TRUE,1,1832,FALSE,68,364,155,FALSE,23,TRUE,11.76470588,0.59666467,0.42837816,"In <code>LinkedList</code> inserting an element takes O(n) time and accessing also takes O(n) time but <code>LinkedList</code> uses more memory than <code>ArrayList</code>.</p>
<p><code>LinkedList</code> and <code>ArrayList</code> are two different implementations of the <code>List</code> interface.","IN -LRB- NN -RRB- NN -LRB- , NN -RRB- VBG DT NN VBZ NN -RRB- NN CC NN RB VBZ NN NN -RRB- NN CC -LRB- NN NN -LRB- , NN -RRB- VBZ JJR NN IN -LRB- NN NN NFP -LRB- NN -RRB- CC -LRB- NN -RRB- NN -LRB- , NN -RRB- VBP CD JJ NNS IN DT -LRB- NN -RRB- NN -LRB- , NN -RRB- NN .",yes
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],3869,5696,0,15244,100,TRUE,TRUE,TRUE,1,1832,FALSE,4,132,0,FALSE,10,TRUE,25,0.30844364,0.12448274,<code>LinkedList</code>,-LRB- NN NN -RRB-,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],3869,5696,0,15244,100,TRUE,TRUE,TRUE,1,1832,FALSE,9,689,0,TRUE,0,FALSE,11.11111111,0.8405129,0.7308608,implements it with a doubly-linked list.,VBZ PRP IN DT RB HYPH VBN NN .,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],3869,5696,0,15244,100,TRUE,TRUE,TRUE,1,1832,FALSE,9,753,0,TRUE,0,FALSE,11.11111111,0.61564016,0.5120128,"implements it with a dynamically re-sizing array.</p>
<p>",VBZ PRP IN DT RB JJ NN . NN,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],3869,5696,0,15244,100,TRUE,TRUE,TRUE,1,1832,FALSE,122,810,0,FALSE,78,TRUE,6.557377049,0.5092214,0.30269793,"As with standard linked list and array operations, the various methods will have different algorithmic runtimes.</p>
<p>For <a href=""https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/LinkedList.html"" rel=""noreferrer""><code>LinkedList&lt;E&gt;</code></a></p>
<ul>
<li><code>get(int index)</code> is <em>O(n)</em> (with <em>n/4</em> steps on average), but <em>O(1)</em> when <code>index = 0</code> or <code>index = list.size() - 1</code> (in this case, you can also use <code>getFirst()</code> and <code>getLast()</code>).","IN IN JJ VBN NN CC NN NNS , DT JJ NNS MD VB JJ JJ NNS . -LRB- NN IN -LRB- NN NN SYM `` ADD '' FW SYM `` NN '' , NNP : NNP -LRB- FW -RRB- -LRB- NNP -RRB- -LRB- FW SYM NN -RRB- SYM NN -RRB- VBZ -LRB- NN -LRB- NN -RRB- -LRB- PRP -RRB- -LRB- IN -LRB- NN -RRB- NNS IN NN -RRB- , CC -LRB- NN NN -RRB- -LRB- PRP -RRB- WRB -LRB- NN SYM NN NN -RRB- CC -LRB- NN SYM NN -RRB- : CD NFP NN -RRB- -LRB- IN DT NN , PRP MD RB VB -LRB- NN -LRB- -RRB- , NN -RRB- CC -LRB- NN -LRB- -RRB- , NN -RRB- -RRB- .",yes
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],3869,5696,0,15244,100,TRUE,TRUE,TRUE,1,1832,FALSE,105,1360,0,FALSE,94,TRUE,8.571428571,0.5029341,0.30367422,"One of the main benefits of</strong> <code>LinkedList&lt;E&gt;</code></li>
<li><code>add(int index, E element)</code> is <em>O(n)</em> (with <em>n/4</em> steps on average), but <em>O(1)</em> when <code>index = 0</code> or <code>index = list.size() - 1</code> (in this case, you can also use <code>addFirst()</code> and <code>addLast()</code>/<code>add()</code>).","CD IN DT JJ NNS IN SYM JJ -RRB- -LRB- NNP : NNP -RRB- -LRB- NFP -LRB- NN NN -LRB- NN NN , NNP NN -RRB- SYM NN -RRB- VBZ -LRB- NN NFP NN -RRB- -LRB- PRP -RRB- -LRB- IN -LRB- NN -RRB- NNS IN NN -RRB- , CC -LRB- NN NN -RRB- -LRB- PRP -RRB- WRB -LRB- NN SYM NN NN -RRB- CC -LRB- NN SYM NN -RRB- : CD NFP NN -RRB- -LRB- IN DT NN , PRP MD RB VB -LRB- NNP -LRB- -RRB- -LRB- NN -RRB- CC -LRB- NN -LRB- -RRB- , NN NN -LRB- -RRB- NFP NN -RRB- -RRB- .",yes
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],3869,5696,0,15244,100,TRUE,TRUE,TRUE,1,1832,FALSE,97,1731,0,FALSE,87,TRUE,8.24742268,0.4975786,0.29940167,"One of the main benefits of</strong> <code>LinkedList&lt;E&gt;</code></li>
<li><code>remove(int index)</code> is <em>O(n)</em> (with <em>n/4</em> steps on average), but <em>O(1)</em> when <code>index = 0</code> or <code>index = list.size() - 1</code> (in this case, you can also use <code>removeFirst()</code> and <code>removeLast()</code>).","CD IN DT JJ NNS IN SYM JJ -RRB- -LRB- NNP : NNP -RRB- -LRB- NFP -LRB- NN -LRB- NN NN -RRB- SYM NN -RRB- VBZ -LRB- NN NFP NN -RRB- -LRB- PRP -RRB- -LRB- IN -LRB- NN -RRB- NNS IN NN -RRB- , CC -LRB- NN NN -RRB- -LRB- PRP -RRB- WRB -LRB- NN SYM NN NN -RRB- CC -LRB- NN SYM NN -RRB- : CD NFP NN -RRB- -LRB- IN DT NN , PRP MD RB VB -LRB- NN NN -LRB- -RRB- NFP NN -RRB- CC -LRB- NN -LRB- -RRB- NFP NN -RRB- -RRB- .",yes
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],3869,5696,0,15244,100,TRUE,TRUE,TRUE,1,1832,FALSE,30,2081,0,FALSE,30,TRUE,10,0.42587897,0.27234334,"One of the main benefits of</strong> <code>LinkedList&lt;E&gt;</code></li>
<li><code>Iterator.remove()</code> is <em>O(1)</em>. <strong>","CD IN DT JJ NNS IN SYM JJ -RRB- -LRB- NNP : NNP -RRB- -LRB- NFP -LRB- ADD -RRB- , NN -RRB- VBZ NN -RRB- NN NFP -LRB- JJ -RRB-",yes
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],3869,5696,0,15244,100,TRUE,TRUE,TRUE,1,1832,FALSE,34,2217,0,FALSE,40,TRUE,11.76470588,0.425879,0.27234334,"One of the main benefits of</strong> <code>LinkedList&lt;E&gt;</code></li>
<li><code>ListIterator.add(E element)</code> is <em>O(1)</em>. <strong>",CD IN DT JJ NNS IN SYM JJ -RRB- -LRB- NNP : NNP -RRB- -LRB- NFP -LRB- NN ADD NNP NN -RRB- SYM NN -RRB- VBZ -LRB- FW -RRB- ADD NFP -LRB- JJ -RRB-,yes
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],3869,5696,0,15244,100,TRUE,TRUE,TRUE,1,1832,FALSE,19,2452,0,FALSE,0,TRUE,5.263157895,0.53719366,0.3747645,"Note: Many of the operations need <em>n/4</em> steps on average, <em>constant</em>","NN : JJ IN DT NNS VBP -LRB- NN -RRB- NNS IN NN , -LRB- NN SYM PRP -RRB-",no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],3869,5696,0,15244,100,TRUE,TRUE,TRUE,1,1832,FALSE,18,2535,0,TRUE,0,TRUE,0,0.69789684,0.49817938,"number of steps in the best case (e.g. index = 0), and <em>n/2</em>","NN IN NNS IN DT JJS NN -LRB- FW NN SYM CD -RRB- , CC -LRB- NNP -RRB-",no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],3869,5696,0,15244,100,TRUE,TRUE,TRUE,1,1832,FALSE,247,2603,134,TRUE,126,TRUE,7.692307692,0.3774769,0.19622658,"steps in worst case (middle of list)</sup></p>
<p>For <a href=""https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/ArrayList.html"" rel=""noreferrer""><code>ArrayList&lt;E&gt;</code></a></p>
<ul>
<li><code>get(int index)</code> is <em>O(1)</em>. <strong>Main benefit of</strong> <code>ArrayList&lt;E&gt;</code></li>
<li><code>add(E element)</code> is <em>O(1)</em> amortized, but <em>O(n)</em> worst-case since the array must be resized and copied</li>
<li><code>add(int index, E element)</code> is <em>O(n)</em> (with <em>n/2</em> steps on average)</li>
<li><code>remove(int index)</code> is <em>O(n)</em> (with <em>n/2</em> steps on average)</li>
<li><code>Iterator.remove()</code> is <em>O(n)</em> (with <em>n/2</em> steps on average)</li>
<li><code>ListIterator.add(E element)</code> is <em>O(n)</em> (with <em>n/2</em> steps on average)</li>
</ul>
<p><sup>","NNS IN JJS NN -LRB- NN IN NN -RRB- , NN -LRB- NN IN -LRB- NN NN SYM `` ADD '' FW SYM `` FW '' , NNP : NNP NNP -LRB- NNP -RRB- -LRB- NNP -RRB- -LRB- FW SYM NN -RRB- SYM NN -RRB- VBZ -LRB- NNP FW NNP -RRB- -LRB- JJ -RRB- JJ NN IN SYM JJ -RRB- -LRB- NNP : NNP -RRB- -LRB- NFP -LRB- FW NNP NN -RRB- SYM NN -RRB- VBZ -LRB- NNP NN -LRB- CD -RRB- -LRB- PRP -RRB- VBN , CC -LRB- LS -LRB- NN -RRB- -LRB- PRP -RRB- JJS HYPH NN IN DT NN MD VB VBN CC VBN -LRB- NNP -RRB- -LRB- SYM -LRB- NN -RRB- -LRB- NN NN , NN NN -RRB- SYM NN -RRB- VBZ -LRB- NN -LRB- NN -RRB- -LRB- PRP -RRB- -LRB- IN -LRB- NN -RRB- NNS IN NN -RRB- -LRB- NN -RRB- -LRB- NN -RRB- -LRB- NN -LRB- NN NN -RRB- NFP NN -RRB- VBZ -LRB- NN NN NN -RRB- -LRB- PRP -RRB- -LRB- IN -LRB- NN -RRB- NNS IN NN -RRB- -LRB- NN -RRB- -LRB- SYM -LRB- NN -RRB- NFP NN -RRB- VBZ -LRB- NN NN NN -RRB- -LRB- PRP -RRB- -LRB- IN -LRB- NN -RRB- NNS IN NN -RRB- -LRB- NN -RRB- -LRB- SYM -LRB- NN NFP NN NN -RRB- NFP NN -RRB- VBZ -LRB- NN NN NN -RRB- -LRB- PRP -RRB- -LRB- IN -LRB- NN -RRB- NNS IN NN -RRB- -LRB- NN -RRB- -LRB- NN -RRB- -LRB- NN NN -RRB-",no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],3869,5696,0,15244,100,TRUE,TRUE,TRUE,1,1832,FALSE,40,3622,0,TRUE,13,TRUE,2.5,0.75386727,0.6385991,"<p><code>LinkedList&lt;E&gt;</code> allows for constant-time insertions or removals <em>using iterators</em>, but only sequential access of elements.","NNS IN DT JJS NN -LRB- NN IN NN -RRB- , NN -LRB- NN NN : NN NN -RRB- VBZ IN JJ HYPH NN NNS CC NNS -LRB- NN NNS , NN , CC RB JJ NN IN NNS .",yes
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],3869,5696,0,15244,100,TRUE,TRUE,TRUE,1,1832,FALSE,30,3822,0,FALSE,0,FALSE,3.333333333,0.9454596,0.802633,"In other words, you can walk the list forwards or backwards, but finding a position in the list takes time proportional to the size of the list.","IN JJ NNS , PRP MD VB DT NN NNS CC RB , CC VBG DT NN IN DT NN VBZ NN JJ IN DT NN IN DT NN .",yes
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],3869,5696,0,15244,100,TRUE,TRUE,TRUE,1,1832,FALSE,42,3967,0,FALSE,0,TRUE,4.761904762,0.81855404,0.7138301,"Javadoc says <em>&quot;operations that index into the list will traverse the list from the beginning or the end, whichever is closer&quot;</em>, so those methods are <em>O(n)</em>","NNP VBZ -LRB- NN NN : NNS WDT NN IN DT NN MD VB DT NN IN DT NN CC DT NN , WDT VBZ JJ : NFP NN , RB DT NNS VBP -LRB- PRP -RRB- UH -RRB- SYM PRP -RRB-",yes
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],3869,5696,0,15244,100,TRUE,TRUE,TRUE,1,1832,FALSE,55,4147,95,FALSE,21,TRUE,3.636363636,0.6491128,0.49561372,"(<em>n/4</em> steps) on average, though <em>O(1)</em> for <code>index = 0</code>.</p>
<p><code>ArrayList&lt;E&gt;</code>, on the other hand, allow fast random read access, so you can grab any element in constant time.","-LRB- -LRB- NN NN -RRB- NNS -RRB- IN NN , RB -LRB- NN NN -RRB- -LRB- PRP -RRB- IN -LRB- NN SYM NN -RRB- -LRB- NN NN -RRB- : NN : NFP NN , IN DT JJ NN , VB JJ JJ NN NN , RB PRP MD VB DT NN IN JJ NN .",yes
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],3869,5696,0,15244,100,TRUE,TRUE,TRUE,1,1832,FALSE,27,4365,0,FALSE,0,FALSE,0,0.9158832,0.78007644,"But adding or removing from anywhere but the end requires shifting all the latter elements over, either to make an opening or fill the gap.","CC VBG CC VBG IN RB CC DT NN VBZ VBG PDT DT JJ NNS RB , CC TO VB DT NN CC VB DT NN .",yes
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],3869,5696,0,15244,100,TRUE,TRUE,TRUE,1,1832,FALSE,70,4505,187,FALSE,9,TRUE,5.714285714,0.8325024,0.7515517,"Also, if you add more elements than the capacity of the underlying array, a new array (1.5 times the size) is allocated, and the old array is copied to the new one, so adding to an <code>ArrayList</code> is <em>O(n)</em> in the worst case but constant on average.</p>
<p>","RB , IN PRP VBP JJR NNS IN DT NN IN DT JJ NN , DT JJ NN -LRB- CD NNS DT NN -RRB- VBZ VBN , CC DT JJ NN VBZ VBN IN DT JJ NN , RB VBG IN DT -LRB- NN -RRB- NN -LRB- , NN -RRB- VBZ -LRB- NN : NN -RRB- SYM PRP -RRB- IN DT JJS NN CC JJ IN NN -RRB- -LRB- NN",no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],3869,5696,0,15244,100,TRUE,TRUE,TRUE,1,1832,FALSE,17,4776,0,FALSE,0,FALSE,0,0.8823804,0.68545234,"So depending on the operations you intend to do, you should choose the implementations accordingly.","RB VBG IN DT NNS PRP VBP TO VB , PRP MD VB DT NNS RB .",no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],3869,5696,0,15244,100,TRUE,TRUE,TRUE,1,1832,FALSE,11,4876,0,FALSE,0,FALSE,0,0.87343186,0.7758101,Iterating over either kind of List is practically equally cheap.,VBG IN DT NN IN NN VBZ RB RB JJ .,yes
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],3869,5696,0,15244,100,TRUE,TRUE,TRUE,1,1832,FALSE,12,4941,25,FALSE,9,TRUE,16.66666667,0.49123433,0.31683454,(Iterating over an <code>ArrayList</code>,"-LRB- VBG IN DT -LRB- NN -RRB- NN -LRB- , NN -RRB-",no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],3869,5696,0,15244,100,TRUE,TRUE,TRUE,1,1832,FALSE,29,4983,0,TRUE,0,FALSE,0,0.7625344,0.5902128,"is technically faster, but unless you're doing something really performance-sensitive, you shouldn't worry about this -- they're both constants.)</p>
<p>","VBZ RB JJR , CC IN PRP VBP VBG NN RB NN HYPH JJ , PRP MD RB VB IN DT , PRP VBP DT NNS . -RRB- . -LRB- NN -RRB-",no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],3869,5696,0,15244,100,TRUE,TRUE,TRUE,1,1832,FALSE,14,5136,0,FALSE,10,TRUE,21.42857143,0.69822836,0.55153435,The main benefits of using a <code>LinkedList</code> arise when you re-use existing iterators to insert and remove elements.,"DT JJ NNS IN VBG DT -LRB- NN -RRB- NN -LRB- , NN -RRB- VB WRB PRP VBP VBG NNS TO VB CC VB NNS .",yes
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],3869,5696,0,15244,100,TRUE,TRUE,TRUE,1,1832,FALSE,16,5261,0,FALSE,0,TRUE,12.5,0.58089566,0.4843219,These operations can then be done in <em>O(1)</em> by changing the list locally only.,DT NNS MD RB VB VBN IN -LRB- PRP -RRB- -LRB- LS -RRB- SYM PRP -RRB- IN VBG DT NN RB RB .,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],3869,5696,0,15244,100,TRUE,TRUE,TRUE,1,1832,FALSE,23,5347,0,FALSE,0,TRUE,4.347826087,0.8163704,0.68332773,"In an array list, the remainder of the array needs to be <em>moved</em> (i.e. copied).","IN DT NN NN , DT NN IN DT NN VBZ TO VB -LRB- NN , PRP -RRB- -LRB- FW VBN -RRB- .",yes
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],3869,5696,0,15244,100,TRUE,TRUE,TRUE,1,1832,FALSE,16,5434,0,FALSE,10,TRUE,18.75,0.6734405,0.5890237,"On the other side, seeking in a <code>LinkedList</code> means following the links in <em>O(n)</em>","IN DT JJ NN , VBG IN DT -LRB- NN -RRB- NN -LRB- , NN -RRB- VBZ VBG DT NNS IN -LRB- PRP -RRB- NNP -RRB- SYM PRP -RRB-",yes
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],3869,5696,0,15244,100,TRUE,TRUE,TRUE,1,1832,FALSE,21,5533,57,FALSE,9,TRUE,9.523809524,0.5383451,0.34707707,"(<em>n/2</em> steps) for worst case, whereas in an <code>ArrayList</code>","-LRB- -LRB- NN -RRB- NNS -RRB- IN JJS NN , IN IN DT -LRB- NN -RRB- NN -LRB- , NN -RRB-",no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],3869,5696,0,15244,100,TRUE,TRUE,TRUE,1,1832,FALSE,15,5607,0,TRUE,0,TRUE,0,0.6301743,0.50085014,"the desired position can be computed mathematically and accessed in <em>O(1)</em>.</p>
<p>",DT VBN NN MD VB VBN RB CC VBN IN -LRB- NNP -RRB- -LRB- NN,yes
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],3869,5696,0,15244,100,TRUE,TRUE,TRUE,1,1832,FALSE,12,5697,0,FALSE,10,TRUE,16.66666667,0.6581236,0.5156694,"Another benefit of using a <code>LinkedList</code> arises when you add or remove from the head of the list, since those operations are <em>O(1)</em>, while they are <em>O(n)</em> for <code>ArrayList</code>.","DT NN IN VBG DT -LRB- NN NN -LRB- , NN -RRB- VBZ WRB PRP VBP CC VBP IN DT NN IN DT NN , IN DT NNS VBP -LRB- PRP -RRB- NN -LRB- CD -RRB- SYM FW , IN PRP VBP -LRB- PRP -RRB- -LRB- FW -RRB- SYM PRP -RRB- IN -LRB- NN NN , NN -RRB-",yes
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],3869,5696,0,15244,100,TRUE,TRUE,TRUE,1,1832,FALSE,15,5904,0,FALSE,10,TRUE,13.33333333,0.5960208,0.46798977,"Note that <code>ArrayDeque</code> may be a good alternative to <code> LinkedList</code> for adding and removing from the head, but it is not a <code>List</code>.","VB IN -LRB- NN , NN -RRB- MD VB DT JJ NN IN -LRB- NN NN -LRB- , NN -RRB- IN VBG CC VBG IN DT NN , CC PRP VBZ RB DT -LRB- NN -RRB- NN NN -RRB-",yes
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],3869,5696,0,15244,100,TRUE,TRUE,TRUE,1,1832,FALSE,18,6072,0,FALSE,0,FALSE,0,0.8796183,0.7404199,"Also, if you have large lists, keep in mind that memory usage is also different.","RB , IN PRP VBP JJ NNS , VB IN NN IN NN NN VBZ RB JJ .",yes
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],3869,5696,0,15244,100,TRUE,TRUE,TRUE,1,1832,FALSE,25,6153,0,FALSE,10,TRUE,8,0.863387,0.7704578,Each element of a <code>LinkedList</code> has more overhead since pointers to the next and previous elements are also stored.,DT NN IN DT -LRB- NN NN SYM NN -RRB- VBZ JJR RB IN NNS IN DT JJ CC JJ NNS VBP RB VBN .,yes
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],3869,5696,0,15244,100,TRUE,TRUE,TRUE,1,1832,FALSE,7,6279,6,FALSE,10,TRUE,28.57142857,0.30844364,0.12448274,<code>ArrayLists</code>,-LRB- NN -RRB- NN NFP NN -RRB-,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],3869,5696,0,15244,100,TRUE,TRUE,TRUE,1,1832,FALSE,5,6303,0,TRUE,0,FALSE,0,0.65438783,0.44609672,don't have this overhead.,VB RB VB DT RB .,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],3869,5696,0,15244,100,TRUE,TRUE,TRUE,1,1832,FALSE,9,6329,15,FALSE,10,TRUE,11.11111111,0.46521997,0.29477754,"However, <code>ArrayLists</code>","RB , -LRB- NN NNP -LRB- , NN -RRB-",no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],3869,5696,0,15244,100,TRUE,TRUE,TRUE,1,1832,FALSE,24,6362,0,TRUE,0,FALSE,0,0.8404461,0.745922,"take up as much memory as is allocated for the capacity, regardless of whether elements have actually been added.</p>
<p>","VB RP RB JJ NN IN VBZ VBN IN DT NN , RB IN IN NNS VBP RB VBN VBN . -LRB- NN -RRB-",no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],3869,5696,0,15244,100,TRUE,TRUE,TRUE,1,1832,FALSE,26,6483,41,FALSE,9,TRUE,7.692307692,0.7088552,0.5527298,The default initial capacity of an <code>ArrayList</code> is pretty small (10 from Java 1.4 - 1.8).,"DT NN JJ NN IN DT -LRB- NN -RRB- NN -LRB- , NN -RRB- VBZ RB JJ -LRB- CD IN NNP CD SYM CD -RRB- .",yes
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],3869,5696,0,15244,100,TRUE,TRUE,TRUE,1,1832,FALSE,22,6583,0,FALSE,0,FALSE,4.545454545,0.93658745,0.7907181,"But since the underlying implementation is an array, the array must be resized if you add a lot of elements.","CC IN DT JJ NN VBZ DT NN , DT NN MD VB VBN IN PRP VBP DT NN IN NNS .",no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],3869,5696,0,15244,100,TRUE,TRUE,TRUE,1,1832,FALSE,29,6692,108,FALSE,9,TRUE,10.34482759,0.83268684,0.714883,"To avoid the high cost of resizing when you know you're going to add a lot of elements, construct the <code>ArrayList</code>","TO VB DT JJ NN IN VBG WRB PRP VBP PRP VBP VBG TO VB DT NN IN NNS , VB DT -LRB- NN -RRB- NN -LRB- , NN -RRB-",yes
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],3869,5696,0,15244,100,TRUE,TRUE,TRUE,1,1832,FALSE,9,6817,0,TRUE,0,FALSE,11.11111111,0.49118474,0.38438728,"with a higher initial capacity.</p>
<p>",IN DT JJR JJ NN . -LRB- NN -RRB-,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],3869,5696,0,15244,100,TRUE,TRUE,TRUE,1,1832,FALSE,27,6856,0,FALSE,0,FALSE,11.11111111,0.88840187,0.78825426,"If the data structures perspective is used to understand the two structures, a LinkedList is basically a sequential data structure which contains a head Node.","IN DT NNS NNS NN VBZ VBN TO VB DT CD NNS , DT NN VBZ RB DT JJ NN NN WDT VBZ DT NN NN .",yes
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],3869,5696,0,15244,100,TRUE,TRUE,TRUE,1,1832,FALSE,29,7015,0,FALSE,0,FALSE,6.896551724,0.8910096,0.77586883,The Node is a wrapper for two components : a value of type T [accepted through generics] and another reference to the Node linked to it.,DT NN VBZ DT NN IN CD NNS : DT NN IN NN NN -LRB- VBN IN NNS -RRB- CC DT NN IN DT NN VBN IN PRP .,yes
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],3869,5696,0,15244,100,TRUE,TRUE,TRUE,1,1832,FALSE,27,7152,0,FALSE,0,FALSE,7.407407407,0.8381102,0.7335128,"So, we can assert it is a recursive data structure (a Node contains another Node which has another Node and so on...).","RB , PRP MD VB PRP VBZ DT JJ NN NN -LRB- DT NN VBZ DT NN WDT VBZ DT NN CC RB RB , -RRB- .",no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],3869,5696,0,15244,100,TRUE,TRUE,TRUE,1,1832,FALSE,21,7271,80,FALSE,0,FALSE,4.761904762,0.82216525,0.68354785,"Addition of elements takes linear time in LinkedList as stated above.</p>
<p>An ArrayList is a growable array.",NN IN NNS VBZ JJ NN IN NNP IN VBN RB NFP -LRB- NN DT NN VBZ DT JJ NN .,yes
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],3869,5696,0,15244,100,TRUE,TRUE,TRUE,1,1832,FALSE,8,7382,0,FALSE,0,FALSE,12.5,0.79426694,0.6502662,It is just like a regular array.,PRP VBZ RB IN DT JJ NN .,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],3869,5696,0,15244,100,TRUE,TRUE,TRUE,1,1832,FALSE,33,7415,50,FALSE,0,FALSE,3.03030303,0.92259365,0.8138648,"Under the hood, when an element is added, and the ArrayList is already full to capacity, it creates another array with a size which is greater than previous size.","IN DT NN , WRB DT NN VBZ VBN , CC DT NNP VBZ RB JJ IN NN , PRP VBZ DT NN IN DT NN WDT VBZ JJR IN JJ NN .",yes
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],3869,5696,0,15244,100,TRUE,TRUE,TRUE,1,1832,FALSE,28,7578,0,FALSE,0,FALSE,0,0.9004835,0.7665455,The elements are then copied from previous array to new one and the elements that are to be added are also placed at the specified indices.</p>,DT NNS VBP RB VBN IN JJ NN IN JJ NN CC DT NNS WDT VBP TO VB VBN VBP RB VBN IN DT VBN NNS . NN,yes
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],700,4653,1043,8803,91,TRUE,TRUE,TRUE,2,642,FALSE,47,0,178,FALSE,19,TRUE,10.63829787,0.752329,0.6598941,"<p>Thus far, nobody seems to have addressed the memory footprint of each of these lists besides the general consensus that a <code>LinkedList</code> is ""lots more"" than an <code>ArrayList</code>","NFP -RRB- RB RB , NN VBZ TO VB VBN DT NN NN IN DT IN DT NNS IN DT JJ NN IN DT -LRB- NN -RRB- NN -LRB- , NN -RRB- VBZ `` NNS JJR '' IN DT -LRB- NN -RRB- NN -LRB- , NN -RRB-",no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],700,4653,1043,8803,91,TRUE,TRUE,TRUE,2,642,FALSE,22,195,0,TRUE,0,FALSE,0,0.7883636,0.5793713,so I did some number crunching to demonstrate exactly how much both lists take up for N null references.</p>,RB PRP VBD DT NN NN TO VB RB WRB JJ DT NNS VBP RP IN NNP JJ NNS -LRB- NN -RRB-,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],700,4653,1043,8803,91,TRUE,TRUE,TRUE,2,642,FALSE,45,305,173,FALSE,21,TRUE,4.444444444,0.6712609,0.5296186,"<p>Since references are either 32 or 64 bits (even when null) on their relative systems, I have included 4 sets of data for 32 and 64 bit <code>LinkedLists</code> and <code>ArrayLists</code>.</p>","-LRB- NN IN NNS VBP CC CD CC CD NNS -LRB- RB WRB JJ -RRB- IN PRP$ JJ NNS , PRP VBP VBN CD NNS IN NNS IN CD CC CD NN -LRB- NN NNS -LRB- , NN -RRB- CC -LRB- NN NN -RRB- -RRB-",no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],700,4653,1043,8803,91,TRUE,TRUE,TRUE,2,642,FALSE,7,502,0,FALSE,0,TRUE,28.57142857,0.29431254,0.13524899,<p><strong>Note:</strong>,-LRB- JJ -RRB- NN : JJ -RRB-,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],700,4653,1043,8803,91,TRUE,TRUE,TRUE,2,642,FALSE,13,528,30,FALSE,9,TRUE,15.38461538,0.6190666,0.4681942,The sizes shown for the <code>ArrayList</code>,"DT NNS VBN IN DT -LRB- NN -RRB- NN -LRB- , NN -RRB-",no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],700,4653,1043,8803,91,TRUE,TRUE,TRUE,2,642,FALSE,11,575,0,TRUE,0,TRUE,9.090909091,0.44747335,0.31482324,lines are for <em>trimmed lists</em> -,"NNS VBP IN -LRB- AFX VBN NNS SYM PRP -RRB- ,",no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],700,4653,1043,8803,91,TRUE,TRUE,TRUE,2,642,FALSE,19,614,59,FALSE,9,TRUE,10.52631579,0.8086322,0.6494875,"In practice, the capacity of the backing array in an <code>ArrayList</code>","IN NN , DT NN IN DT NN NN IN DT -LRB- NN -RRB- NN -LRB- , NN -RRB-",yes
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],700,4653,1043,8803,91,TRUE,TRUE,TRUE,2,642,FALSE,10,690,0,TRUE,0,FALSE,0,0.7980475,0.68812835,is generally larger than its current element count.</p>,VBZ RB JJR IN PRP$ JJ NN NN . -RRB-,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],700,4653,1043,8803,91,TRUE,TRUE,TRUE,2,642,FALSE,18,747,0,FALSE,0,TRUE,22.22222222,0.29877195,0.1258542,<p><strong>Note 2:</strong> <em>(thanks BeeOnRope)</em>,"NN -LRB- JJ -RRB- NN CD JJ -RRB- -LRB- PRP -RRB- -LRB- NN NNP -RRB- , PRP -RRB-",no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],700,4653,1043,8803,91,TRUE,TRUE,TRUE,2,642,FALSE,39,803,0,FALSE,0,FALSE,0,0.8769641,0.76832443,"As CompressedOops is default now from mid JDK6 and up, the values below for 64-bit machines will basically match their 32-bit counterparts, unless of course you specifically turn it off.</p>","IN NNP VBZ NN RB IN JJ NNP CC RB , DT NNS RB IN CD HYPH NN NNS MD RB VB PRP$ CD HYPH NN NNS , IN IN NN PRP RB VBP PRP RP , NN -RRB-",yes
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],700,4653,1043,8803,91,TRUE,TRUE,TRUE,2,642,FALSE,25,1001,75,FALSE,0,FALSE,0,0.6846355,0.45421287,"<p><img src=""https://i.sstatic.net/Cq5Ph.png"" alt=""Graph of LinkedList and ArrayList No. of Elements x Bytes""></p>",-LRB- NN -LRB- NN NN SYM `` ADD '' NN SYM `` NN IN NN CC NN NN IN NNS HYPH NNS '' '' -RRB-,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],700,4653,1043,8803,91,TRUE,TRUE,TRUE,2,642,FALSE,37,1123,88,FALSE,19,TRUE,13.51351351,0.66753983,0.5710577,"<p>The result clearly shows that <code>LinkedList</code> is a whole lot more than <code>ArrayList</code>, especially with a very high element count.","LS -RRB- DT NN RB VBZ IN -LRB- NN -RRB- NN -LRB- , NN -RRB- VBZ DT JJ NN JJR IN -LRB- NN -RRB- NN -LRB- , NN , RB IN DT RB JJ NN NN .",yes
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],700,4653,1043,8803,91,TRUE,TRUE,TRUE,2,642,FALSE,16,1272,0,FALSE,11,TRUE,12.5,0.70813924,0.5986236,"If memory is a factor, steer clear of <code>LinkedLists</code>.</p>","IN NN VBZ DT NN , VB JJ IN -LRB- NN NN NFP NN SYM NN",no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],700,4653,1043,8803,91,TRUE,TRUE,TRUE,2,642,FALSE,24,1341,0,FALSE,0,FALSE,0,0.6509744,0.44435528,"<p>The formulas I used follow, let me know if I have done anything wrong and I will fix it up.","NFP -RRB- DT NNS PRP VBD VB , VB PRP VB IN PRP VBP VBN NN JJ CC PRP MD VB PRP RP .",no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],700,4653,1043,8803,91,TRUE,TRUE,TRUE,2,642,FALSE,25,1436,0,FALSE,0,FALSE,4,0.7619051,0.64451563,"b' is either 4 or 8 for 32 or 64 bit systems, and 'n' is the number of elements.","`` NN '' VBZ CC CD CC CD IN CD CC CD NN NNS , CC `` FW '' VBZ DT NN IN NNS .",no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],700,4653,1043,8803,91,TRUE,TRUE,TRUE,2,642,FALSE,33,1518,0,FALSE,0,FALSE,3.03030303,0.9107126,0.8020474,Note the reason for the mods is because all objects in java will take up a multiple of 8 bytes space regardless of whether it is all used or not.</p>,VB DT NN IN DT NNS VBZ IN DT NNS IN NN MD VB RP DT JJ IN CD NNS NN RB IN IN PRP VBZ RB VBN CC RB -LRB- NN -RRB-,yes
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],700,4653,1043,8803,91,TRUE,TRUE,TRUE,2,642,FALSE,2,1669,11,FALSE,0,TRUE,0,0.29431254,0.13524899,<p><strong>ArrayList:</strong></p>,GW ADD,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],700,4653,1043,8803,91,TRUE,TRUE,TRUE,2,642,FALSE,101,1714,0,FALSE,0,FALSE,7.920792079,0.33771726,0.12212706,"ArrayList object header + size integer + modCount integer + array reference + (array oject header + b * n) + MOD(array oject, 8) + MOD(ArrayList object, 8) == 8 + 4 + 4 + b + (12 + b * n) + MOD(12 + b * n, 8) + MOD(8 + 4 + 4 + b + (12 + b * n) + MOD(12 + b * n, 8), 8)</code></p>","NN NN NN SYM NN NN SYM NN NN SYM NN NN SYM -LRB- NN NN NN SYM NN NFP NN -RRB- SYM NN -LRB- NN NN , CD -RRB- SYM NN -LRB- NN NN , CD -RRB- SYM CD SYM CD SYM CD SYM NN SYM -LRB- CD SYM NN NFP NN -RRB- SYM NN -LRB- CD SYM NN NFP NN , CD -RRB- SYM NN -LRB- CD SYM CD SYM CD SYM NN SYM -LRB- CD SYM NN NFP NN -RRB- SYM NN -LRB- CD SYM NN NFP NN , CD -RRB- , CD -RRB- SYM NN . -RRB-",no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],700,4653,1043,8803,91,TRUE,TRUE,TRUE,2,642,FALSE,2,1995,0,FALSE,0,TRUE,0,0.29431254,0.13524899,<p><strong>LinkedList:</strong></p>,GW ADD,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],700,4653,1043,8803,91,TRUE,TRUE,TRUE,2,642,FALSE,132,2041,0,FALSE,0,FALSE,5.303030303,0.41773283,0.19049993,"LinkedList object header + size integer + modCount integer + reference to header + reference to footer + (node object overhead + reference to previous element + reference to next element + reference to element) * n) + MOD(node object, 8) * n + MOD(LinkedList object, 8) == 8 + 4 + 4 + 2 * b + (8 + 3 * b) * n + MOD(8 + 3 * b, 8) * n + MOD(8 + 4 + 4 + 2 * b + (8 + 3 * b) * n + MOD(8 + 3 * b, 8) * n, 8)</code></p>","NN NN NN SYM NN NN SYM NN NN SYM NN IN NN SYM NN IN NN SYM -LRB- NN NN NN SYM NN IN JJ NN SYM NN IN JJ NN SYM NN IN NN -RRB- NFP NN -RRB- SYM NN -LRB- NN NN , CD -RRB- NFP NN SYM NN -LRB- NN NN , CD -RRB- SYM CD SYM CD SYM CD SYM CD SYM NN SYM -LRB- CD SYM CD SYM CD -RRB- NFP NN SYM NN -LRB- CD SYM CD SYM NN , CD -RRB- NFP NN SYM NN -LRB- CD SYM CD SYM CD SYM CD SYM NN SYM -LRB- CD SYM CD SYM CD -RRB- NFP NN SYM NN -LRB- CD SYM CD SYM NN , CD -RRB- NFP NN , CD -RRB- SYM NN -RRB-",no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],315,5696,0,146990,100,TRUE,TRUE,TRUE,3,193,FALSE,6,0,9,FALSE,9,TRUE,33.33333333,0.24182968,0.067321554,<p><code>ArrayList</code>,NN NN -RRB- NN NN -RRB-,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],315,5696,0,146990,100,TRUE,TRUE,TRUE,3,193,FALSE,5,26,0,TRUE,0,FALSE,0,0.80122566,0.5316271,is what you want.,VBZ WP PRP VBP .,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],315,5696,0,146990,100,TRUE,TRUE,TRUE,3,193,FALSE,28,44,0,FALSE,10,TRUE,10.71428571,0.36031467,0.18198653,"<code>LinkedList</code> is almost always a (performance) bug.</p>
<p>Why <code>LinkedList</code> sucks:</p>
<ul>
<li>",-LRB- NN NN -RRB- VBZ RB RB DT -LRB- NN -RRB- NN -RRB- -LRB- NN WRB -LRB- NN NN -RRB- VBZ SYM -LRB- NN -RRB- -LRB- ADD -RRB-,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],315,5696,0,146990,100,TRUE,TRUE,TRUE,3,193,FALSE,21,161,0,FALSE,0,FALSE,0,0.7782606,0.69941366,"It uses lots of small memory objects, and therefore impacts performance across the process.</li>
<li>","PRP VBZ NNS IN JJ NN NNS , CC RB VBZ NN IN DT NN -LRB- NNP -RRB- -LRB- FW -RRB-",no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],315,5696,0,146990,100,TRUE,TRUE,TRUE,3,193,FALSE,16,262,0,FALSE,0,FALSE,0,0.62890637,0.48405877,"Lots of small objects are bad for cache-locality.</li>
<li>",NNS IN JJ NNS VBP JJ IN NN HYPH NN -LRB- NNP -RRB- -LRB- NNP -RRB-,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],315,5696,0,146990,100,TRUE,TRUE,TRUE,3,193,FALSE,13,321,0,FALSE,0,FALSE,7.692307692,0.8700522,0.7502831,"Any indexed operation requires a traversal, i.e. has O(n) performance.","DT VBN NN VBZ DT NN , FW VBZ NNP -RRB- NN .",yes
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],315,5696,0,146990,100,TRUE,TRUE,TRUE,3,193,FALSE,33,392,88,FALSE,9,TRUE,9.090909091,0.70910966,0.56993717,"This is not obvious in the source code, leading to algorithms O(n) slower than if <code>ArrayList</code> was used.</li>
<li>","DT VBZ RB JJ IN DT NN NN , VBG IN NNS -LRB- NN -RRB- JJR IN IN -LRB- NN -RRB- NN -LRB- , NN -RRB- VBD VBN -LRB- NNP -RRB- -LRB- NFP",yes
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],315,5696,0,146990,100,TRUE,TRUE,TRUE,3,193,FALSE,11,516,0,FALSE,0,FALSE,0,0.44394305,0.3154881,"Getting good performance is tricky.</li>
<li>",VBG JJ NN VBZ JJ -LRB- NNP -RRB- -LRB- NNP -RRB-,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],315,5696,0,146990,100,TRUE,TRUE,TRUE,3,193,FALSE,33,561,49,FALSE,9,TRUE,3.03030303,0.69769645,0.59278506,"Even when big-O performance is the same as <code>ArrayList</code>, it is probably going to be significantly slower anyway.</li>
<li>","RB WRB JJ HYPH NN NN VBZ DT JJ IN -LRB- NN -RRB- NN -LRB- , NN , PRP VBZ RB VBG TO VB RB JJR RB -LRB- NNP -RRB- -LRB- NNP -RRB-",no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],315,5696,0,146990,100,TRUE,TRUE,TRUE,3,193,FALSE,12,693,0,FALSE,10,TRUE,16.66666667,0.5442726,0.41289765,It's jarring to see <code>LinkedList</code>,"PRP VBZ JJ TO VB -LRB- NN -RRB- NN -LRB- , NN -RRB-",no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],315,5696,0,146990,100,TRUE,TRUE,TRUE,3,193,FALSE,15,737,0,TRUE,0,FALSE,0,0.5952848,0.4982757,"in source because it is probably the wrong choice.</li>
</ul>",IN NN IN PRP VBZ RB DT JJ NN -LRB- NNP -RRB- -LRB- FW -RRB-,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],193,5198,497,3840,20,TRUE,TRUE,TRUE,4,121,FALSE,6,0,0,FALSE,0,TRUE,33.33333333,0.25398737,0.086816765,<pre><code>,-LRB- NN -RRB- -LRB- NN -RRB-,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],193,5198,497,3840,20,TRUE,TRUE,TRUE,4,121,FALSE,76,11,20,FALSE,0,TRUE,2.631578947,0.55884564,0.2544144,"Algorithm ArrayList LinkedList
seek front O(1) O(1)
seek back O(1) O(1)
seek to index O(1) O(N)
insert at front O(N) O(1)
insert at back O(1) O(1)
insert after an item O(N) O(1)
</code></pre>
<p><a href=""https://web.archive.org/web/20180729155145/http://leepoint.net/algorithms/big-oh/bigoh.html"" rel=""noreferrer"">","NNP NNP NNP VB JJ NN LS -RRB- NN LS -RRB- VBP NN NN LS -RRB- NN LS -RRB- VBP TO VB NN -LRB- CD -RRB- NN NN -RRB- NN IN NN NN NN -RRB- NN LS -RRB- VB IN NN NN -LRB- CD -RRB- NN CD -RRB- NN IN DT NN NN NN -RRB- NN CD -RRB- -LRB- NN NN -RRB- -LRB- NN , NN NN SYM `` ADD '' NN `` NN '' -RRB-",no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],193,5198,497,3840,20,TRUE,TRUE,TRUE,4,121,FALSE,10,430,0,FALSE,0,FALSE,0,0.22087967,0.002491482,Algorithms: Big-Oh Notation</a> (archived)</p>,"NNS : NNP NNP , SYM -LRB- VBN -RRB- NN",no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],161,4930,765,3944,0,TRUE,FALSE,TRUE,5,519,FALSE,19,0,0,FALSE,0,TRUE,5.263157895,0.4300612,0.23699689,"<p>See 2021 update from author below the original answer.</p>
<hr />
<p><strong>",-LRB- NN VB CD NN IN NN IN DT JJ NN . -LRB- NN -RRB- -LRB- NN JJ -RRB-,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],161,4930,765,3944,0,TRUE,FALSE,TRUE,5,519,FALSE,8,80,0,FALSE,0,FALSE,0,0.33480564,0.111595415,"Original answer (2011)</strong></p>
<p>",JJ NN -LRB- CD -RRB- NN NN -RRB-,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],161,4930,765,3944,0,TRUE,FALSE,TRUE,5,519,FALSE,31,119,170,FALSE,0,FALSE,3.225806452,0.8719758,0.76931524,"As someone who has been doing operational performance engineering on very large scale SOA web services for about a decade, I would prefer the behavior of LinkedList over ArrayList.","IN NN WP VBZ VBN VBG JJ NN NN IN RB JJ NN NNP NN NNS IN RB DT NN , PRP MD VB DT NN IN NNP IN NNP .",yes
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],161,4930,765,3944,0,TRUE,FALSE,TRUE,5,519,FALSE,65,301,125,FALSE,0,FALSE,1.538461538,0.9460399,0.81398326,"While the steady-state throughput of LinkedList is worse and therefore might lead to buying more hardware -- the behavior of ArrayList under pressure could lead to apps in a cluster expanding their arrays in near synchronicity and for large array sizes could lead to lack of responsiveness in the app and an outage, while under pressure, which is catastrophic behavior.</p>","IN DT JJ HYPH NN NN IN NNP VBZ JJR CC RB MD VB IN VBG JJR NN , DT NN IN NNP IN NN MD VB IN NNS IN DT NN VBG PRP$ NNS IN JJ NN CC IN JJ NN NNS MD VB IN NN IN NN IN DT NN CC DT NN , IN IN NN , WDT VBZ JJ NN .",yes
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],161,4930,765,3944,0,TRUE,FALSE,TRUE,5,519,FALSE,62,675,0,FALSE,0,FALSE,1.612903226,0.86286414,0.7159232,"<p>Similarly, you can get better throughput in an app from the default throughput tenured garbage collector, but once you get java apps with 10GB heaps you can wind up locking up the app for 25 seconds during a Full GCs which causes timeouts and failures in SOA apps and blows your SLAs if it occurs too often.","-LRB- RB , PRP MD VB JJR NN IN DT NN IN DT NN NN VBN NN NN , CC IN PRP VBP NN NNS IN CD NN NNS PRP MD VB RP VBG RP DT NN IN CD NNS IN DT JJ NNS WDT VBZ NNS CC NNS IN NNP NNS CC VBZ PRP$ NNS IN PRP VBZ RB RB .",yes
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],161,4930,765,3944,0,TRUE,FALSE,TRUE,5,519,FALSE,34,987,0,FALSE,0,FALSE,2.941176471,0.85839236,0.74111843,"Even though the CMS collector takes more resources and does not achieve the same raw throughput, it is a much better choice because it has more predictable and smaller latency.</p>
<p>","RB IN DT NNP NN VBZ JJR NNS CC VBZ RB VB DT JJ JJ NN , PRP VBZ DT RB JJR NN IN PRP VBZ RBR JJ CC JJR NN NFP -LRB- NN",yes
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],161,4930,765,3944,0,TRUE,FALSE,TRUE,5,519,FALSE,22,1171,0,FALSE,0,FALSE,4.545454545,0.8852731,0.73413837,ArrayList is only a better choice for performance if all you mean by performance is throughput and you can ignore latency.,NNP VBZ RB DT JJR NN IN NN IN DT PRP VBP IN NN VBZ NN CC PRP MD VB NN .,yes
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],161,4930,765,3944,0,TRUE,FALSE,TRUE,5,519,FALSE,18,1295,0,FALSE,0,TRUE,5.555555556,0.55209076,0.43566862,"In my experience at my job I cannot ignore worst-case latency.</p>
<p><strong>",IN PRP$ NN IN PRP$ NN PRP MD RB VB JJS HYPH NN NN . -LRB- NN JJ -RRB-,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],161,4930,765,3944,0,TRUE,FALSE,TRUE,5,519,FALSE,16,1373,0,FALSE,0,FALSE,0,0.3456977,0.13962784,"Update (Aug 27, 2021 -- 10 years later)</strong></p>
<p>","NN -LRB- NNP CD , CD , CD NNS RBR -RRB- SYM NNP -LRB- NN -RRB-",no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],161,4930,765,3944,0,TRUE,FALSE,TRUE,5,519,FALSE,27,1429,0,FALSE,0,FALSE,0,0.8091399,0.69602203,This answer (my most historically upvoted answer on SO as well) is very likely wrong (for reasons outlined in the comments below).,DT NN -LRB- PRP$ RBS RB VBN NN IN RB RB RB -RRB- VBZ RB JJ JJ -LRB- IN NNS VBN IN DT NNS RB -RRB- .,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],161,4930,765,3944,0,TRUE,FALSE,TRUE,5,519,FALSE,24,1561,21,FALSE,0,FALSE,0,0.8502588,0.7261017,"I'd like to add that ArrayList will optimize for sequential reading of memory and minimize cache-line and TLB misses, etc.","PRP MD VB TO VB IN NNP MD VB IN JJ NN IN NN CC VB NN HYPH NN CC NN NNS , FW .",no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],161,4930,765,3944,0,TRUE,FALSE,TRUE,5,519,FALSE,26,1685,0,FALSE,0,FALSE,0,0.8865477,0.76256853,The copying overhead when the array grows past the bounds is likely inconsequential by comparison (and can be done by efficient CPU operations).,DT NN NN WRB DT NN VBZ IN DT NNS VBZ RB JJ IN NN -LRB- CC MD VB VBN IN JJ NN NNS -RRB- .,yes
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],161,4930,765,3944,0,TRUE,FALSE,TRUE,5,519,FALSE,13,1831,0,FALSE,0,FALSE,0,0.88426423,0.7299267,This answer is also probably getting worse over time given hardware trends.,DT NN VBZ RB RB VBG JJR IN NN VBN NN NNS .,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],161,4930,765,3944,0,TRUE,FALSE,TRUE,5,519,FALSE,61,1908,0,FALSE,0,FALSE,1.639344262,0.93907356,0.78796166,"The only situations where a LinkedList might make sense would be something highly contrived where you had thousands of Lists any one of which might grow to be GB-sized, but where no good guess could be made at allocation-time of the List and setting them all to GB-sized would blow up the heap.","DT JJ NNS WRB DT NN MD VB NN MD VB NN RB JJ WRB PRP VBD NNS IN NNS DT CD IN WDT MD VB TO VB NN HYPH JJ , CC WRB DT JJ NN MD VB VBN IN NN HYPH NN IN DT NN CC VBG PRP DT IN NNP HYPH NN MD VB RP DT NN .",yes
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],161,4930,765,3944,0,TRUE,FALSE,TRUE,5,519,FALSE,68,2204,0,FALSE,0,FALSE,4.411764706,0.9161649,0.7311426,"And if you found some problem like that, then it really does call for reengineering whatever your solution is (and I don't like to lightly suggest reengineering old code because I myself maintain piles and piles of old code, but that'd be a very good case of where the original design has simply run out of runway and does need to be chucked).","CC IN PRP VBD DT NN IN DT , RB PRP RB VBZ VB IN NN WP PRP$ NN VBZ -LRB- CC PRP VBP RB VB TO RB VB VBG JJ NN IN PRP PRP VBP NNS CC NNS IN JJ NN , CC DT MD VB DT RB JJ NN IN WRB DT JJ NN VBZ RB VBN IN IN NN CC VBZ VB TO VB VBN -RRB- .",no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],161,4930,765,3944,0,TRUE,FALSE,TRUE,5,519,FALSE,17,2549,0,FALSE,0,FALSE,0,0.70279187,0.48769265,I'll still leave my decades-old poor opinion up there for you to read though.,PRP MD RB VB PRP$ NNS HYPH JJ JJ NN RB RB IN PRP TO VB RB .,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],161,4930,765,3944,0,TRUE,FALSE,TRUE,5,519,FALSE,8,2628,0,FALSE,0,FALSE,0,0.7419008,0.5857223,"Simple, logical and pretty wrong.</p>","JJ , JJ CC RB JJ , NN",no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],140,2680,3016,3203,100,TRUE,FALSE,TRUE,6,82,FALSE,22,0,0,FALSE,0,FALSE,0,0.50132775,0.3580617,"<p>Joshua Bloch, the author of LinkedList:</p>
<blockquote>
<p>Does anyone actually use LinkedList?","-LRB- NN NNP NNP , DT NN IN NN , NN -LRB- ADD -RRB- -LRB- NN VBZ NN RB VB NN .",no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],140,2680,3016,3203,100,TRUE,FALSE,TRUE,6,82,FALSE,28,101,0,FALSE,0,TRUE,3.571428571,0.42350405,0.28238434,"I wrote it, and I never use it.</p>
</blockquote>
<p>Link: <a href=""https://twitter.com/joshbloch/status/583813919019573248"" rel=""noreferrer"">","PRP VBD PRP , CC PRP RB VBP PRP -LRB- NN -LRB- NN -RRB- -LRB- NN : -LRB- SYM NN SYM `` ADD '' NN NN '' -RRB-",no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],140,2680,3016,3203,100,TRUE,FALSE,TRUE,6,82,FALSE,1,243,0,TRUE,0,FALSE,0,0.21265143,0.028577378,https://twitter.com/joshbloch/status/583813919019573248</a></p>,ADD,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],140,2680,3016,3203,100,TRUE,FALSE,TRUE,6,82,FALSE,31,307,0,FALSE,0,FALSE,0,0.8494911,0.6963703,"<p>I'm sorry for the answer not being as informative as the other answers, but I thought it would be the most self-explanatory if not revealing.</p>","-LRB- NN VBP JJ IN DT NN RB VBG RB JJ IN DT JJ NNS , CC PRP VBD PRP MD VB DT RBS NN HYPH JJ IN RB VBG . NN",no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],122,5523,173,23428,80,TRUE,FALSE,FALSE,7,212,FALSE,21,0,0,FALSE,0,FALSE,0,0.70622003,0.5713604,"<p>Yeah, I know, this is an ancient question, but I'll throw in my two cents:</p>","`` UH , PRP VBP , DT VBZ DT JJ NN , CC PRP MD VB RP PRP$ CD NNS RB -RRB-",no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],122,5523,173,23428,80,TRUE,FALSE,FALSE,7,212,FALSE,11,83,0,FALSE,0,TRUE,9.090909091,0.32802236,0.18001585,"<p>LinkedList is <em>almost always</em> the wrong choice, performance-wise.","-LRB- NN NN VBZ -LRB- NN RB RB SYM PRP -RRB- DT JJ NN , NN HYPH JJ .",yes
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],122,5523,173,23428,80,TRUE,FALSE,FALSE,7,212,FALSE,53,160,0,FALSE,0,FALSE,3.773584906,0.93378365,0.8155083,"There are some very specific algorithms where a LinkedList is called for, but those are very, very rare and the algorithm will usually specifically depend on LinkedList's ability to insert and delete elements in the middle of the list relatively quickly, once you've navigated there with a ListIterator.</p>","EX VBP DT RB JJ NNS WRB DT NN VBZ VBN IN , CC DT VBP RB , RB JJ CC DT NN MD RB RB VB IN NNP POS NN TO VB CC VB NNS IN DT NN IN DT NN RB RB , IN PRP VBP VBN RB IN DT NNP NN -RRB-",yes
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],122,5523,173,23428,80,TRUE,FALSE,FALSE,7,212,FALSE,18,469,64,FALSE,0,FALSE,5.555555556,0.8272791,0.74149233,<p>There is one common use case in which LinkedList outperforms ArrayList: that of a queue.,NN EX VBZ CD JJ NN NN IN WDT NNP VBZ NNP : DT IN DT NN .,yes
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],122,5523,173,23428,80,TRUE,FALSE,FALSE,7,212,FALSE,65,562,332,FALSE,0,TRUE,1.538461538,0.9016818,0.7864393,"However, if your goal is performance, instead of LinkedList you should also consider using an ArrayBlockingQueue (if you can determine an upper bound on your queue size ahead of time, and can afford to allocate all the memory up front), or this <a href=""http://www.javaspecialists.eu/archive/Issue027.html"" rel=""noreferrer"">CircularArrayList implementation</a>.","RB , IN PRP$ NN VBZ NN , RB IN NN PRP MD RB VB VBG DT NNP NN -LRB- IN PRP MD VB DT JJ NN IN PRP$ NN NN RB IN NN , CC MD VB TO VB PDT DT NN IN NN -RRB- , CC DT -LRB- DT NN SYM `` ADD '' NN `` NN '' -RRB- NNP NN -RRB- NFP",yes
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],122,5523,173,23428,80,TRUE,FALSE,FALSE,7,212,FALSE,36,925,0,FALSE,0,FALSE,2.777777778,0.8634699,0.7073255,"(Yes, it's from 2001, so you'll need to generify it, but I got comparable performance ratios to what's quoted in the article just now in a recent JVM)</p>","-LRB- UH , PRP VBZ IN CD , RB PRP MD VB TO VB PRP , CC PRP VBD JJ NN NNS IN WP VBZ VBN IN DT NN RB RB IN DT JJ NN -RRB- -LRB- NN -RRB-",no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],88,5696,0,3272,0,TRUE,TRUE,TRUE,8,113,FALSE,8,0,0,FALSE,0,FALSE,0,0.6339804,0.51765037,<p>It's an efficiency question.,-LRB- NN -RRB- PRP VBZ DT NN NN .,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],88,5696,0,3272,0,TRUE,TRUE,TRUE,8,113,FALSE,27,32,0,FALSE,10,TRUE,11.11111111,0.88020957,0.78637683,"<code>LinkedList</code> is fast for appending or deleting large elements at the ends of a list, but slow to access a specific element.","-LRB- NN NN -RRB- VBZ JJ IN NN CC VBG JJ NNS IN DT NNS IN DT NN , CC JJ TO VB DT JJ NN .",yes
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],88,5696,0,3272,0,TRUE,TRUE,TRUE,8,113,FALSE,5,167,6,FALSE,9,TRUE,20,0.30844364,0.12448274,<code>ArrayList</code>,-LRB- NN NFP NN -RRB-,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],88,5696,0,3272,0,TRUE,TRUE,TRUE,8,113,FALSE,41,190,0,TRUE,0,TRUE,4.87804878,0.8226335,0.7092971,"is fast for accessing a specific element but can be slow to add to either end, and especially slow to delete in the middle.</p>
<p><a href=""https://web.archive.org/web/20090204031044/http://www.javafaq.nu/java-article1111.html"" rel=""nofollow noreferrer"">","VBZ JJ IN VBG DT JJ NN CC MD VB JJ TO VB IN DT NN , CC RB JJ TO VB IN DT NN NN -LRB- NN , NN NN SYM `` ADD '' FW `` FW FW '' -RRB-",no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],88,5696,0,3272,0,TRUE,TRUE,TRUE,8,113,FALSE,30,444,9,FALSE,0,TRUE,6.666666667,0.55947495,0.4186251,"Array vs ArrayList vs LinkedList vs Vector</a> goes more in depth, as does
<a href=""http://en.wikipedia.org/wiki/Linked_list"" rel=""nofollow noreferrer"">","NN IN NN IN NN IN NN -LRB- NN -RRB- VBZ JJR IN NN , IN VBZ -LRB- DT NN SYM `` FW '' FW `` FW FW '' -RRB-",no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],88,5696,0,3272,0,TRUE,TRUE,TRUE,8,113,FALSE,2,596,0,FALSE,0,FALSE,0,0.34531128,0.16582945,Linked List</a>.</p>,VBN NN,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],61,4667,1028,2115,0,TRUE,TRUE,TRUE,9,1309,FALSE,17,0,0,FALSE,0,FALSE,0,0.6487245,0.45936567,<p>Correct or Incorrect: Please execute test locally and decide for yourself!</p>,-LRB- NN JJ CC JJ : UH VB NN RB CC VB IN PRP . '' -RRB-,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],61,4667,1028,2115,0,TRUE,TRUE,TRUE,9,1309,FALSE,17,83,63,FALSE,19,TRUE,5.882352941,0.4258409,0.24009416,<p>Edit/Remove is faster in <code>LinkedList</code> than <code>ArrayList</code>.</p>,"-LRB- NN NN , VB VBZ JJR IN -LRB- NN NN -RRB- IN -LRB- ADD -RRB- -RRB-",yes
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],61,4667,1028,2115,0,TRUE,TRUE,TRUE,9,1309,FALSE,33,169,9,FALSE,14,TRUE,6.060606061,0.7011067,0.5883848,"<p><code>ArrayList</code>, backed by <code>Array</code>, which needs to be double the size, is worse in large volume application.</p>","NN NN -RRB- NN NFP NN , VBN IN -LRB- NN -RRB- NN -LRB- , NN , WDT VBZ TO VB JJ DT NN , VBZ JJR IN JJ NN NN NN -RRB-",yes
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],61,4667,1028,2115,0,TRUE,TRUE,TRUE,9,1309,FALSE,12,304,0,FALSE,0,FALSE,0,0.7863996,0.68588984,<p>Below is the unit test result for each operation.,-LRB- NN RB VBZ DT NN NN NN IN DT NN .,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],61,4667,1028,2115,0,TRUE,TRUE,TRUE,9,1309,FALSE,7,356,0,FALSE,0,FALSE,0,0.70457363,0.5886947,Timing is given in Nanoseconds.</p>,NN VBZ VBN IN NNS . -RRB-,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],61,4667,1028,2115,0,TRUE,TRUE,TRUE,9,1309,FALSE,3,410,32,FALSE,0,FALSE,0,0.47140956,0.23628381,Operation ArrayList LinkedList,NN NN NN,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],61,4667,1028,2115,0,TRUE,TRUE,TRUE,9,1309,FALSE,8,637,0,FALSE,0,FALSE,0,0.43458617,0.09551818,Add (insert-randomly) 36527 29193,VB -LRB- NN HYPH RB -RRB- CD CD,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],61,4667,1028,2115,0,TRUE,TRUE,TRUE,9,1309,FALSE,6,707,0,TRUE,0,FALSE,0,0.43942767,0.07332153,"remove (Delete) 20,56,9095 20,45,4904",VB -LRB- NN -RRB- CD CD,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],61,4667,1028,2115,0,TRUE,TRUE,TRUE,9,1309,FALSE,9,782,0,TRUE,0,FALSE,11.11111111,0.3605211,0.10383741,"contains (Search) 186,15,704 189,64,981
</code></pre>",VBZ -LRB- NN -RRB- CD CD -LRB- NN -RRB-,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],61,4667,1028,2115,0,TRUE,TRUE,TRUE,9,1309,FALSE,7,877,0,FALSE,0,FALSE,14.28571429,0.42478132,0.28591213,<p>Here's the code:</p>,-LRB- NN RB VBZ DT NN NN -RRB-,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],61,4667,1028,2115,0,TRUE,TRUE,TRUE,9,1309,FALSE,5,962,0,TRUE,0,FALSE,0,0.6004081,0.44474915,import java.util.*;,NN NN . NFP :,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],61,4667,1028,2115,0,TRUE,TRUE,TRUE,9,1309,FALSE,21,983,13,TRUE,0,FALSE,0,0.51913124,0.2815327,"public class ArrayListVsLinkedList {
private static final int MAX = 500000;
String[] strings = maxArray();",JJ NN NNP : JJ JJ JJ NN NN SYM CD : NN -LRB- -RRB- NNS SYM NN -LRB- -RRB- :,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],61,4667,1028,2115,0,TRUE,TRUE,TRUE,9,1309,FALSE,42,1171,184,FALSE,0,FALSE,0,0.5135863,0.18023399,"@Test
public void arrayListAddAll() {
Watch watch = new Watch();
List&lt;String&gt; stringList = Arrays.asList(strings);
List&lt;String&gt; arrayList = new ArrayList&lt;String&gt;(MAX);",SYM NN JJ NN NNP -LRB- -RRB- -LRB- NN NN SYM JJ NNP -LRB- -RRB- : NNP : NNP : NNP SYM NNP -LRB- NNS -RRB- : NNP : NNP : NN SYM JJ NNP : NNP : -LRB- NNP -RRB- :,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],61,4667,1028,2115,0,TRUE,TRUE,TRUE,9,1309,FALSE,19,1394,0,TRUE,0,FALSE,0,0.4544404,0.05559242,"watch.start();
arrayList.addAll(stringList);
watch.totalTime(""Array List addAll() = "");//101,16719",NN -LRB- -RRB- : ADD NNP -RRB- : NNP -LRB- `` NNP NNP NNP -RRB- SYM '' -RRB- CD,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],61,4667,1028,2115,0,TRUE,TRUE,TRUE,9,1309,FALSE,28,1532,0,FALSE,0,FALSE,0,0.53200245,0.19132926,"@Test
public void linkedListAddAll() throws Exception {
Watch watch = new Watch();
List&lt;String&gt; stringList = Arrays.asList(strings);",SYM NN JJ NN NN -LRB- -RRB- VBZ NN NFP VB NN SYM JJ NNP -LRB- -RRB- : FW : NNP : NN SYM NNP NNS -RRB- :,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],61,4667,1028,2115,0,TRUE,TRUE,TRUE,9,1309,FALSE,33,1700,0,TRUE,0,FALSE,0,0.48470542,0.10288663,"watch.start();
List&lt;String&gt; linkedList = new LinkedList&lt;String&gt;();
linkedList.addAll(stringList);
watch.totalTime(""Linked List addAll() = ""); //2623,29291",NN -LRB- -RRB- : NNP : NNP : NN SYM JJ NNP : NNP : -LRB- -RRB- : ADD NNP -RRB- : NNP SYM VBN NN NNP -RRB- SYM '' -RRB- : CD,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],61,4667,1028,2115,0,TRUE,TRUE,TRUE,9,1309,FALSE,15,1915,8,FALSE,0,FALSE,0,0.65974087,0.39933208,//Note: ArrayList is 26 time faster here than LinkedList for addAll(),SYM NN : NNP VBZ CD NN JJR RB IN NN IN NNP -LRB- -RRB-,yes
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],61,4667,1028,2115,0,TRUE,TRUE,TRUE,9,1309,FALSE,31,2065,117,FALSE,0,FALSE,0,0.5252137,0.18880525,"@Test
public void arrayListAdd() {
Watch watch = new Watch();
List&lt;String&gt; arrayList = new ArrayList&lt;String&gt;(MAX);",SYM NN JJ NN NNP -LRB- -RRB- -LRB- NN NN SYM JJ NNP -LRB- -RRB- : NNP : NNP : NN SYM JJ NNP : NNP : -LRB- NNP -RRB- :,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],61,4667,1028,2115,0,TRUE,TRUE,TRUE,9,1309,FALSE,27,2221,0,TRUE,0,FALSE,0,0.50022304,0.11154575,"watch.start();
for (String string : strings)
arrayList.add(string);
watch.totalTime(""Array List add() = "");//152,46840",NN -RRB- : IN -LRB- NN NN : NNS -RRB- ADD -LRB- NN -RRB- : NN -LRB- `` NN NN VB -LRB- -RRB- SYM '' -RRB- CD,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],61,4667,1028,2115,0,TRUE,TRUE,TRUE,9,1309,FALSE,16,2391,0,FALSE,0,FALSE,0,0.5043632,0.1527457,"@Test
public void linkedListAdd() {
Watch watch = new Watch();",SYM NN JJ NN NN -LRB- -RRB- NFP VB NN SYM JJ NN -LRB- -RRB- :,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],61,4667,1028,2115,0,TRUE,TRUE,TRUE,9,1309,FALSE,42,2475,0,FALSE,0,FALSE,0,0.5139767,0.13568057,"List&lt;String&gt; linkedList = new LinkedList&lt;String&gt;();
watch.start();
for (String string : strings)
linkedList.add(string);
watch.totalTime(""Linked List add() = ""); //966,62216",NNP : NNP : NN SYM JJ NNP : NNP : -LRB- -RRB- : NN -RRB- : IN -LRB- NN NN : NNS -RRB- NN -LRB- NN -RRB- : NN -LRB- `` VBN NN NN -LRB- -RRB- SYM '' -RRB- : CD,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],61,4667,1028,2115,0,TRUE,TRUE,TRUE,9,1309,FALSE,13,2721,8,FALSE,0,FALSE,0,0.6726074,0.552288,//Note: ArrayList is 9 times faster than LinkedList for add sequentially,SYM NN : NNP VBZ CD NNS JJR IN NN IN VB RB,yes
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],61,4667,1028,2115,0,TRUE,TRUE,TRUE,9,1309,FALSE,4,2819,0,FALSE,0,FALSE,0,0.026995305,-0.076093145,INSERT IN BETWEEN ///////////////////////////////////////,VB IN NNP NNP,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],61,4667,1028,2115,0,TRUE,TRUE,TRUE,9,1309,FALSE,50,2882,187,FALSE,0,FALSE,0,0.49428076,0.1508371,"@Test
public void arrayListInsertOne() {
Watch watch = new Watch();
List&lt;String&gt; stringList = Arrays.asList(strings);
List&lt;String&gt; arrayList = new ArrayList&lt;String&gt;(MAX + MAX / 10);
arrayList.addAll(stringList);",SYM NN JJ NN NNP -LRB- -RRB- -LRB- NN NN SYM JJ NNP -LRB- -RRB- : NNP : NNP : NNP SYM NNP -LRB- NNS -RRB- : NNP : NNP : NN SYM JJ NNP : NNP : -LRB- NNP SYM NNP SYM CD -RRB- : ADD NNP -RRB- :,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],61,4667,1028,2115,0,TRUE,TRUE,TRUE,9,1309,FALSE,56,3157,0,FALSE,0,FALSE,0,0.42570966,0.1288331,"String insertString0 = getString(true, MAX / 2 + 10);
String insertString1 = getString(true, MAX / 2 + 20);
String insertString2 = getString(true, MAX / 2 + 30);
String insertString3 = getString(true, MAX / 2 + 40);","NN NN SYM NN -LRB- JJ , NN SYM CD SYM CD -RRB- : NN NN SYM NN -LRB- JJ , NN SYM CD SYM CD -RRB- : NN NN SYM NN -LRB- JJ , NN SYM CD SYM CD -RRB- : NN NN SYM NN -LRB- JJ , NN SYM CD SYM CD -RRB- :",no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],61,4667,1028,2115,0,TRUE,TRUE,TRUE,9,1309,FALSE,4,1394,0,TRUE,0,FALSE,0,0.44747442,0.032877058,watch.start();,NN -LRB- -RRB- :,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],61,4667,1028,2115,0,TRUE,TRUE,TRUE,9,1309,FALSE,17,3430,0,TRUE,0,FALSE,0,0.49454582,0.101387426,"arrayList.add(insertString0);
arrayList.add(insertString1);
arrayList.add(insertString2);
arrayList.add(insertString3);",NNP -LRB- NNP -RRB- : ADD ADD -RRB- : ADD FW -RRB- : ADD NNP -RRB- :,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],61,4667,1028,2115,0,TRUE,TRUE,TRUE,9,1309,FALSE,13,3583,0,TRUE,0,FALSE,0,0.41661337,0.08028604,"watch.totalTime(""Array List add() = "");//36527
}",NNP -LRB- `` NNP NN VB -LRB- -RRB- SYM '' -RRB- CD -RRB-,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],61,4667,1028,2115,0,TRUE,TRUE,TRUE,9,1309,FALSE,45,3641,0,FALSE,0,FALSE,0,0.51302195,0.16168283,"@Test
public void linkedListInsertOne() {
Watch watch = new Watch();
List&lt;String&gt; stringList = Arrays.asList(strings);
List&lt;String&gt; linkedList = new LinkedList&lt;String&gt;();
linkedList.addAll(stringList);",SYM NN JJ NN NNP -LRB- -RRB- -LRB- NN NN SYM JJ NNP -LRB- -RRB- : NNP : NNP : NNP SYM NNP -LRB- NNS -RRB- : NNP : NNP : NN SYM JJ NNP : NNP : -LRB- -RRB- : ADD FW -RRB- :,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],61,4667,1028,2115,0,TRUE,TRUE,TRUE,9,1309,FALSE,17,4179,0,TRUE,0,FALSE,0,0.49454582,0.101387426,"linkedList.add(insertString0);
linkedList.add(insertString1);
linkedList.add(insertString2);
linkedList.add(insertString3);",NNP -LRB- NNP -RRB- : ADD NNP -RRB- : ADD NNP -RRB- : FW FW -RRB- :,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],61,4667,1028,2115,0,TRUE,TRUE,TRUE,9,1309,FALSE,10,4336,0,TRUE,0,FALSE,0,0.41733542,0.15571718,"watch.totalTime(""Linked List add = "");//29193
}",NN -LRB- `` VBN NN NN SYM '' -RRB- -RRB-,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],61,4667,1028,2115,0,TRUE,TRUE,TRUE,9,1309,FALSE,14,4394,50,FALSE,0,FALSE,0,0.7245878,0.6323759,//Note: LinkedList is 3000 nanosecond faster than ArrayList for insert randomly.,NFP NN : NN VBZ CD NN JJR IN NN IN NN RB .,yes
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],61,4667,1028,2115,0,TRUE,TRUE,TRUE,9,1309,FALSE,44,4565,201,FALSE,0,FALSE,0,0.5363542,0.20639129,"@Test
public void arrayListRemove() throws Exception {
Watch watch = new Watch();
List&lt;String&gt; stringList = Arrays.asList(strings);
List&lt;String&gt; arrayList = new ArrayList&lt;String&gt;(MAX);","SYM NN JJ NN NN -LRB- -RRB- VBZ NN , NN NN SYM JJ NNP -LRB- -RRB- : NNP : NNP : NNP SYM NNP -LRB- NNS -RRB- : NNP : NNP : NN SYM JJ NNP : NNP : -LRB- NNP -RRB- :",no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],61,4667,1028,2115,0,TRUE,TRUE,TRUE,9,1309,FALSE,32,4805,0,TRUE,0,FALSE,0,0.44602415,0.12388671,"arrayList.addAll(stringList);
String searchString0 = getString(true, MAX / 2 + 10);
String searchString1 = getString(true, MAX / 2 + 20);","ADD NNP -RRB- : NN NN SYM NN -LRB- JJ , NNP SYM CD SYM CD -RRB- : NN NN SYM NN -LRB- JJ , NN SYM CD SYM CD -RRB- :",no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],61,4667,1028,2115,0,TRUE,TRUE,TRUE,9,1309,FALSE,22,4968,0,TRUE,0,FALSE,0,0.47661287,0.08104711,"watch.start();
arrayList.remove(searchString0);
arrayList.remove(searchString1);
watch.totalTime(""Array List remove() = "");//20,56,9095",NN -LRB- -RRB- : NNP -RRB- : NNP -RRB- : NN NFP NN NN VB -LRB- -RRB- SYM '' -RRB- SYM CD,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],61,4667,1028,2115,0,TRUE,TRUE,TRUE,9,1309,FALSE,38,5151,0,FALSE,0,FALSE,0,0.5376102,0.17205115,"@Test
public void linkedListRemove() throws Exception {
Watch watch = new Watch();
List&lt;String&gt; linkedList = new LinkedList&lt;String&gt;();
linkedList.addAll(Arrays.asList(strings));",SYM NN JJ NN NN -LRB- -RRB- VBZ NN -LRB- NN NN SYM JJ NNP -LRB- -RRB- : NNP : NNP : NN SYM JJ NNP : NNP : -LRB- -RRB- : ADD NNP NNS -RRB- -RRB- :,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],61,4667,1028,2115,0,TRUE,TRUE,TRUE,9,1309,FALSE,28,4843,0,FALSE,0,FALSE,0,0.4202866,0.12248774,"String searchString0 = getString(true, MAX / 2 + 10);
String searchString1 = getString(true, MAX / 2 + 20);","NN NN SYM NN -LRB- JJ , NNP SYM CD SYM CD -RRB- : NN NN SYM NN -LRB- JJ , NN SYM CD SYM CD -RRB- :",no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],61,4667,1028,2115,0,TRUE,TRUE,TRUE,9,1309,FALSE,20,5503,0,TRUE,0,FALSE,0,0.49434015,0.114152186,"watch.start();
linkedList.remove(searchString0);
linkedList.remove(searchString1);
watch.totalTime(""Linked List remove = "");//20,45,4904",NN -LRB- -RRB- : NNP -RRB- : NNP -RRB- : NN SYM VBN NN NN SYM '' -RRB- SYM CD,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],61,4667,1028,2115,0,TRUE,TRUE,TRUE,9,1309,FALSE,14,5687,49,FALSE,0,FALSE,0,0.655144,0.5658769,//Note: LinkedList is 10 millisecond faster than ArrayList while removing item.,NFP NN : NN VBZ CD NN JJR IN NN IN VBG NN .,yes
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],61,4667,1028,2115,0,TRUE,TRUE,TRUE,9,1309,FALSE,44,5849,201,FALSE,0,FALSE,0,0.5363542,0.20639129,"@Test
public void arrayListSearch() throws Exception {
Watch watch = new Watch();
List&lt;String&gt; stringList = Arrays.asList(strings);
List&lt;String&gt; arrayList = new ArrayList&lt;String&gt;(MAX);","SYM NN JJ NN NNP -LRB- -RRB- VBZ NN , NN NN SYM JJ NNP -LRB- -RRB- : NNP : NNP : NNP SYM NNP -LRB- NNS -RRB- : NNP : NNP : NN SYM JJ NNP : NNP : -LRB- NNP -RRB- :",no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],61,4667,1028,2115,0,TRUE,TRUE,TRUE,9,1309,FALSE,24,6252,0,TRUE,0,FALSE,0,0.48318705,0.09160046,"watch.start();
arrayList.contains(searchString0);
arrayList.contains(searchString1);
watch.totalTime(""Array List addAll() time = "");//186,15,704
}",NN -LRB- -RRB- : ADD NNP -RRB- : ADD NNP -RRB- : NNP NFP NNP NN FW -RRB- NN SYM '' -RRB- CD SYM,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],61,4667,1028,2115,0,TRUE,TRUE,TRUE,9,1309,FALSE,38,6432,0,FALSE,0,FALSE,0,0.5376102,0.17205115,"@Test
public void linkedListSearch() throws Exception {
Watch watch = new Watch();
List&lt;String&gt; linkedList = new LinkedList&lt;String&gt;();
linkedList.addAll(Arrays.asList(strings));",SYM NN JJ NN NNP -LRB- -RRB- VBZ NN -LRB- NN NN SYM JJ NNP -LRB- -RRB- : NNP : NNP : NN SYM JJ NNP : NNP : -LRB- -RRB- : ADD NNP NNS -RRB- -RRB- :,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],61,4667,1028,2115,0,TRUE,TRUE,TRUE,9,1309,FALSE,23,6784,0,TRUE,0,FALSE,0,0.48318705,0.09160046,"watch.start();
linkedList.contains(searchString0);
linkedList.contains(searchString1);
watch.totalTime(""Linked List addAll() time = "");//189,64,981
}",NNP -LRB- -RRB- : ADD NNP -RRB- : ADD -RRB- : NN NFP VBN NN FW -RRB- NN SYM '' -RRB- CD -RRB-,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],61,4667,1028,2115,0,TRUE,TRUE,TRUE,9,1309,FALSE,11,6967,52,FALSE,0,FALSE,0,0.5824404,0.40346488,//Note: Linked List is 500 Milliseconds faster than ArrayList,NFP NN : VBN NN VBZ CD NNS JJR IN NN,yes
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],61,4667,1028,2115,0,TRUE,TRUE,TRUE,9,1309,FALSE,11,7034,0,TRUE,0,FALSE,0,0.6426022,0.5280619,"class Watch {
private long startTime;
private long endTime;",NN VB HYPH JJ JJ NN : JJ JJ NN :,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],61,4667,1028,2115,0,TRUE,TRUE,TRUE,9,1309,FALSE,13,7119,0,TRUE,0,FALSE,0,0.44975787,0.11592423,"public void start() {
startTime = System.nanoTime();
}",JJ NN NN -LRB- -RRB- -LRB- NN SYM NNP -LRB- -RRB- : NFP,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],61,4667,1028,2115,0,TRUE,TRUE,TRUE,9,1309,FALSE,13,7203,0,TRUE,0,FALSE,0,0.4295729,0.09345246,"private void stop() {
endTime = System.nanoTime();
}",JJ NN NN -LRB- -RRB- -LRB- NN SYM NNP -LRB- -RRB- : NFP,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],61,4667,1028,2115,0,TRUE,TRUE,TRUE,9,1309,FALSE,22,7285,0,TRUE,0,FALSE,0,0.4595452,0.122574195,"public void totalTime(String s) {
stop();
System.out.println(s + (endTime - startTime));
}
}","JJ NN NN -LRB- NN NN , NN -LRB- -RRB- : NNP SYM -LRB- FW HYPH NN -RRB- -RRB- : SYM -RRB-",no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],61,4667,1028,2115,0,TRUE,TRUE,TRUE,9,1309,FALSE,24,7420,0,TRUE,0,FALSE,0,0.4000752,0.22370073,"private String[] maxArray() {
String[] strings = new String[MAX];
Boolean result = Boolean.",JJ NN -LRB- -RRB- NNP -LRB- -RRB- : NN -LRB- -RRB- NNS SYM JJ NN -LRB- NNP -RRB- : NN NN SYM NNP .,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],61,4667,1028,2115,0,TRUE,TRUE,TRUE,9,1309,FALSE,38,7527,0,FALSE,0,FALSE,10.52631579,0.47895345,0.23339488,"TRUE;
for (int i = 0; i &lt; MAX; i++) {
strings[i] = getString(result, i);
result = !result;
}
return strings;
}","JJ : IN -LRB- NN CD SYM CD : CD NN : NNP : NN HYPH NNS -LRB- CD -RRB- SYM NN -LRB- NN , CD -RRB- : NN SYM . NN : JJ NN NNS : NFP",no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],61,4667,1028,2115,0,TRUE,TRUE,TRUE,9,1309,FALSE,28,7698,0,TRUE,0,FALSE,10.71428571,0.43578315,0.19031267,"private String getString(Boolean result, int i) {
return String.valueOf(result) + i + String.valueOf(!result);
}
}
</code></pre>","JJ NN NN -LRB- NN NN , NN LS -RRB- -LRB- NN NN NN -RRB- SYM NN SYM NN NN -RRB- : SYM . , NN NN -RRB-",no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],58,4090,1605,2886,80,TRUE,TRUE,TRUE,10,665,FALSE,10,0,9,FALSE,9,TRUE,10,0.56913745,0.44215617,<p><code>ArrayList</code> is essentially an array.,NN NN NN NN -RRB- VBZ RB DT NN .,yes
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],58,4090,1605,2886,80,TRUE,TRUE,TRUE,10,665,FALSE,12,51,0,FALSE,10,TRUE,16.66666667,0.6741003,0.58406144,<code>LinkedList</code> is implemented as a double linked list.,-LRB- NN NN -RRB- VBZ VBN IN DT JJ VBN NN .,yes
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],58,4090,1605,2886,80,TRUE,TRUE,TRUE,10,665,FALSE,38,121,56,FALSE,12,TRUE,5.263157895,0.56791323,0.40008852,"<p>The <code>get</code> is pretty clear. O(1) for <code>ArrayList</code>, because <code>ArrayList</code> allow random access by using index.","NFP -RRB- DT -LRB- NN -LRB- , NN -RRB- VBZ RB JJ . -LRB- LS -RRB- IN -LRB- NN NN -LRB- , NN , IN -LRB- NN NN NFP NN -RRB- VB JJ NN IN VBG NN .",yes
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],58,4090,1605,2886,80,TRUE,TRUE,TRUE,10,665,FALSE,21,262,0,FALSE,10,TRUE,4.761904762,0.804092,0.6582109,"O(n) for <code>LinkedList</code>, because it needs to find the index first.","-LRB- NN -RRB- IN -LRB- NN -RRB- NN -LRB- , NN , IN PRP VBZ TO VB DT NN RB .",yes
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],58,4090,1605,2886,80,TRUE,TRUE,TRUE,10,665,FALSE,18,338,0,FALSE,9,TRUE,11.11111111,0.48157233,0.30560717,Note: there are different versions of <code>add</code> and <code>remove</code>. </p>,NN : EX VBP JJ NNS IN -LRB- NN NN -RRB- CC -LRB- NN NFP NN NFP NN,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],58,4090,1605,2886,80,TRUE,TRUE,TRUE,10,665,FALSE,16,424,0,FALSE,10,TRUE,6.25,0.74219203,0.63832486,"<p><code>LinkedList</code> is faster in add and remove, but slower in get.","NN NN NN -RRB- VBZ JJR IN VB CC VB , CC JJR IN VB .",yes
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],58,4090,1605,2886,80,TRUE,TRUE,TRUE,10,665,FALSE,10,499,0,FALSE,10,TRUE,10,0.44584873,0.27298275,"In brief, <code>LinkedList</code>","IN NN , -LRB- NN NN -LRB- , NN -RRB-",no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],58,4090,1605,2886,80,TRUE,TRUE,TRUE,10,665,FALSE,6,533,0,TRUE,0,FALSE,0,0.46739355,0.28351787,should be preferred if: </p>,MD VB VBN IN : NN,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],58,4090,1605,2886,80,TRUE,TRUE,TRUE,10,665,FALSE,38,563,0,FALSE,0,FALSE,2.631578947,0.5430354,0.4216768,"<ol>
<li>there are no large number of random access of element </li>
<li>there are a large number of add/remove operations</li>
</ol>","-LRB- NN -RRB- -LRB- NNP -RRB- EX VBP DT JJ NN IN JJ NN IN NN -LRB- NNP -RRB- -LRB- NNP -RRB- EX VBP DT JJ NN IN NN , VB NNS -LRB- NNP -RRB- -LRB- NN -RRB-",no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],58,4090,1605,2886,80,TRUE,TRUE,TRUE,10,665,FALSE,6,698,15,FALSE,0,TRUE,16.66666667,0.29389167,0.13825388,<p>=== <strong>ArrayList</strong>,NN -LRB- NN FW JJ -RRB-,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],58,4090,1605,2886,80,TRUE,TRUE,TRUE,10,665,FALSE,21,766,27,FALSE,0,FALSE,0,0.5138407,0.38437912,"<ul>
<li>add at the end of ArrayList</li>
<li>require memory resizing cost.","-LRB- NN -RRB- -LRB- SYM VB IN DT NN IN NN , NNP -RRB- -LRB- SYM VBP NN NN NN .",no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],58,4090,1605,2886,80,TRUE,TRUE,TRUE,10,665,FALSE,18,843,0,FALSE,0,FALSE,0,0.4081537,0.13687241,"</li>
<li>O(n) worst, O(1) amortized</li>","-LRB- NNP -RRB- -LRB- SYM NNP FW -RRB- JJS , NNP -LRB- CD -RRB- VBN -LRB- NNP -RRB-",no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],58,4090,1605,2886,80,TRUE,TRUE,TRUE,10,665,FALSE,13,885,0,FALSE,0,FALSE,0,0.43105507,0.2284909,"</ul></li>
<li>add(int index, E element)","GW NN -RRB- -LRB- SYM VB -LRB- NN NN , NN NN -RRB-",no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],58,4090,1605,2886,80,TRUE,TRUE,TRUE,10,665,FALSE,45,928,0,FALSE,0,FALSE,2.222222222,0.4180166,0.22794674,"<ul>
<li>add to a specific index position</li>
<li>require shifting &amp; possible memory resizing cost</li>
<li>O(n)</li>
</ul></li>
<li>remove(int index)",-LRB- NN -RRB- -LRB- LS -RRB- VB IN DT JJ NN NN -LRB- NNP -RRB- -LRB- SYM VB NN NN : JJ NN NN NN FW -RRB- -LRB- SYM NN NN -RRB- -LRB- FW -RRB- GW NN -RRB- -LRB- SYM VB -LRB- NN NN -RRB-,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],58,4090,1605,2886,80,TRUE,TRUE,TRUE,10,665,FALSE,41,1085,0,FALSE,0,FALSE,2.43902439,0.3602817,0.18022697,"<ul>
<li>remove a specified element</li>
<li>require shifting &amp; possible memory resizing cost</li>
<li>O(n)</li>
</ul></li>
<li>remove(Object o)","-LRB- NN -RRB- -LRB- SYM VB DT VBN NN , NNP -RRB- -LRB- SYM VBP NN NN : JJ NN NN NN FW -RRB- -LRB- SYM NN NN -RRB- -LRB- FW -RRB- GW NN -RRB- -LRB- SYM VB -LRB- NN -RRB-",no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],58,4090,1605,2886,80,TRUE,TRUE,TRUE,10,665,FALSE,52,1236,0,FALSE,0,FALSE,0,0.58579284,0.4181445,"<ul>
<li>remove the first occurrence of the specified element from this list</li>
<li>need to search the element first, and then shifting &amp; possible memory resizing cost</li>
<li>O(n)</li>
</ul></li>
</ul>","-LRB- NN -RRB- -LRB- SYM VB DT JJ NN IN DT VBN NN IN DT NN -LRB- NNP -RRB- -LRB- NN TO VB DT NN RB , CC RB VBG NN : JJ NN NN NN -LRB- NNP -RRB- -LRB- SYM NN ADD -RRB- -LRB- FW -RRB- FW -RRB- -LRB- FW -RRB-",no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],58,4090,1605,2886,80,TRUE,TRUE,TRUE,10,665,FALSE,4,1447,0,FALSE,0,TRUE,0,0.29389167,0.13825388,<p>=== <strong>LinkedList</strong>,FW -LRB- ADD -RRB-,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],58,4090,1605,2886,80,TRUE,TRUE,TRUE,10,665,FALSE,14,1491,0,FALSE,0,FALSE,0,0.24904636,0.07731142,"<ul>
<li><p>add(E e)</p>",-LRB- NNP -RRB- -LRB- NNP -RRB- -LRB- NNP NNP FW -RRB- -LRB- NN -RRB-,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],58,4090,1605,2886,80,TRUE,TRUE,TRUE,10,665,FALSE,43,1517,0,FALSE,0,FALSE,0,0.43554348,0.2690807,"<ul>
<li>add to the end of the list</li>
<li>O(1)</li>
</ul></li>
<li><p>add(int index, E element)</p>","-LRB- NN -RRB- -LRB- LS -RRB- VB IN DT NN IN DT NN -LRB- NNP -RRB- -LRB- SYM NN -LRB- CD -RRB- -LRB- FW -RRB- GW FW -RRB- -LRB- ADD -RRB- -LRB- NN VB -LRB- NN NN , NN NN -RRB- . -RRB-",no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],58,4090,1605,2886,80,TRUE,TRUE,TRUE,10,665,FALSE,36,1621,0,FALSE,0,FALSE,0,0.3923114,0.19367051,"<ul>
<li>insert at specified position</li>
<li>need to find the position first</li>
<li>O(n)</li>
</ul></li>
<li>remove()",-LRB- NN -RRB- -LRB- SYM NN IN VBN NN -LRB- NNP -RRB- -LRB- ADD TO VB DT NN JJ -LRB- NNP -RRB- -LRB- SYM NN NN -RRB- -LRB- FW -RRB- ADD -RRB- -LRB- NN -LRB- -RRB-,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],58,4090,1605,2886,80,TRUE,TRUE,TRUE,10,665,FALSE,33,1744,0,FALSE,0,FALSE,0,0.37960383,0.20890912,"<ul>
<li>remove first element of the list</li>
<li>O(1)</li>
</ul></li>
<li>remove(int index)",-LRB- NN -RRB- -LRB- SYM VB JJ NN IN DT NN -LRB- NNP -RRB- -LRB- SYM NN -LRB- CD -RRB- -LRB- FW -RRB- GW NN -RRB- -LRB- SYM VB -LRB- NN NN -RRB-,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],58,4090,1605,2886,80,TRUE,TRUE,TRUE,10,665,FALSE,13,1839,0,FALSE,0,FALSE,0,0.42218578,0.25766173,"<ul>
<li>remove element with specified index</li>","-LRB- NN -RRB- -LRB- SYM VB NN IN VBN NN , NNP -RRB-",no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],58,4090,1605,2886,80,TRUE,TRUE,TRUE,10,665,FALSE,18,1889,0,FALSE,0,FALSE,0,0.4591626,0.28941098,"<li>need to find the element first</li>
<li>O(n)</li>","-LRB- NN TO VB DT NN JJ , NNP -RRB- -LRB- SYM NNP NN -RRB- -LRB- NNP -RRB-",no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],58,4090,1605,2886,80,TRUE,TRUE,TRUE,10,665,FALSE,9,1202,0,FALSE,0,FALSE,0,0.25664607,0.054966003,"</ul></li>
<li>remove(Object o)",-LRB- NN -RRB- -LRB- SYM VB -LRB- NN -RRB-,no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],58,4090,1605,2886,80,TRUE,TRUE,TRUE,10,665,FALSE,39,1976,0,FALSE,0,FALSE,0,0.45744097,0.29460198,"<ul>
<li>remove the first occurrence of the specified element</li>
<li>need to find the element first</li>
<li>O(n)</li>
</ul></li>
</ul>","-LRB- NN -RRB- -LRB- SYM VB DT JJ NN IN DT VBN NN -LRB- NNP -RRB- -LRB- FW TO VB DT NN JJ , NNP -RRB- -LRB- SYM NN FW -RRB- -LRB- FW -RRB- NNP -RRB- -LRB- FW -RRB-",no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],58,4090,1605,2886,80,TRUE,TRUE,TRUE,10,665,FALSE,12,2115,0,FALSE,0,FALSE,16.66666667,0.6035116,0.4492116,"<p>Here is a figure from <a href=""",-LRB- NN RB VBZ DT NN IN -LRB- DT NN SYM '',no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],58,4090,1605,2886,80,TRUE,TRUE,TRUE,10,665,FALSE,50,2149,0,TRUE,9,TRUE,4,0.7886125,0.6664642,"http://www.programcreek.com/2013/03/arraylist-vs-linkedlist-vs-vector/"" rel=""noreferrer"">programcreek.com</a> (<code>add</code> and <code>remove</code> are the first type, i.e., add an element at the end of the list and remove the element at the specified position in the list.):</p>","ADD `` FW `` NN `` ADD '' -LRB- -LRB- NNP NN -RRB- CC -LRB- NN -LRB- , NN -RRB- VBP DT JJ NN , FW , VB DT NN IN DT NN IN DT NN CC VB DT NN IN DT VBN NN IN DT NN . -RRB- NFP",no
TRUE,3620,0,1387883,39488,5696,34,73,TRUE,TRUE,TRUE,112,[],58,4090,1605,2886,80,TRUE,TRUE,TRUE,10,665,FALSE,19,2434,0,FALSE,0,FALSE,0,0.3852518,0.20888864,"<p><img src=""https://i.sstatic.net/pdKaZ.png"" alt=""enter image description here""></p>",-LRB- NN -LRB- NN NN SYM `` ADD '' FW NFP VB NN NN RB '' SYM NN -RRB-,no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],1724,5170,0,190899,75,FALSE,TRUE,TRUE,1,508,FALSE,39,0,0,FALSE,23,TRUE,10.25641026,0.3763825,0.19781873,"<p>Since <a href=""//docs.oracle.com/javase/8/docs/api/java/util/Date.html"" rel=""noreferrer""><code>Date</code></a> implements <a href=""//docs.oracle.com/javase/8/docs/api/java/lang/Comparable.html"" rel=""noreferrer""><code>Comparable</code></a>, it has a <code>compareTo</code>","-LRB- NN IN -LRB- NFP ADD ADD `` FW SYM `` NN '' -LRB- NNP -RRB- VBZ -LRB- DT ADD ADD `` FW SYM `` NN '' , NNP , PRP VBZ DT -LRB- NN -LRB- , NN -RRB-",no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],1724,5170,0,190899,75,FALSE,TRUE,TRUE,1,508,FALSE,8,275,0,TRUE,6,TRUE,12.5,0.42626506,0.27074677,method just like <code>String</code>,"NN RB IN -LRB- NN , NN -RRB-",no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],1724,5170,0,190899,75,FALSE,TRUE,TRUE,1,508,FALSE,4,312,0,TRUE,0,FALSE,0,0.27530956,0.102912895,"does.</p>
<p>",VBZ . -LRB- NN,no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],1724,5170,0,190899,75,FALSE,TRUE,TRUE,1,508,FALSE,20,325,0,FALSE,10,TRUE,10,0.32694733,0.15607497,"So your custom <a href=""//docs.oracle.com/javase/8/docs/api/java/util/Comparator.html"" rel=""noreferrer""><code>Comparator</code></a>","RB PRP$ NN -LRB- DT FW `` , ADD '' FW SYM `` FW '' , NNP NN -RRB- -RRB-",no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],1724,5170,0,190899,75,FALSE,TRUE,TRUE,1,508,FALSE,77,457,0,TRUE,219,TRUE,5.194805195,0.5609413,0.36651683,"could look like this:</p>
<pre><code>public class CustomComparator implements Comparator&lt;MyObject&gt; {
@Override
public int compare(MyObject o1, MyObject o2) {
return o1.getStartDate().compareTo(o2.getStartDate());
}
}
</code></pre>
<p>The <code>compare()</code> method must return an <code>int</code>, so you couldn't directly return a <code>boolean</code>","MD VB IN DT NN -RRB- -LRB- NN NN NN NNP VBZ NN : NN : NFP IN VB JJ NN VB -LRB- NN CD , NN CD -RRB- -LRB- NN NN -RRB- -LRB- ADD -RRB- -RRB- : NN : ADD NN -LRB- NN -RRB- DT -LRB- NN -LRB- -RRB- NFP NN -RRB- NN MD VB DT -LRB- NN -LRB- , NN -RRB- , RB PRP MD RB RB VB DT -LRB- NN NN -LRB- , NN -RRB-",no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],1724,5170,0,190899,75,FALSE,TRUE,TRUE,1,508,FALSE,10,839,0,TRUE,0,FALSE,0,0.5479831,0.3881373,"like you were planning to anyway.</p>
<p>",IN PRP VBD VBG TO RB . -LRB- NN -RRB-,no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],1724,5170,0,190899,75,FALSE,TRUE,TRUE,1,508,FALSE,31,880,0,FALSE,62,TRUE,6.451612903,0.5326995,0.33640411,"Your sorting code would be just about like you wrote:</p>
<pre><code>Collections.sort(Database.arrayList, new CustomComparator());
</code></pre>
<p>","PRP$ NN NN MD VB RB RB IN PRP VBD -LRB- NN -RRB- -LRB- NNP -LRB- FW NNP , JJ NNP -LRB- -RRB- -RRB- : -LRB- NN NN -RRB- -LRB- NN",no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],1724,5170,0,190899,75,FALSE,TRUE,TRUE,1,508,FALSE,122,1028,0,FALSE,204,TRUE,1.639344262,0.6518061,0.43697354,"A slightly shorter way to write all this, if you don't need to reuse your comparator, is to write it as an inline anonymous class:</p>
<pre><code>Collections.sort(Database.arrayList, new Comparator&lt;MyObject&gt;() {
@Override
public int compare(MyObject o1, MyObject o2) {
return o1.getStartDate().compareTo(o2.getStartDate());
}
});
</code></pre>
<hr />
<h1>Since <a href=""/questions/tagged/java-8"" class=""post-tag"" title=""show questions tagged &#39;java-8&#39;"" rel=""tag"">java-8</a></h1>
<p>","DT RB JJR NN TO VB PDT DT , IN PRP VBP RB VB TO VB PRP$ NN , VBZ TO VB PRP IN DT JJ JJ NN SYM NN -RRB- -LRB- NN FW ADD , JJ NN : NN : -LRB- -RRB- NFP IN VB JJ NN VB -LRB- NN CD , NN LS -RRB- -LRB- NN NN -RRB- ADD NN -LRB- -RRB- -RRB- : NN LS -RRB- : NFP NN NN -LRB- NN NFP -LRB- CD -RRB- -LRB- DT NN '' , NNS , VBN , NN , CD '' NN SYM `` NN HYPH NN '' NN SYM `` NN NNS VBN CC CD , NN HYPH NN , `` NN SYM `` NN '' NN -RRB- -LRB- NN -RRB-",no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],1724,5170,0,190899,75,FALSE,TRUE,TRUE,1,508,FALSE,66,1543,0,FALSE,133,TRUE,7.575757576,0.5646522,0.36760774,"You can now write the last example in a shorter form by using a <a href=""//docs.oracle.com/javase/tutorial/java/javaOO/lambdaexpressions.html"" rel=""noreferrer"">lambda expression</a> for the <code>Comparator</code>:</p>
<pre><code>Collections.sort(Database.arrayList, (o1, o2) -&gt; o1.getStartDate().compareTo(o2.getStartDate()));
</code></pre>
<p>","PRP MD RB VB DT JJ NN IN DT JJR NN IN VBG DT -LRB- DT FW `` , ADD ADD '' FW SYM `` NN '' -RRB- NN NN , NN IN DT -LRB- NNP NN NNP -LRB- NNP NNP NNP , -LRB- FW , CD -RRB- , NNP : NNP -RRB- FW NNP -RRB- -RRB- -RRB- : -LRB- NNP FW -RRB- -LRB- NN -RRB-",no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],1724,5170,0,190899,75,FALSE,TRUE,TRUE,1,508,FALSE,25,1916,0,FALSE,20,TRUE,16,0.39358872,0.2327806,"And <code>List</code> has a <a href=""//docs.oracle.com/javase/8/docs/api/java/util/List.html#sort-java.util.Comparator-"" rel=""noreferrer""><code>sort(Comparator)</code></a>","CC -LRB- NN NN -RRB- VBZ DT -LRB- DT FW '' , ADD FW `` FW '' , NN NN -RRB- -LRB- NN -RRB- -RRB-",no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],1724,5170,0,190899,75,FALSE,TRUE,TRUE,1,508,FALSE,38,2088,0,TRUE,85,TRUE,2.631578947,0.52625203,0.3056027,"method, so you can shorten this even further:</p>
<pre><code>Database.arrayList.sort((o1, o2) -&gt; o1.getStartDate().compareTo(o2.getStartDate()));
</code></pre>
<p>","NN , RB PRP MD VB DT RB JJ HYPH NN -RRB- -LRB- NNP -LRB- ADD FW , CD -RRB- , NNP : NNP -RRB- GW NNP -RRB- -RRB- -RRB- : -LRB- NN NN -RRB- -LRB- NN -RRB-",no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],1724,5170,0,190899,75,FALSE,TRUE,TRUE,1,508,FALSE,12,2254,0,FALSE,0,FALSE,16.66666667,0.61122733,0.4395721,"This is such a common idiom that there's <a href=""//docs.oracle.com/javase/8/docs/api/java/util/Comparator.html#comparing-java.util.function.",DT VBZ PDT DT JJ NN IN EX VBZ -LRB- DT ADD ADD,no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],1724,5170,0,190899,75,FALSE,TRUE,TRUE,1,508,FALSE,48,2395,0,FALSE,91,TRUE,14.58333333,0.50658524,0.3337452,"Function-"" rel=""noreferrer"">a built-in method</a> to generate a <code>Comparator</code> for a class with a <code>Comparable</code> key:</p>
<pre><code>Database.arrayList.sort(Comparator.comparing(MyObject::getStartDate));
</code></pre>
<p>","NN NN `` NN `` -RRB- DT VBN HYPH IN NN SYM NN TO VB DT -LRB- NN -LRB- , NN -RRB- IN DT NN IN DT -LRB- NN NFP NN -RRB- NNP -LRB- NN -LRB- ADD ADD -RRB- -RRB- : -LRB- NN NN -RRB- -LRB- NN -RRB-",no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],1724,5170,0,190899,75,FALSE,TRUE,TRUE,1,508,FALSE,8,2634,0,FALSE,0,FALSE,0,0.6756452,0.53946346,All of these are equivalent forms.</p>,DT IN DT VBP JJ NNS . NN,no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],202,5170,0,29247,67,TRUE,TRUE,FALSE,2,334,FALSE,56,0,0,FALSE,0,FALSE,7.142857143,0.90570444,0.7330757,"<p>Classes that has a natural sort order (a class Number, as an example) should implement the Comparable interface, whilst classes that has no natural sort order (a class Chair, as an example) should be provided with a Comparator (or an anonymous Comparator class).</p>","-LRB- NN NNS WDT VBZ DT JJ NN NN -LRB- DT NN NN , IN DT NN -RRB- MD VB DT JJ NN , IN NNS WDT VBZ DT JJ NN NN -LRB- DT NN NN , IN DT NN -RRB- MD VB VBN IN DT NN -LRB- CC DT JJ NN NN -RRB- . -RRB-",yes
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],202,5170,0,29247,67,TRUE,TRUE,FALSE,2,334,FALSE,9,271,0,FALSE,0,FALSE,0,0.2780559,0.10336702,<p>Two examples:</p>,-LRB- NN -RRB- CD NNS : -LRB- NN -RRB-,no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],202,5170,0,29247,67,TRUE,TRUE,FALSE,2,334,FALSE,16,293,0,FALSE,74,TRUE,6.25,0.66627765,0.4379718,"<pre><code>public class Number implements Comparable&lt;Number&gt; {
private int value;",-LRB- NN NN NN NN NN VBZ NN : NNP : NFP JJ NN NN :,no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],202,5170,0,29247,67,TRUE,TRUE,FALSE,2,334,FALSE,28,390,0,TRUE,0,FALSE,0,0.50722927,0.28114894,"public Number(int value) { this.value = value; }
public int compareTo(Number anotherInstance) {
return this.value - anotherInstance.value;
}
}","JJ NN -LRB- JJ NN -RRB- , DT CD SYM NN : CC JJ NN NN NN NN -RRB- NFP VB DT NN HYPH NN : SYM -RRB-",no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],202,5170,0,29247,67,TRUE,TRUE,FALSE,2,334,FALSE,12,550,0,TRUE,0,FALSE,0,0.6881963,0.49427816,"public class Chair {
private int weight;
private int height;",JJ NN NNP HYPH JJ NN NN : JJ NN NN :,no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],202,5170,0,29247,67,TRUE,TRUE,FALSE,2,334,FALSE,12,624,0,TRUE,0,FALSE,0,0.72967106,0.61888707,"public Chair(int weight, int height) {
this.","JJ NNP -LRB- JJ NN , JJ NN -RRB- : DT .",no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],202,5170,0,29247,67,TRUE,TRUE,FALSE,2,334,FALSE,6,676,0,TRUE,0,FALSE,0,0.6905692,0.5663221,"weight = weight;
this.",NN SYM NN : DT .,no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],202,5170,0,29247,67,TRUE,TRUE,FALSE,2,334,FALSE,72,706,0,TRUE,0,FALSE,0,0.50657916,0.24273859,"height = height;
}
/* Omitting getters and setters */
}
class ChairWeightComparator implements Comparator&lt;Chair&gt; {
public int compare(Chair chair1, Chair chair2) {
return chair1.getWeight() - chair2.getWeight();
}
}
class ChairHeightComparator implements Comparator&lt;Chair&gt; {
public int compare(Chair chair1, Chair chair2) {
return chair1.getHeight() - chair2.getHeight();
}
}
</code></pre>","NN SYM NN : NN NFP VBG NNS CC NNS NFP NN NN NNP VBZ NNP : NNP : -LRB- JJ NN NN NNP NNP , NNP NNP -RRB- , NN NNP -LRB- -RRB- HYPH NNP -LRB- -RRB- : NN NN NN NNP VBZ NNP : NNP : -LRB- JJ NN FW NNP NNP , NNP NNP -RRB- , NN NNP -LRB- -RRB- , NNP -LRB- -RRB- : SYM : ADD NN",no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],202,5170,0,29247,67,TRUE,TRUE,FALSE,2,334,FALSE,6,1149,0,FALSE,0,FALSE,0,0.2753096,0.10291291,<p>Usage:</p>,-LRB- NN NN : NFP -RRB-,no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],202,5170,0,29247,67,TRUE,TRUE,FALSE,2,334,FALSE,26,1164,44,FALSE,78,TRUE,7.692307692,0.50559425,0.22487888,"<pre><code>List&lt;Number&gt; numbers = new ArrayList&lt;Number&gt;();
...
Collections.sort(numbers);","-LRB- NN -RRB- -LRB- NN -RRB- : : NN : NNS SYM JJ NN : NNP : -LRB- -RRB- : , NNS NN NNS -RRB- :",no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],202,5170,0,29247,67,TRUE,TRUE,FALSE,2,334,FALSE,46,1267,31,FALSE,0,FALSE,0,0.57400715,0.2311403,"List&lt;Chair&gt; chairs = new ArrayList&lt;Chair&gt;();
// Sort by weight:
Collections.sort(chairs, new ChairWeightComparator());
// Sort by height:
Collections.sort(chairs, new ChairHeightComparator());","NNP : NNP : NNS SYM JJ NNP : NNP : -LRB- -RRB- : , NN IN NN : NNS . NN NNS , JJ NNP -LRB- -RRB- -RRB- : SYM NN IN NN : NNS . NN NNS , JJ NNP -LRB- -RRB- -RRB- :",no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],202,5170,0,29247,67,TRUE,TRUE,FALSE,2,334,FALSE,45,1473,0,FALSE,0,FALSE,2.222222222,0.60027206,0.35467744,"// You can also create anonymous comparators;
// Sort by color:
Collections.sort(chairs, new Comparator&lt;Chair&gt;() {
public int compare(Chair chair1, Chair chair2) {
...
}
});
</code></pre>","NFP PRP MD RB VB JJ NNS : SYM NN IN NN : NNS . NN NNS , JJ NNP : NNP : -LRB- -RRB- HYPH JJ NN NN NNP NNP , NNP NNP -RRB- : , SYM CD -RRB- : NFP NNP NN -RRB-",no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],164,4440,730,0,0,FALSE,TRUE,TRUE,3,67,FALSE,12,0,24,FALSE,9,TRUE,16.66666667,0.4052315,0.24413274,<p>For sorting an <code>ArrayList</code>,"NN IN NN DT -LRB- NN -RRB- NN -LRB- , NN -RRB-",no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],164,4440,730,0,0,FALSE,TRUE,TRUE,3,67,FALSE,10,41,0,TRUE,0,FALSE,10,0.7421317,0.61110157,you could use the following code snippet:</p>,PRP MD VB DT VBG NN NN : NN -RRB-,no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],164,4440,730,0,0,FALSE,TRUE,TRUE,3,67,TRUE,45,88,0,FALSE,186,TRUE,6.666666667,0.45713753,0.19518073,"<pre><code>Collections.sort(studList, new Comparator&lt;Student&gt;(){
public int compare(Student s1, Student s2) {
return s1.getFirstName().compareToIgnoreCase(s2.getFirstName());
}
});
</code></pre>","-LRB- NN -RRB- -LRB- NN -RRB- NN , JJ NN : NN : -LRB- -RRB- NFP JJ NN VB -LRB- NN NN , NN NN -RRB- NFP NN NN -LRB- -RRB- -LRB- NN -LRB- -RRB- -RRB- : NN LS -RRB- : NFP NN NN -RRB-",no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],47,3588,1582,10060,80,TRUE,TRUE,TRUE,4,75,FALSE,10,0,0,FALSE,0,TRUE,20,0.2977577,0.1237036,<h2>JAVA 8 lambda expression</h2>,-LRB- CD -RRB- NN CD NN NN -LRB- CD -RRB-,no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],47,3588,1582,10060,80,TRUE,TRUE,TRUE,4,75,TRUE,33,35,0,FALSE,133,TRUE,6.060606061,0.45545527,0.1764627,"<pre><code>Collections.sort(studList, (Student s1, Student s2) -&gt;{
return s1.getFirstName().compareToIgnoreCase(s2.getFirstName());
});
</code></pre>","-LRB- NN NN FW , -LRB- NN FW , NN FW -RRB- , NN : NN NN NNP -LRB- -RRB- GW NN -LRB- -RRB- -RRB- : LS -RRB- : -LRB- NN NN -RRB-",no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],47,3588,1582,10060,80,TRUE,TRUE,TRUE,4,75,FALSE,5,197,0,FALSE,0,TRUE,20,0.2539874,0.08681678,<h3>OR</h3>,-LRB- NN -LRB- NN -RRB-,no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],47,3588,1582,10060,80,TRUE,TRUE,TRUE,4,75,FALSE,23,210,0,FALSE,90,TRUE,4.347826087,0.44157186,0.16658337,"<pre><code>Comparator&lt;Student&gt; c = (s1, s2) -&gt; s1.firstName.compareTo(s2.firstName);
studList.sort(c)","-LRB- NN NN -RRB- : NNP : NN SYM -LRB- FW , NN -RRB- , NN : NNP ADD -RRB- : NNP -RRB-",no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],47,3588,1582,10060,80,TRUE,TRUE,TRUE,4,75,FALSE,4,182,0,FALSE,0,FALSE,25,0.25398737,0.086816765,</code></pre>,-LRB- NN NN -RRB-,no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],45,5170,0,13044,91,TRUE,TRUE,FALSE,5,210,FALSE,6,0,0,FALSE,0,FALSE,0,0.54395413,0.42336306,"<p>Yes, you can.","`` UH , PRP MD .",no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],45,5170,0,13044,91,TRUE,TRUE,FALSE,5,210,FALSE,14,18,0,FALSE,0,FALSE,7.142857143,0.8059281,0.719052,"There are two options with comparing items, the <a href=""","EX VBP CD NNS IN VBG NNS , DT -LRB- DT NN SYM ''",no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],45,5170,0,13044,91,TRUE,TRUE,FALSE,5,210,FALSE,31,75,0,TRUE,0,TRUE,3.225806452,0.41964984,0.2440105,"http://java.sun.com/javase/6/docs/api/java/lang/Comparable.html"" rel=""noreferrer"">Comparable</a> interface, and the <a href=""http://java.sun.com/javase/6/docs/api/java/util/Comparator.html"" rel=""noreferrer"">Comparator</a> interface.</p>","ADD `` NN '' NN '' -RRB- JJ , '' NN , CC DT -LRB- DT NN SYM `` ADD '' NN `` NN '' -RRB- NN , NN NN -RRB-",no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],45,5170,0,13044,91,TRUE,TRUE,FALSE,5,210,FALSE,11,313,0,FALSE,0,FALSE,0,0.74383545,0.63876694,<p>Both of these interfaces allow for different behavior.,-LRB- NN DT IN DT NNS VBP IN JJ NN .,no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],45,5170,0,13044,91,TRUE,TRUE,FALSE,5,210,FALSE,22,372,0,FALSE,0,FALSE,0,0.8786914,0.7610787,"Comparable allows you to make the object act like you just described Strings (in fact, String implements Comparable).","JJ VBZ PRP TO VB DT NN VB IN PRP RB VBD NNS -LRB- IN NN , NN VBZ JJ -RRB- .",yes
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],45,5170,0,13044,91,TRUE,TRUE,FALSE,5,210,FALSE,16,491,0,FALSE,0,FALSE,0,0.8188318,0.61270076,"The second, Comparator, allows you to do what you are asking to do.","DT JJ , NN , VBZ PRP TO VB WP PRP VBP VBG TO VB .",yes
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],45,5170,0,13044,91,TRUE,TRUE,FALSE,5,210,FALSE,10,560,0,FALSE,0,FALSE,0,0.5154939,0.29108125,You would do it like this:</p>,PRP MD VB PRP IN DT : -LRB- NN -RRB-,no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],45,5170,0,13044,91,TRUE,TRUE,FALSE,5,210,TRUE,18,592,30,FALSE,51,TRUE,16.66666667,0.40957242,0.1675905,"<pre><code>Collections.sort(myArrayList, new MyComparator());
</code></pre>","-LRB- NN -RRB- -LRB- NN -RRB- ADD , JJ NN -LRB- -RRB- -RRB- : NFP NN NN -RRB-",no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],45,5170,0,13044,91,TRUE,TRUE,FALSE,5,210,FALSE,8,669,0,FALSE,0,FALSE,0,0.65924084,0.56066173,<p>That will cause the Collections.,NFP -RRB- DT MD VB DT NNS .,no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],45,5170,0,13044,91,TRUE,TRUE,FALSE,5,210,FALSE,11,704,0,TRUE,0,FALSE,0,0.90337324,0.719629,sort method to use your comparator for it's sorting mechanism.,NN NN TO VB PRP$ NN IN PRP POS NN NN .,no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],45,5170,0,13044,91,TRUE,TRUE,FALSE,5,210,FALSE,20,768,22,FALSE,0,FALSE,0,0.83448803,0.68927556,"If the objects in the ArrayList implement comparable, you can instead do something like this:</p>","IN DT NNS IN DT NN VBP JJ , PRP MD RB VB NN IN DT : -LRB- NN -RRB-",no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],45,5170,0,13044,91,TRUE,TRUE,FALSE,5,210,TRUE,12,867,30,FALSE,31,TRUE,16.66666667,0.33743912,0.111939445,"<pre><code>Collections.sort(myArrayList);
</code></pre>",-LRB- NN -RRB- -LRB- NN ADD -RRB- : -LRB- GW NN -RRB-,no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],45,5170,0,13044,91,TRUE,TRUE,FALSE,5,210,FALSE,31,924,0,FALSE,0,TRUE,6.451612903,0.53078276,0.36607355,"<p>The <a href=""http://java.sun.com/javase/6/docs/api/java/util/Collections.html"" rel=""noreferrer"">Collections</a> class contains a number of these useful, common tools.</p>","-LRB- NN DT -LRB- DT NN SYM `` ADD '' NN `` NN '' -RRB- NNS , NN NN VBZ DT NN IN DT JJ , JJ NNS , NN -RRB-",yes
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],39,3764,1406,326382,94,TRUE,TRUE,FALSE,6,40,FALSE,16,0,0,FALSE,0,FALSE,6.25,0.61652005,0.50447613,<p>With Java 8 you can use a method reference for your comparator:</p>,-LRB- NN IN NNP CD PRP MD VB DT NN NN IN PRP$ NN NN -RRB-,yes
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],39,3764,1406,326382,94,TRUE,TRUE,FALSE,6,40,FALSE,6,72,0,FALSE,45,TRUE,0,0.5335806,0.32939985,<pre><code>import static java.util.Comparator.comparing;,-LRB- NN NN NN ADD :,no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],39,3764,1406,326382,94,TRUE,TRUE,FALSE,6,40,FALSE,18,130,0,FALSE,0,FALSE,5.555555556,0.4496106,0.1675687,"Collections.sort(list, comparing(MyObject::getStartDate));
</code></pre>","NNS . NN NN , VBG -LRB- NN : : NNP -RRB- -RRB- : NFP ADD NN -RRB-",no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],15,3764,1405,30665,79,TRUE,TRUE,FALSE,7,208,FALSE,14,0,0,FALSE,0,FALSE,0,0.847458,0.739379,"<p>Since technologies appear everyday, the answer will change in the time.","NN IN NNS VBP JJ , DT NN MD VB IN DT NN .",no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],15,3764,1405,30665,79,TRUE,TRUE,FALSE,7,208,FALSE,13,75,0,FALSE,0,FALSE,7.692307692,0.64808655,0.54004115,I took a look at LambdaJ and seems very interesting.</p>,PRP VBD DT NN IN NNP CC VBZ RB JJ . NN -RRB-,no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],15,3764,1405,30665,79,TRUE,TRUE,FALSE,7,208,FALSE,15,133,0,FALSE,0,TRUE,13.33333333,0.497964,0.3721499,<p>You can try solving these tasks with <strong>LambdaJ</strong>.,"NFP PRP MD VB VBG DT NNS IN -LRB- JJ -RRB- NNP , JJ NFP",no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],15,3764,1405,30665,79,TRUE,TRUE,FALSE,7,208,FALSE,19,199,0,FALSE,0,TRUE,5.263157895,0.41326386,0.25340602,"You can find it here: <a href=""http://code.google.com/p/lambdaj/"" rel=""noreferrer"">http://code.google.com/p/lambdaj/</a></p>",PRP MD VB PRP RB : -LRB- DT NN SYM `` ADD '' FW SYM `` NN '' ADD,no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],15,3764,1405,30665,79,TRUE,TRUE,FALSE,7,208,FALSE,10,325,0,FALSE,0,FALSE,0,0.42511296,0.29262862,<p>Here you have an example:</p>,NN RB PRP VBP DT NN : -LRB- NN -RRB-,no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],15,3764,1405,30665,79,TRUE,TRUE,FALSE,7,208,FALSE,8,359,0,FALSE,0,TRUE,12.5,0.30200604,0.13606562,<p><strong>Sort Iterative</strong></p>,NN -LRB- JJ -RRB- NN NN NFP ADD,no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],15,3764,1405,30665,79,TRUE,TRUE,FALSE,7,208,FALSE,4,399,0,FALSE,0,TRUE,25,0.25398737,0.086816765,<pre><code>,-LRB- NN NN -RRB-,no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],15,3764,1405,30665,79,TRUE,TRUE,FALSE,7,208,FALSE,17,410,44,FALSE,0,FALSE,0,0.63937306,0.35472512,"List&lt;Person&gt; sortedByAgePersons = new ArrayList&lt;Person&gt;(persons);
Collections.",`` : NN : NN SYM JJ NN : NN : -LRB- NNS -RRB- : NNS .,no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],15,3764,1405,30665,79,TRUE,TRUE,FALSE,7,208,FALSE,41,500,0,TRUE,0,FALSE,2.43902439,0.4920016,0.18335317,"sort(sortedByAgePersons, new Comparator&lt;Person&gt;() {
public int compare(Person p1, Person p2) {
return Integer.valueOf(p1.getAge()).compareTo(p2.getAge());
}
});
</code></pre>","NN NN , JJ NNP : NNP : -LRB- -RRB- , JJ NN VB -LRB- NN NN , NN NN -RRB- -LRB- NN NNP NNP -RRB- -RRB- ADD NNP -LRB- -RRB- -RRB- : NN CD -RRB- : -LRB- NN NN -RRB-",no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],15,3764,1405,30665,79,TRUE,TRUE,FALSE,7,208,FALSE,23,762,0,FALSE,0,FALSE,4.347826087,0.44553944,0.14127396,"List&lt;Person&gt; sortedByAgePersons = sort(persons, on(Person.class).getAge()); 
</code></pre>","NNP : NN : NN SYM NN NNS , IN -LRB- NNP -RRB- . NNP -LRB- -RRB- -RRB- : -LRB- NN NN -RRB-",no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],15,3764,1405,30665,79,TRUE,TRUE,FALSE,7,208,FALSE,31,860,0,FALSE,0,FALSE,6.451612903,0.8548663,0.73358977,"<p>Of course, having this kind of beauty impacts in the performance (an average of 2 times), but can you find a more readable code?</p>","NFP IN NN , VBG DT NN IN NN NNS IN DT NN -LRB- DT NN IN CD NNS -RRB- , CC MD PRP VB DT RBR JJ NN . -RRB-",no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],13,4473,697,625,0,TRUE,TRUE,FALSE,8,409,FALSE,5,0,0,FALSE,17,TRUE,0,0.46812537,0.3270883,<pre><code>import java.text.,-LRB- NN NN NN .,no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],13,4473,697,625,0,TRUE,TRUE,FALSE,8,409,FALSE,7,28,0,FALSE,0,FALSE,0,0.71885085,0.5807018,"ParseException;
import java.text.SimpleDateFormat;
import java.util.",NNP : NN NNP : NN ADD,no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],13,4473,697,625,0,TRUE,TRUE,FALSE,8,409,FALSE,5,96,0,FALSE,0,FALSE,0,0.69272244,0.49568072,"ArrayList;
import java.util.",NN : NN NN .,no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],13,4473,697,625,0,TRUE,TRUE,FALSE,8,409,FALSE,8,124,0,FALSE,0,FALSE,0,0.7336383,0.5841975,"Collections;
import java.util.Comparator;
import java.util.",NNS : NN NN : NN NN .,no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],13,4473,697,625,0,TRUE,TRUE,FALSE,8,409,FALSE,4,190,0,TRUE,0,FALSE,0,0.58144385,0.48629636,public class test {,JJ NN NN .,no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],13,4473,697,625,0,TRUE,TRUE,FALSE,8,409,FALSE,17,211,0,TRUE,0,FALSE,0,0.6629838,0.48123258,"public static class Person {
public String name;
public int id;
public Date hireDate;",JJ JJ NN NN : JJ NN NN : JJ NN NN : JJ NN NN :,no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],13,4473,697,625,0,TRUE,TRUE,FALSE,8,409,FALSE,26,314,0,TRUE,0,FALSE,0,0.55503917,0.2864593,"public Person(String iname, int iid, Date ihireDate) {
name = iname;
id = iid;
hireDate = ihireDate;
}","JJ NN -LRB- NN NN , NN NN , NN NN -RRB- : NN SYM NN : NN SYM NN : NN SYM NN : NFP",no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],13,4473,697,625,0,TRUE,TRUE,FALSE,8,409,FALSE,22,450,0,TRUE,0,FALSE,0,0.3564356,0.1344306,"public String toString() {
return name + "" "" + id + "" "" + hireDate.toString();
}",JJ NN NN -LRB- -RRB- NFP NN NN SYM `` `` SYM NN SYM '' '' SYM NN -LRB- -RRB- : NFP,no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],13,4473,697,625,0,TRUE,TRUE,FALSE,8,409,FALSE,31,548,0,FALSE,0,FALSE,0,0.6346786,0.42939526,"// Comparator
public static class CompId implements Comparator&lt;Person&gt; {
@Override
public int compare(Person arg0, Person arg1) {
return arg0.id - arg1.id;
}
}","SYM NN JJ JJ NN NN VBZ NNP : NN : NFP IN NN JJ NN NN NN NN , NN NN -RRB- : NN NN HYPH NN : SYM -RRB-",no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],13,4473,697,625,0,TRUE,TRUE,FALSE,8,409,FALSE,51,763,0,TRUE,0,FALSE,0,0.54646003,0.29954743,"public static class CompDate implements Comparator&lt;Person&gt; {
private int mod = 1;
public CompDate(boolean desc) {
if (desc) mod =-1;
}
@Override
public int compare(Person arg0, Person arg1) {
return mod*arg0.hireDate.compareTo(arg1.hireDate);
}
}
}","JJ JJ NN NN VBZ NNP : NN : SYM JJ NN NN SYM CD : JJ NN -LRB- NN NN -RRB- : IN -LRB- NN -RRB- NN SYM CD : NN IN NN JJ NN NN NN NN , NN NN -RRB- NFP NN NNP -RRB- : CC SYM .",no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],13,4473,697,625,0,TRUE,TRUE,FALSE,8,409,FALSE,123,1095,146,TRUE,0,FALSE,0,0.578097,0.2607843,"public static void main(String[] args) {
// TODO Auto-generated method stub
SimpleDateFormat df = new SimpleDateFormat(""mm-dd-yyyy"");
ArrayList&lt;Person&gt; people;
people = new ArrayList&lt;Person&gt;();
try {
people.add(new Person(""Joe"", 92422, df.parse(""12-12-2010"")));
people.add(new Person(""Joef"", 24122, df.parse(""1-12-2010"")));
people.add(new Person(""Joee"", 24922, df.parse(""12-2-2010"")));
} catch (ParseException e) {
// TODO Auto-generated catch block
e.printStackTrace();
}","JJ JJ NN JJ -LRB- NN -LRB- -RRB- NN -RRB- , , NN NNP HYPH VBN NN NN NNP NNP SYM JJ NNP -LRB- `` FW HYPH FW HYPH FW '' -RRB- : NNP : NN : NNS : NNS SYM JJ NNP : NNP : -LRB- -RRB- : VB : NN -LRB- JJ NN -LRB- `` NNP '' , CD , ADD CD '' -RRB- -RRB- -RRB- : NNP -LRB- JJ NN -LRB- `` NNP '' , CD , ADD CD '' -RRB- -RRB- -RRB- : NN -LRB- JJ NN -LRB- `` NNP '' , CD , ADD CD '' -RRB- -RRB- -RRB- : NN NN -LRB- NNP FW : , NN NNP HYPH VBN NN NN NN -LRB- -RRB- : NFP",no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],13,4473,697,625,0,TRUE,TRUE,FALSE,8,409,FALSE,34,1653,0,FALSE,0,FALSE,0,0.524732,0.16183303,"Collections.sort(people, new Person.CompId());
System.out.println(""BY ID"");
for (Person p : people) {
System.out.println(p.toString());
}","NNS . NN NNS , JJ NNP -LRB- -RRB- -RRB- : FW -LRB- `` NNP NN '' -RRB- : IN -LRB- NN NN : NNS -RRB- -LRB- ADD NNP -LRB- -RRB- -RRB- : NFP",no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],13,4473,697,625,0,TRUE,TRUE,FALSE,8,409,FALSE,68,1816,0,FALSE,0,FALSE,0,0.5428958,0.17990696,"Collections.sort(people, new Person.CompDate(false));
System.out.println(""BY Date asc"");
for (Person p : people) {
System.out.println(p.toString());
}
Collections.sort(people, new Person.CompDate(true));
System.out.println(""BY Date desc"");
for (Person p : people) {
System.out.println(p.toString());
}","NNS . NN NNS , JJ NNP JJ -RRB- -RRB- : FW -LRB- `` JJ NN NN '' -RRB- : IN -LRB- NN NN : NNS -RRB- -LRB- ADD NNP -LRB- -RRB- -RRB- : SYM NNP NNS , JJ NNP JJ -RRB- -RRB- : FW -LRB- `` NNP NN NNP '' -RRB- : IN -LRB- NN NN : NNS -RRB- -LRB- ADD NNP -LRB- -RRB- -RRB- : NFP",no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],13,4473,697,625,0,TRUE,TRUE,FALSE,8,409,FALSE,1,443,0,FALSE,0,FALSE,0,0.19529496,0.06808213,},NFP,no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],13,4473,697,625,0,TRUE,TRUE,FALSE,8,409,FALSE,5,2166,0,FALSE,0,FALSE,20,0.27819985,0.0955655,"}
</code></pre>",LS NFP NN NN -RRB-,no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],13,3122,2048,2342,92,TRUE,TRUE,TRUE,9,247,FALSE,11,0,0,FALSE,0,TRUE,18.18181818,0.40020514,0.17166433,<h1>Function &amp; method reference</h1>,-LRB- NN -RRB- NN NN : NN NN -LRB- NN -RRB-,no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],13,3122,2048,2342,92,TRUE,TRUE,TRUE,9,247,FALSE,17,42,0,FALSE,16,TRUE,5.882352941,0.37589526,0.1725271,"<p>The <a href=""https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#sort(java.util.List,java.util.Comparator)"" rel=""noreferrer""><code>Collections.sort</code></a>","-LRB- NN DT -LRB- DT NN SYM `` ADD '' FW SYM `` FW '' , ADD",no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],13,3122,2048,2342,92,TRUE,TRUE,TRUE,9,247,FALSE,9,240,0,TRUE,0,FALSE,22.22222222,0.71956456,0.5322651,"method can sort a <a href=""",NN MD VB DT -LRB- DT NN SYM '',no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],13,3122,2048,2342,92,TRUE,TRUE,TRUE,9,247,FALSE,32,267,0,TRUE,14,TRUE,15.625,0.3068175,0.12925066,"https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/List.html"" rel=""noreferrer""><code>List</code></a> using a <a href=""https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Comparator.html"" rel=""noreferrer""><code>Comparator</code></a>","ADD `` FW SYM `` NN '' , FW NN NN VBG DT -LRB- DT NN SYM `` ADD `` FW SYM `` NN '' , NN , NN NFP NN -RRB-",no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],13,3122,2048,2342,92,TRUE,TRUE,TRUE,9,247,FALSE,7,548,0,FALSE,10,TRUE,14.28571429,0.32228792,0.15520522,That <code>Comparator</code>,"DT -LRB- NN -LRB- , NN -RRB-",no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],13,3122,2048,2342,92,TRUE,TRUE,TRUE,9,247,FALSE,19,577,0,TRUE,20,TRUE,5.263157895,0.41370377,0.23136406,"can be implemented using the <a href=""https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Comparator.html#comparing(java.util.function.Function)"" rel=""noreferrer""><code>Comparator.comparing</code></a>",MD VB VBN VBG DT -LRB- DT NN SYM `` ADD '' FW SYM `` NN '' NFP ADD,no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],13,3122,2048,2342,92,TRUE,TRUE,TRUE,9,247,FALSE,11,797,0,TRUE,0,FALSE,18.18181818,0.7313708,0.58738095,"method where you can pass a <a href=""",NN WRB PRP MD VB DT -LRB- DT NN SYM '',no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],13,3122,2048,2342,92,TRUE,TRUE,TRUE,9,247,FALSE,31,834,0,TRUE,8,TRUE,6.451612903,0.3673503,0.19163646,"https://docs.oracle.com/javase/tutorial/java/javaOO/methodreferences.html"" rel=""noreferrer"">method reference</a> as the necessary <a href=""https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/function/Function.html"" rel=""noreferrer""><code>Function</code></a>.","ADD `` VB `` NN `` -RRB- NN NN , NN IN DT JJ -LRB- DT NN SYM `` ADD '' FW SYM `` NN '' , NNP NN -RRB- NFP",no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],13,3122,2048,2342,92,TRUE,TRUE,TRUE,9,247,FALSE,15,1112,0,FALSE,0,FALSE,6.666666667,0.8536882,0.7540221,"Fortunately, the actual code is much simpler and shorter than this description.</p>","RB , DT JJ NN VBZ RB JJR CC JJR IN DT NN . NN",no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],13,3122,2048,2342,92,TRUE,TRUE,TRUE,9,247,FALSE,5,1197,0,FALSE,0,FALSE,0,0.33636636,0.14888081,<p>For Java 8:</p>,NN IN NNP NN -RRB-,no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],13,3122,2048,2342,92,TRUE,TRUE,TRUE,9,247,TRUE,22,1217,0,FALSE,55,TRUE,13.63636364,0.3883887,0.15190344,"<pre><code>Collections.sort(list, comparing(ClassName::getName));
</code></pre>","-LRB- NN -RRB- -LRB- NN -RRB- NN NN , VBG -LRB- NN : : NN -RRB- -RRB- : NFP NN NN -RRB-",no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],13,3122,2048,2342,92,TRUE,TRUE,TRUE,9,247,FALSE,4,1298,0,FALSE,0,FALSE,0,0.2753096,0.10291291,<p>or</p>,NN -LRB- NN -RRB-,no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],13,3122,2048,2342,92,TRUE,TRUE,TRUE,9,247,TRUE,26,1309,0,FALSE,66,TRUE,11.53846154,0.36332133,0.12066347,"<pre><code>Collections.sort(list, comparing(ClassName::getName).reversed());
</code></pre>","-LRB- NN -RRB- -LRB- NN -RRB- NN NN , VBG -LRB- NN : : NN -RRB- . VBN -LRB- -RRB- -RRB- : NFP NN NN -RRB-",no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],13,3122,2048,2342,92,TRUE,TRUE,TRUE,9,247,FALSE,6,1401,0,FALSE,0,FALSE,0,0.37406588,0.21815054,<p>Another way is</p>,NN DT NN VBZ NN -RRB-,no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],13,3122,2048,2342,92,TRUE,TRUE,TRUE,9,247,TRUE,29,1424,0,FALSE,104,TRUE,10.34482759,0.42714852,0.12402267,"<pre><code>Collections.sort(list, comparing(ClassName::getName, Comparator.nullsLast(Comparator.naturalOrder())));
</code></pre>","-LRB- NN -RRB- -LRB- NN -RRB- NNS : NN , VBG -LRB- NN : : NN , FW FW -LRB- -RRB- -RRB- -RRB- -RRB- : -LRB- GW NN -RRB-",no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],10,2957,2213,3068,59,TRUE,TRUE,TRUE,10,197,FALSE,16,0,0,FALSE,0,FALSE,0,0.56851625,0.391677,<p>Best easy way with JAVA 8 is for English Alphabetic sort</p>,-LRB- NN JJS JJ NN IN NNP CD VBZ IN JJ JJ NN SYM NN -RRB-,no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],10,2957,2213,3068,59,TRUE,TRUE,TRUE,10,197,FALSE,8,65,0,FALSE,0,TRUE,12.5,0.32368279,0.14342144,<p><strong>Class Implementation</strong></p>,NN -LRB- JJ -RRB- NN NN NFP NN,no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],10,2957,2213,3068,59,TRUE,TRUE,TRUE,10,197,FALSE,16,111,0,FALSE,89,TRUE,6.25,0.6680459,0.45803508,"<pre><code>public class NewspaperClass implements Comparable&lt;NewspaperClass&gt;{
public String name;",-LRB- NN NN NN NN NN VBZ NN : NNP : NFP JJ NN NN :,no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],10,2957,2213,3068,59,TRUE,TRUE,TRUE,10,197,FALSE,19,222,0,FALSE,0,FALSE,5.263157895,0.48561367,0.24178685,"@Override
public int compareTo(NewspaperClass another) {
return name.compareTo(another.name);
}
}
</code></pre>",NFP VB JJ NN NN NN DT -RRB- -LRB- NN ADD ADD -RRB- : SYM : ADD NN -RRB-,no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],10,2957,2213,3068,59,TRUE,TRUE,TRUE,10,197,FALSE,2,347,0,FALSE,0,TRUE,0,0.29431254,0.13524899,<p><strong>Sort</strong></p>,GW ADD,no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],10,2957,2213,3068,59,TRUE,TRUE,TRUE,10,197,TRUE,15,377,0,FALSE,31,TRUE,20,0.3658015,0.114122465,"<pre><code> Collections.sort(Your List);
</code></pre>",-LRB- NN -RRB- -LRB- NN -RRB- GW PRP$ NN -RRB- : -LRB- NN NN -RRB-,no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],10,2957,2213,3068,59,TRUE,TRUE,TRUE,10,197,FALSE,19,434,0,FALSE,0,FALSE,0,0.7390946,0.5831853,<p>If you want to sort for alphabet that contains non English characters you can use Locale...,NFP -RRB- IN PRP VBP TO NN IN NN WDT VBZ RB JJ NNS PRP MD VB NN .,yes
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],10,2957,2213,3068,59,TRUE,TRUE,TRUE,10,197,FALSE,7,529,0,FALSE,0,FALSE,14.28571429,0.55181456,0.38740462,Below code use Turkish character sort...</p>,RB NN VB JJ NN NN .,no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],10,2957,2213,3068,59,TRUE,TRUE,TRUE,10,197,FALSE,35,621,0,FALSE,207,TRUE,0,0.6081266,0.36558014,"<pre><code>public class NewspaperClass implements Comparator&lt;NewspaperClass&gt; {
public String name;
public Boolean isUserNewspaper=false;
private Collator trCollator = Collator.getInstance(new Locale(""tr_TR""));",-LRB- NN NN NN NN VBZ NNP : NNP : NFP JJ NN NN : JJ NNP NNP SYM : JJ NNP NN SYM NNP -LRB- JJ NN -LRB- `` NNP '' -RRB- -RRB- :,no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],10,2957,2213,3068,59,TRUE,TRUE,TRUE,10,197,FALSE,28,852,0,FALSE,0,FALSE,3.571428571,0.535061,0.29521042,"@Override
public int compare(NewspaperClass lhs, NewspaperClass rhs) {
trCollator.setStrength(Collator.PRIMARY);
return trCollator.compare(lhs.name,rhs.name);
}
}
</code></pre>","SYM VB JJ NN VB -LRB- NN NN , NNP NNS -RRB- -LRB- ADD NNP -RRB- : NN NNP , ADD -RRB- : FW : ADD NN -RRB-",no
TRUE,1289,0,1359746,18486,5170,29,79,TRUE,TRUE,TRUE,138,[],10,2957,2213,3068,59,TRUE,TRUE,TRUE,10,197,TRUE,22,1078,0,FALSE,56,TRUE,13.63636364,0.48567513,0.22060575,"<pre><code>Collections.sort(your array list,new NewspaperClass());
</code></pre>","-LRB- NN -RRB- -LRB- NN -RRB- NNS : PRP$ NN NN , JJ NN -LRB- -RRB- -RRB- : NFP NN NN -RRB-",no
TRUE,3,0,367,137,4510,1,100,TRUE,TRUE,TRUE,82,[],1,4510,0,168558,98,TRUE,TRUE,TRUE,1,111,FALSE,3,74,0,FALSE,0,FALSE,0,0.12685247,0.10118035,</blockquote>,-LRB- NN -RRB-,no
TRUE,3,0,367,137,4510,1,100,TRUE,TRUE,TRUE,82,[],1,4510,0,168558,98,TRUE,TRUE,TRUE,1,111,FALSE,25,89,0,FALSE,4,TRUE,16,0.43502682,0.38278404,"<p>Use a <code>Clip</code> - see the example on the <a href=""https://stackoverflow.com/tags/javasound/info"">","NN VB DT -LRB- NN -RRB- NN -LRB- , NN -RRB- , VB DT NN IN DT -LRB- DT NN SYM `` ADD '' -RRB-",no
TRUE,3,0,367,137,4510,1,100,TRUE,TRUE,TRUE,82,[],1,4510,0,168558,98,TRUE,TRUE,TRUE,1,111,FALSE,5,197,0,FALSE,0,FALSE,0,0.46270335,0.45325935,Java Sound info. page</a>.,NNP NNP NN NN .,no
TRUE,3,0,367,137,4510,1,100,TRUE,TRUE,TRUE,82,[],1,4510,0,168558,98,TRUE,TRUE,TRUE,1,111,FALSE,60,225,0,FALSE,27,TRUE,15,0.58235717,0.5803406,"It uses a <code>JOptionPane</code> rather than a <code>JFrame</code> (to prevent the daemon thread of the <code>Clip</code> from stopping at the end of <code>main()</code>), but the principle is the same.</p>","PRP VBZ DT -LRB- NN -LRB- , NN -RRB- RB IN DT -LRB- NN -RRB- NN NFP NN -RRB- -LRB- TO VB DT NN NN IN DT -LRB- NN -RRB- NN -LRB- , NN -RRB- IN VBG IN DT NN IN -LRB- NN -RRB- JJ -LRB- -RRB- SYM NN -RRB- -RRB- , CC DT NN VBZ DT JJ . NN",no
TRUE,0,0,4455,4019,4601,2,100,TRUE,TRUE,FALSE,378,[],0,4601,0,8304,96,TRUE,TRUE,TRUE,1,107,FALSE,17,0,0,FALSE,0,FALSE,0,0.6479414,0.5982883,<p>Do you mean after you build your program and run it the sound doesn't play?,`` VBP PRP VB IN PRP VBP PRP$ NN CC VBP PRP DT NN VBZ RB VB .,no
TRUE,0,0,4455,4019,4601,2,100,TRUE,TRUE,FALSE,378,[],0,4601,0,8304,96,TRUE,TRUE,TRUE,1,107,FALSE,21,79,0,FALSE,0,FALSE,0,0.77521,0.7035022,You should either embed the wav file into your resource folder and use getResources() to find the file.,PRP MD CC VB DT NN NN IN PRP$ NN NN CC VB NNS -LRB- -RRB- TO VB DT NN .,yes
TRUE,0,0,4455,4019,4601,2,100,TRUE,TRUE,FALSE,378,[],0,4601,0,8304,96,TRUE,TRUE,TRUE,1,107,FALSE,26,183,0,FALSE,0,FALSE,3.846153846,0.825632,0.75767976,"Or the other option would be to scan your local directory to find the file object with a matching name and file extension.</p>
<p>",CC DT JJ NN MD VB TO VB PRP$ JJ NN TO VB DT NN NN IN DT NN NN CC NN NN . -LRB- NN,no
TRUE,0,0,4455,4019,4601,2,100,TRUE,TRUE,FALSE,378,[],0,4601,0,8304,96,TRUE,TRUE,TRUE,1,107,FALSE,20,313,0,FALSE,0,FALSE,0,0.70740455,0.6508018,Also you are throwing the Malformed URL exception so you wont get an error if the URL is wrong.,RB PRP VBP VBG DT JJ NN NN IN PRP MD RB VB DT NN IN DT NN VBZ JJ .,yes
TRUE,0,0,4455,4019,4601,2,100,TRUE,TRUE,FALSE,378,[],0,4601,0,8304,96,TRUE,TRUE,TRUE,1,107,FALSE,18,409,0,FALSE,82,TRUE,0,0.23927876,0.22717035,"You shouldn't throw it, use <code>try {...} catch (MalformedURLException mex) { system.out.println(mex.getMessage())","PRP MD RB VB PRP , VB -LRB- NN -RRB- NN -LRB- NNP NNP -RRB- -LRB- ADD -RRB- -RRB-",no
TRUE,0,0,4455,4019,4601,2,100,TRUE,TRUE,FALSE,378,[],0,4601,0,8304,96,TRUE,TRUE,TRUE,1,107,FALSE,5,526,0,FALSE,0,FALSE,20,0.092182964,0.06623419,}</code> instead.</p>,NN NN -RRB- RB NFP,no
TRUE,0,0,4455,4019,4601,2,100,TRUE,TRUE,FALSE,378,[],0,4601,0,168558,98,TRUE,FALSE,TRUE,2,134,FALSE,21,0,0,FALSE,0,TRUE,9.523809524,0.4214579,0.3867073,"<p>Try the code with the simple <a href=""http://pscode.org/media/#sound"" rel=""nofollow"">leftright.wav</a>. </p>",-LRB- NN VB DT NN IN DT JJ -LRB- DT NN SYM `` FW '' NN `` NN '' ADD -RRB-,no
TRUE,0,0,4455,4019,4601,2,100,TRUE,TRUE,FALSE,378,[],0,4601,0,168558,98,TRUE,FALSE,TRUE,2,134,FALSE,10,113,0,FALSE,0,FALSE,0,0.38790107,0.3794539,"<blockquote>
<p>..the leftright.wav works!!",-LRB- SYM -RRB- NN NFP DT NN NN VBZ .,no
TRUE,0,0,4455,4019,4601,2,100,TRUE,TRUE,FALSE,378,[],0,4601,0,168558,98,TRUE,FALSE,TRUE,2,134,FALSE,4,159,0,FALSE,0,FALSE,0,0.10015522,0.07579607,"</p>
</blockquote>",NN -LRB- NN -RRB-,no
TRUE,0,0,4455,4019,4601,2,100,TRUE,TRUE,FALSE,378,[],0,4601,0,168558,98,TRUE,FALSE,TRUE,2,134,FALSE,24,179,0,FALSE,0,FALSE,0,0.63212746,0.62465394,"<p>Most media formats (sound, image, video etc.) are what is known as 'container formats'.","-LRB- NN JJS NN NNS -LRB- NN , NN , NN FW . -RRB- VBP WP VBZ VBN IN `` NN NNS '' .",yes
TRUE,0,0,4455,4019,4601,2,100,TRUE,TRUE,FALSE,378,[],0,4601,0,168558,98,TRUE,FALSE,TRUE,2,134,FALSE,13,271,0,FALSE,0,FALSE,0,0.8281537,0.7544601,The encoding of the media might be in any number of types.,DT NN IN DT NN MD VB IN DT NN IN NNS .,yes
TRUE,0,0,4455,4019,4601,2,100,TRUE,TRUE,FALSE,378,[],0,4601,0,168558,98,TRUE,FALSE,TRUE,2,134,FALSE,10,331,0,FALSE,0,FALSE,0,0.7163591,0.6575513,"Java reads some encodings, but not others.</p>","NNP VBZ DT NNS , CC RB NNS . NN",no
TRUE,0,0,4455,4019,4601,2,100,TRUE,TRUE,FALSE,378,[],0,4601,0,168558,98,TRUE,FALSE,TRUE,2,134,FALSE,6,379,0,FALSE,0,FALSE,0,0.17696962,0.1578559,"<blockquote>
<p>So",-LRB- NN -RRB- -LRB- NN -RRB-,no
TRUE,0,0,4455,4019,4601,2,100,TRUE,TRUE,FALSE,378,[],0,4601,0,168558,98,TRUE,FALSE,TRUE,2,134,FALSE,18,400,0,FALSE,0,FALSE,5.555555556,0.5821115,0.55308276,"I am guessing I have to try a different type of .wav file?</p>
</blockquote>",PRP VBP VBG PRP VBP TO VB DT JJ NN IN NN NN -LRB- NN SYM NN -RRB-,no
TRUE,0,0,4455,4019,4601,2,100,TRUE,TRUE,FALSE,378,[],0,4601,0,168558,98,TRUE,FALSE,TRUE,2,134,FALSE,28,478,0,FALSE,0,FALSE,3.571428571,0.7998878,0.76754737,"<p>If it is for an application resource, I'd tend to convert the current WAV to a type that is compatible with Java Sound.</p>","NN IN PRP VBZ IN DT NN NN , PRP MD VB TO VB DT JJ NN IN DT NN WDT VBZ JJ IN NNP NNP . NFP -RRB-",no
TRUE,0,0,1072,583,3958,1,76,TRUE,TRUE,TRUE,405,[],0,3956,1,583,76,TRUE,TRUE,TRUE,1,434,FALSE,3,0,0,FALSE,0,FALSE,0,0.24236605,0.21012326,<p>GOTCHA!!!,-LRB- NN .,no
TRUE,0,0,1072,583,3958,1,76,TRUE,TRUE,TRUE,405,[],0,3956,1,583,76,TRUE,TRUE,TRUE,1,434,FALSE,9,13,0,FALSE,0,FALSE,0,0.69413465,0.5882348,I finally found the way to do it.,PRP RB VBD DT NN TO VB PRP .,no
TRUE,0,0,1072,583,3958,1,76,TRUE,TRUE,TRUE,405,[],0,3956,1,583,76,TRUE,TRUE,TRUE,1,434,FALSE,6,47,0,FALSE,0,TRUE,16.66666667,0.20642388,0.19344911,Like EJP said <strong>,IN NNP VBD -LRB- JJ -RRB-,no
TRUE,0,0,1072,583,3958,1,76,TRUE,TRUE,TRUE,405,[],0,3956,1,583,76,TRUE,TRUE,TRUE,1,434,FALSE,13,69,0,TRUE,0,FALSE,15.38461538,0.85167027,0.8277345,the key part is to save in a byte array</strong>.,DT JJ NN VBZ TO VB IN DT NN NN SYM JJ .,no
TRUE,0,0,1072,583,3958,1,76,TRUE,TRUE,TRUE,405,[],0,3956,1,583,76,TRUE,TRUE,TRUE,1,434,FALSE,19,119,0,FALSE,0,FALSE,5.263157895,0.8376775,0.8278516,"The only solution I come up with so far is by using the technique <a href=""",DT JJ NN PRP VBP RP IN RB RB VBZ IN VBG DT NN -LRB- DT NN SYM '',no
TRUE,0,0,1072,583,3958,1,76,TRUE,TRUE,TRUE,405,[],0,3956,1,583,76,TRUE,TRUE,TRUE,1,434,FALSE,31,194,0,TRUE,0,FALSE,9.677419355,0.7705212,0.740293,"http://www.programcreek.com/2009/02/java-convert-a-file-to-byte-array-then-convert-byte-array-to-a-file/"" rel=""nofollow"" title=""file to byte array"">to convert a file to a byte array</a> in addition to sun.audio.","ADD `` NN '' NN `` NN SYM `` NN IN NN NN '' -RRB- TO VB DT NN IN DT NN NN , LS -RRB- IN NN IN NNP .",no
TRUE,0,0,1072,583,3958,1,76,TRUE,TRUE,TRUE,405,[],0,3956,1,583,76,TRUE,TRUE,TRUE,1,434,FALSE,4,405,0,FALSE,0,FALSE,0,0.68564963,0.59517914,AudioPlayer and sun.audio.,NNP CC NNP .,no
TRUE,0,0,1072,583,3958,1,76,TRUE,TRUE,TRUE,405,[],0,3956,1,583,76,TRUE,TRUE,TRUE,1,434,FALSE,12,431,0,FALSE,0,FALSE,0,0.7620586,0.66965854,AudioStream each time I want to play the sound file.</p>,NNP DT NN PRP VBP TO VB DT NN NN . NN,no
TRUE,0,0,1072,583,3958,1,76,TRUE,TRUE,TRUE,405,[],0,3956,1,583,76,TRUE,TRUE,TRUE,1,434,FALSE,11,489,0,FALSE,0,FALSE,0,0.4173541,0.36854044,<p>Here is an example class:</p>,-LRB- NN RB VBZ DT NN NN : -LRB- NN -RRB-,no
TRUE,0,0,1072,583,3958,1,76,TRUE,TRUE,TRUE,405,[],0,3956,1,583,76,TRUE,TRUE,TRUE,1,434,FALSE,4,624,0,FALSE,0,FALSE,0,0.48339796,0.4320924,"File;
import java.io.",NN : NN ADD,no
TRUE,0,0,1072,583,3958,1,76,TRUE,TRUE,TRUE,405,[],0,3956,1,583,76,TRUE,TRUE,TRUE,1,434,FALSE,4,645,0,FALSE,0,FALSE,0,0.54983234,0.4819856,"FileInputStream;
import java.io.",NNP : NN ADD,no
TRUE,0,0,1072,583,3958,1,76,TRUE,TRUE,TRUE,405,[],0,3956,1,583,76,TRUE,TRUE,TRUE,1,434,FALSE,7,677,0,FALSE,0,FALSE,0,0.54983234,0.48198557,"FileNotFoundException;
import java.io.IOException;
import java.io.",NNP : NN NNP : NN ADD,no
TRUE,0,0,1072,583,3958,1,76,TRUE,TRUE,TRUE,405,[],0,3956,1,583,76,TRUE,TRUE,TRUE,1,434,FALSE,4,558,0,FALSE,0,FALSE,0,0.54983234,0.4819856,"InputStream;
import java.io.",NN : NN ADD,no
TRUE,0,0,1072,583,3958,1,76,TRUE,TRUE,TRUE,405,[],0,3956,1,583,76,TRUE,TRUE,TRUE,1,434,FALSE,5,771,0,FALSE,0,FALSE,0,0.54983234,0.4819856,"Serializable;
import java.util.logging.",JJ : NN NN .,no
TRUE,0,0,1072,583,3958,1,76,TRUE,TRUE,TRUE,405,[],0,3956,1,583,76,TRUE,TRUE,TRUE,1,434,FALSE,11,810,0,FALSE,0,FALSE,0,0.50909054,0.44767565,"Level;
import java.util.logging.Logger;
import sun.audio.AudioPlayer;
import sun.audio.AudioStream;",NN : NN NNP : NN NNP : NN NNP :,no
TRUE,0,0,1072,583,3958,1,76,TRUE,TRUE,TRUE,405,[],0,3956,1,583,76,TRUE,TRUE,TRUE,1,434,FALSE,6,911,0,TRUE,0,FALSE,0,0.5397798,0.49785793,public class SoundSerializer implements Serializable {,JJ NN NNP VBZ NN .,no
TRUE,0,0,1072,583,3958,1,76,TRUE,TRUE,TRUE,405,[],0,3956,1,583,76,TRUE,TRUE,TRUE,1,434,FALSE,19,971,0,TRUE,0,FALSE,0,0.2154004,0.19297267,"private byte[] buf;
private int randomInteger =0;
private String randomString = """";",JJ NN -LRB- -RRB- NN : JJ NN NN SYM CD : JJ NN NN SYM '' '' :,no
TRUE,0,0,1072,583,3958,1,76,TRUE,TRUE,TRUE,405,[],0,3956,1,583,76,TRUE,TRUE,TRUE,1,434,FALSE,20,1068,0,TRUE,0,FALSE,0,0.20361133,0.174539,"public SoundSerializer() throws FileNotFoundException, IOException {
File file = new File(""C:\\soundFile.wav"");","JJ NNP -LRB- -RRB- VBZ NNP , NN : NN NN SYM JJ NN -LRB- `` NNP '' -RRB- :",no
TRUE,0,0,1072,583,3958,1,76,TRUE,TRUE,TRUE,405,[],0,3956,1,583,76,TRUE,TRUE,TRUE,1,434,FALSE,25,1197,0,FALSE,0,FALSE,0,0.12617648,0.10123799,"FileInputStream fis = new FileInputStream(file);
ByteArrayOutputStream bos = new ByteArrayOutputStream();
buf = new byte[1024];",NNP NNP SYM JJ NNP -LRB- NN -RRB- : NNP NN SYM JJ NNP -LRB- -RRB- : NNP SYM JJ NN -LRB- CD -RRB- :,no
TRUE,0,0,1072,583,3958,1,76,TRUE,TRUE,TRUE,405,[],0,3956,1,583,76,TRUE,TRUE,TRUE,1,434,FALSE,53,1350,0,TRUE,0,FALSE,0,0.48637593,0.46833718,"for (int readNum; (readNum = fis.read(buf)) != -1;) {
bos.write(buf, 0, readNum); //no doubt here is 0
//Writes len bytes from the specified byte array starting at offset off to this byte array output stream.","IN -LRB- FW NNP : -LRB- NNP SYM FW -LRB- FW -RRB- -RRB- SYM , CD : -RRB- -LRB- NNP FW , CD , NNP -RRB- : SYM DT NN RB VBZ CD SYM NNS NN NNS IN DT VBN NN NN VBG IN NN RP IN DT NN NN NN NN .",no
TRUE,0,0,1072,583,3958,1,76,TRUE,TRUE,TRUE,405,[],0,3956,1,583,76,TRUE,TRUE,TRUE,1,434,FALSE,15,1595,0,FALSE,0,FALSE,0,0.171404,0.12825978,"System.out.println(""read "" + readNum + "" bytes,"");
}","LS -LRB- `` VB '' SYM NN SYM `` NNS , '' -RRB- : NFP",no
TRUE,0,0,1072,583,3958,1,76,TRUE,TRUE,TRUE,405,[],0,3956,1,583,76,TRUE,TRUE,TRUE,1,434,FALSE,16,1702,0,FALSE,0,FALSE,0,0.3094153,0.3021688,"/**
*fonction to test the sound after deserialization
*/
public void playSound(){",NFP NFP FW TO VB DT NN IN NN SYM JJ NN NN -LRB- -RRB- .,no
TRUE,0,0,1072,583,3958,1,76,TRUE,TRUE,TRUE,405,[],0,3956,1,583,76,TRUE,TRUE,TRUE,1,434,FALSE,37,1806,0,FALSE,0,FALSE,0,0.1998322,0.17077807,"InputStream is = new ByteArrayInputStream(buf);
AudioStream audioStream = null;
try {
audioStream = new AudioStream(is);
} catch (IOException ex) {
Logger.getLogger(SoundSerializer.class.getName()).log(Level.",NN VBZ SYM JJ NNP NNP -RRB- : NNP NNP SYM NN : VB : NNP SYM JJ NNP -LRB- VBZ -RRB- : SYM NN -LRB- NNP NNP -RRB- -LRB- NNP -LRB- -RRB- -RRB- NN -LRB- NN,no
TRUE,0,0,1072,583,3958,1,76,TRUE,TRUE,TRUE,405,[],0,3956,1,583,76,TRUE,TRUE,TRUE,1,434,FALSE,16,2062,0,FALSE,0,FALSE,6.25,0.1434576,0.13261548,"SEVERE, null, ex);
}
AudioPlayer.player.start(audioStream);
}
}
</code></pre>","JJ , JJ , NNP -RRB- : SYM NNP -RRB- : FW : ADD NN -RRB-",no
TRUE,0,0,1072,583,3958,1,76,TRUE,TRUE,TRUE,405,[],0,3956,1,583,76,TRUE,TRUE,TRUE,1,434,FALSE,27,2161,0,FALSE,0,FALSE,3.703703704,0.45854023,0.4549054,"<p>P.S. 
I tried a combo using AudioInputStream + AudioSystem.write() to save to an array (ByteArrayOutputStream --> byte[]) it didn't work.",-LRB- NN PRP VBD DT NN VBG NNP SYM NN NN -RRB- TO VB IN DT NN -LRB- NNP SYM NNP -RRB- -RRB- PRP VBD RB VB .,no
TRUE,0,0,1072,583,3958,1,76,TRUE,TRUE,TRUE,405,[],0,3956,1,583,76,TRUE,TRUE,TRUE,1,434,FALSE,34,2302,0,FALSE,0,TRUE,5.882352941,0.61209714,0.6020628,"Check <a href=""http://www.programcreek.com/2009/02/java-convert-image-to-byte-array-convert-byte-array-to-image/"" rel=""nofollow"" title=""image to byteArray"">image to byte Array</a> and transpose with those Audio oriented Classes.","VB -LRB- DT NN SYM `` ADD '' FW `` NN '' NN SYM `` NN IN NN '' NN IN NN NN , LS -RRB- CC VB IN DT JJ VBN NNS .",no
TRUE,0,0,1072,583,3958,1,76,TRUE,TRUE,TRUE,405,[],0,3956,1,583,76,TRUE,TRUE,TRUE,1,434,FALSE,6,2531,0,FALSE,0,FALSE,16.66666667,0.5839454,0.54730064,Working on a solution...</p>,"VBG IN DT NN , NN",no
TRUE,0,0,1651,13,2651,1,0,TRUE,TRUE,FALSE,110,[],0,2651,0,658,0,TRUE,TRUE,FALSE,1,141,FALSE,22,0,106,FALSE,0,TRUE,4.545454545,0.26313967,0.22694744,"<p>According to the documentation <a href=""https://docs.oracle.com/javase/8/javafx/api/javafx/scene/media/AudioClip.html"" rel=""nofollow noreferrer"">here</a> </p>",-LRB- NN VBG IN DT NN -LRB- DT NN SYM `` ADD '' NN `` NN NN '' RB NN -RRB- -RRB-,no
TRUE,0,0,1651,13,2651,1,0,TRUE,TRUE,FALSE,110,[],0,2651,0,658,0,TRUE,TRUE,FALSE,1,141,FALSE,6,163,0,FALSE,0,FALSE,0,0.17286262,0.15236968,"<blockquote>
<p>",-LRB- NN -RRB- -LRB- NN -RRB-,no
TRUE,0,0,1651,13,2651,1,0,TRUE,TRUE,FALSE,110,[],0,2651,0,658,0,TRUE,TRUE,FALSE,1,141,FALSE,11,181,0,FALSE,0,FALSE,0,0.8223158,0.7906568,The relative volume level at which the clip is played.,DT JJ NN NN IN WDT DT NN VBZ VBN .,no
TRUE,0,0,1651,13,2651,1,0,TRUE,TRUE,FALSE,110,[],0,2651,0,658,0,TRUE,TRUE,FALSE,1,141,FALSE,14,236,0,FALSE,0,FALSE,0,0.3158831,0.30631733,"Valid range is
0.0 (muted) to 1.0 (full volume).",JJ NN VBZ CD -LRB- JJ -RRB- IN CD -LRB- JJ NN -RRB- .,no
TRUE,0,0,1651,13,2651,1,0,TRUE,TRUE,FALSE,110,[],0,2651,0,658,0,TRUE,TRUE,FALSE,1,141,FALSE,18,287,0,FALSE,0,FALSE,0,0.86042625,0.7559026,"Values are clamped to this range internally so values outside this range will have no additional
effect.",NNS VBP VBN IN DT NN RB RB NNS IN DT NN MD VB DT JJ NN .,no
TRUE,0,0,1651,13,2651,1,0,TRUE,TRUE,FALSE,110,[],0,2651,0,658,0,TRUE,TRUE,FALSE,1,141,FALSE,21,394,0,FALSE,0,FALSE,0,0.72879183,0.68410456,"Volume is controlled by attenuation, so values below 1.0 will
reduce the sound level accordingly.</p>
</blockquote>","NN VBZ VBN IN NN , RB NNS IN CD MD VB DT NN NN RB -LRB- NN SYM SYM -RRB-",yes
TRUE,0,0,1651,13,2651,1,0,TRUE,TRUE,FALSE,110,[],0,2651,0,658,0,TRUE,TRUE,FALSE,1,141,FALSE,9,513,0,FALSE,0,FALSE,0,0.6749859,0.67429256,<p>Since the clip object is being returned.,NN IN DT NN NN VBZ VBG VBN .,no
TRUE,0,0,1651,13,2651,1,0,TRUE,TRUE,FALSE,110,[],0,2651,0,658,0,TRUE,TRUE,FALSE,1,141,FALSE,9,557,0,TRUE,0,FALSE,0,0.756094,0.6639268,you can just use it to set volume.,PRP MD RB VB PRP TO VB NN .,no
TRUE,0,0,1651,13,2651,1,0,TRUE,TRUE,FALSE,110,[],0,2651,0,658,0,TRUE,TRUE,FALSE,1,141,FALSE,11,592,0,FALSE,0,FALSE,9.090909091,0.5666227,0.5422544,For example calling your Method above in my code</p>,IN NN VBG PRP$ NN RB IN PRP$ NN . -RRB-,no
TRUE,0,0,1651,13,2651,1,0,TRUE,TRUE,FALSE,110,[],0,2651,0,658,0,TRUE,TRUE,FALSE,1,141,TRUE,20,646,11,FALSE,63,TRUE,10,0.04700154,0.014620299,"<pre><code>AudioClip audioClip = getcharend(); 
audioClip.setVolume(0.9);
</code></pre>","-LRB- NN -RRB- -LRB- NN FW FW , FW -LRB- -RRB- : ADD CD -RRB- : -LRB- GW NN -RRB-",no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],80,4138,0,17493,0,TRUE,TRUE,TRUE,1,237,FALSE,9,0,0,FALSE,0,FALSE,0,0.4409906,0.33300883,<p>Better scalability and maintenance</p>,-LRB- NN JJR NN CC NN -LRB- NN -RRB-,no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],80,4138,0,17493,0,TRUE,TRUE,TRUE,1,237,FALSE,9,43,13,FALSE,13,TRUE,11.11111111,0.42325985,0.22451703,<p>For <code>DriverManager</code>,"NN IN -LRB- NN NN -LRB- , NN -RRB-",no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],80,4138,0,17493,0,TRUE,TRUE,TRUE,1,237,FALSE,28,77,0,TRUE,0,FALSE,0,0.87749404,0.6886256,"you need to know all the details (host, port, username, password, driver class) to connect to DB and to get connections.","PRP VBP TO VB PDT DT NNS -LRB- NN , NN , NN , NN , NN NN -RRB- TO VB IN NNP CC TO VB NNS .",yes
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],80,4138,0,17493,0,TRUE,TRUE,TRUE,1,237,FALSE,21,198,0,FALSE,0,FALSE,4.761904762,0.8448363,0.6820842,Externalizing those in a properties file doesn't change anything about the fact that you need to know them.</p>,"VBG DT IN DT NNS NN VBZ RB VB NN IN DT NN IN PRP VBP TO VB PRP , NN -RRB-",no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],80,4138,0,17493,0,TRUE,TRUE,TRUE,1,237,FALSE,12,311,0,FALSE,10,TRUE,25,0.4372045,0.3134932,<p>Using a <code>DataSource</code>,"-LRB- NN VBG DT -LRB- NN -RRB- NN -LRB- , NN -RRB-",no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],80,4138,0,17493,0,TRUE,TRUE,TRUE,1,237,FALSE,9,346,0,TRUE,0,FALSE,0,0.8486103,0.6498752,you only need to know the JNDI name.,PRP RB VBP TO VB DT NNP NN .,no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],80,4138,0,17493,0,TRUE,TRUE,TRUE,1,237,FALSE,27,383,0,FALSE,0,FALSE,0,0.8515601,0.6689229,"The AppServer cares about the details and is not configured by the client application's vendor, but by an admin where the application is hosted.</p>","DT NNP VBZ IN DT NNS CC VBZ RB VBN IN DT NN NN POS NN , CC IN DT NN WRB DT NN VBZ VBN . -RRB-",no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],80,4138,0,17493,0,TRUE,TRUE,TRUE,1,237,FALSE,6,533,0,FALSE,0,FALSE,0,0.4530475,0.18282522,<p>Scalability:</p>,-LRB- NN NN : NN -RRB-,no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],80,4138,0,17493,0,TRUE,TRUE,TRUE,1,237,FALSE,62,554,0,FALSE,0,FALSE,1.612903226,0.8684447,0.6845852,"<p>Suppose you need to create connections yourself, how would you deal with changing load, sometime you have 10 users sometime you have 1000, you can't just get a connection whenever you need one and later 'release' it so the Database server does not get out of connections, which leads you to connection pooling.","-LRB- NN VB PRP VBP TO VB NNS PRP , WRB MD PRP VB IN VBG NN , RB PRP VBP CD NNS RB PRP VBP CD , PRP MD RB RB VB DT NN WRB PRP VBP CD CC RBR `` NN '' PRP IN DT NN NN VBZ RB VB IN IN NNS , WDT VBZ PRP IN NN NN .",yes
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],80,4138,0,17493,0,TRUE,TRUE,TRUE,1,237,FALSE,7,50,6,FALSE,13,TRUE,28.57142857,0.36740246,0.21317972,<code>DriverManager</code>,-LRB- NN -RRB- NN NFP NN -RRB-,no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],80,4138,0,17493,0,TRUE,TRUE,TRUE,1,237,FALSE,13,896,0,TRUE,10,TRUE,7.692307692,0.53525805,0.42283267,"does not provide it, <code>DataSource</code> does.</p>","VBZ RB VB PRP , -LRB- NNP -LRB- , NN -RRB- VBZ NFP",no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],80,4138,0,17493,0,TRUE,TRUE,TRUE,1,237,FALSE,34,952,85,FALSE,23,TRUE,8.823529412,0.7011807,0.55113345,"<p>If you are going to program a connection pool yourself then you have to use <code>DriverManager</code>, otherwise go with <code>DataSource</code>.</p>","NFP -RRB- IN PRP VBP VBG TO VB DT NN NN PRP RB PRP VBP TO VB -LRB- NN -RRB- NNP -LRB- , NN , RB VB IN -LRB- NN NFP NN -RRB- NN",yes
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],45,4138,0,1595,67,TRUE,TRUE,TRUE,2,109,FALSE,7,0,10,FALSE,13,TRUE,28.57142857,0.35584867,0.14561579,<h2><code>DriverManager</code></h2>,NFP NFP NN NN NFP CD -RRB-,no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],45,4138,0,1595,67,TRUE,TRUE,TRUE,2,109,FALSE,35,37,0,FALSE,0,FALSE,0,0.5471814,0.4370235,"<ul>
<li>hampers the application performance as the connections are created/closed in java classes.</li>
<li>does not support connection pooling.</li>
</ul>","-LRB- NN -RRB- -LRB- SYM VBZ DT NN NN IN DT NNS VBP VBN , VBN IN NN NNS , NNP -RRB- -LRB- SYM VBZ RB VB NN NN -LRB- NNP -RRB- -LRB- FW -RRB-",no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],45,4138,0,1595,67,TRUE,TRUE,TRUE,2,109,FALSE,6,195,0,FALSE,10,TRUE,16.66666667,0.35584867,0.14561579,<h2><code>DataSource</code></h2>,NFP NFP ADD NFP ADD -RRB-,no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],45,4138,0,1595,67,TRUE,TRUE,TRUE,2,109,FALSE,61,229,0,FALSE,0,FALSE,4.918032787,0.6423521,0.5650425,"<ul>
<li>improves application performance as connections are not created/closed within a class, they are managed by the application server and can be fetched while at runtime.</li>
<li>it provides a facility creating a pool of connections</li>
<li>helpful for enterprise applications </li>
</ul>","-LRB- NN -RRB- -LRB- NN NN NN IN NNS VBP RB VBN , VBN IN DT NN , PRP VBP VBN IN DT NN NN CC MD VB VBN IN IN NN -LRB- NNP -RRB- -LRB- SYM PRP VBZ DT NN VBG DT NN IN NNS , NNP -RRB- -LRB- SYM JJ IN NN NNS -LRB- NNP -RRB- -LRB- FW -RRB-",no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],6,705,3432,325496,58,TRUE,TRUE,TRUE,3,1692,FALSE,23,0,0,FALSE,10,TRUE,13.04347826,0.38780487,0.26084492,"<h1>tl;dr</h1>
<ul>
<li><code>DataSource</code> is a way of <em>externalizing</em>","NNP : NNP -RRB- -LRB- FW -RRB- -LRB- FW NN , NN -RRB- VBZ DT NN IN -LRB- NN NN SYM PRP -RRB-",no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],6,705,3432,325496,58,TRUE,TRUE,TRUE,3,1692,FALSE,44,83,173,TRUE,13,TRUE,4.545454545,0.88519096,0.7329752,"the info needed to connect to a database server: server name or address, user name, user password, settings specific to your particular database engine, etc.</li>
<li><code>DriverManager</code> is fine during your initial learning.","DT NN VBN TO VB IN DT NN NN : NN NN CC NN , NN NN , NN NN , NNS JJ IN PRP$ JJ NN NN , NN -RRB- -LRB- NN NN , NN -RRB- VBZ JJ IN PRP$ JJ NN .",yes
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],6,705,3432,325496,58,TRUE,TRUE,TRUE,3,1692,FALSE,19,315,0,FALSE,0,FALSE,5.263157895,0.8669926,0.66738313,"But when deploying to production, you’ll not want to hard-code connection info within your codebase.","CC WRB VBG IN NN , PRP MD RB VB TO JJ HYPH NN NN NN IN PRP$ NN .",yes
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],6,705,3432,325496,58,TRUE,TRUE,TRUE,3,1692,FALSE,51,416,59,FALSE,33,TRUE,7.843137255,0.73407847,0.612549,"In real work, use <code>DataSource</code> instead of <code>DriverManager</code> to access the externalized configuration info (address, name, password, etc.).</li>
<li><code>Connection</code> is your live connection to the database.","IN JJ NN , VB -LRB- NN -LRB- , NN -RRB- RB IN -LRB- NN -RRB- NN NFP NN -RRB- TO VB DT JJ NN NN -LRB- NN , NN , NN , FW . -RRB- ADD -LRB- NN NN , NN -RRB- VBZ PRP$ JJ NN IN DT NN .",no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],6,705,3432,325496,58,TRUE,TRUE,TRUE,3,1692,FALSE,31,649,58,FALSE,33,TRUE,22.58064516,0.5604411,0.46808028,A <code>DataSource</code> object will make use of a <code>DriverManager</code> to get a <code>Connection</code>,"DT -LRB- NN -LRB- , NN -RRB- NN MD VB NN IN DT -LRB- NN -RRB- NN NFP NN -RRB- TO VB DT -LRB- NN -RRB- NN -LRB- , NN -RRB-",yes
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],6,705,3432,325496,58,TRUE,TRUE,TRUE,3,1692,FALSE,25,761,0,TRUE,0,TRUE,4,0.5195656,0.4388901,"object for you to use in making queries to the database.</li>
</ul>
<h1>Details</h1>
<p>","NN IN PRP TO VB IN VBG NNS IN DT NN -LRB- NNP -RRB- -LRB- NN -RRB- -LRB- NN , NN -RRB- -LRB- NN -RRB-",no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],6,705,3432,325496,58,TRUE,TRUE,TRUE,3,1692,FALSE,16,849,0,FALSE,0,FALSE,0,0.5243964,0.44885486,"Let's look at the specifics of your Question.</p>
<blockquote>
<p>",VB PRP VB IN DT NNS IN PRP$ NN -LRB- NN -LRB- SYM -RRB- -LRB- NN -RRB-,no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],6,705,3432,325496,58,TRUE,TRUE,TRUE,3,1692,FALSE,27,915,0,FALSE,20,TRUE,18.51851852,0.633839,0.55676377,What I am trying to understand is what the difference is between a <code>Connection</code> and a <code>DataSource</code></p>,"WP PRP VBP VBG TO VB VBZ WP DT NN VBZ IN DT -LRB- NN -RRB- NN -LRB- , NN -RRB- CC DT -LRB- NN NN -RRB-",no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],6,705,3432,325496,58,TRUE,TRUE,TRUE,3,1692,FALSE,22,1040,0,FALSE,10,TRUE,9.090909091,0.36722732,0.18587573,"</blockquote>
<p>A <a href=""https://docs.oracle.com/en/java/javase/17/docs/api/java.sql/java/sql/Connection.html"" rel=""noreferrer""><code>Connection</code></a>","-LRB- NN -RRB- -LRB- NN -LRB- NN NN SYM `` ADD '' FW SYM `` NN '' , NNP NN -RRB- -RRB-",no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],6,705,3432,325496,58,TRUE,TRUE,TRUE,3,1692,FALSE,40,1199,0,TRUE,10,TRUE,5,0.58399963,0.43131906,"object represents a live session with your database server, going back and forth to make queries and get results.</p>
<p>A <a href=""https://docs.oracle.com/en/java/javase/17/docs/api/java.sql/javax/sql/DataSource.html"" rel=""noreferrer""><code>DataSource</code></a>","NN VBZ DT JJ NN IN PRP$ NN NN , VBG RB CC RB TO VB NNS CC VB NNS , NN -LRB- NN -LRB- DT NN SYM `` ADD '' FW SYM `` FW '' -LRB- ADD ADD -RRB-",no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],6,705,3432,325496,58,TRUE,TRUE,TRUE,3,1692,FALSE,13,1463,0,TRUE,0,FALSE,7.692307692,0.88869506,0.7197773,object holds the credentials needed to get a connection to the database.,NN VBZ DT NNS VBN TO VB DT NN IN DT NN .,yes
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],6,705,3432,325496,58,TRUE,TRUE,TRUE,3,1692,FALSE,8,1536,0,FALSE,10,TRUE,25,0.5173929,0.4371324,"Typically, a <code>DataSource</code>","RB , DT -LRB- NN , NN -RRB-",no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],6,705,3432,325496,58,TRUE,TRUE,TRUE,3,1692,FALSE,28,1573,0,TRUE,0,FALSE,7.142857143,0.93723285,0.75124484,"holds a user name recognized by the database server, a password for that user, and various settings to customize any future sessions with the database.","VBZ DT NN NN VBN IN DT NN NN , DT NN IN DT NN , CC JJ NNS TO VB DT JJ NNS IN DT NN .",no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],6,705,3432,325496,58,TRUE,TRUE,TRUE,3,1692,FALSE,36,1725,0,FALSE,20,TRUE,11.11111111,0.5912895,0.50245094,A <code>DataSource</code> is not &quot;open&quot; or &quot;closed&quot;; it merely holds the info needed to make a <code>Connection</code>,"DT -LRB- NNP -LRB- , NN -RRB- VBZ RB JJ : NN : CC NN : NN : : PRP RB VBZ DT NN VBN TO VB DT -LRB- NN -RRB- NN -LRB- , NN -RRB-",no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],6,705,3432,325496,58,TRUE,TRUE,TRUE,3,1692,FALSE,17,1864,0,TRUE,0,FALSE,0,0.47846895,0.38900763,"which is open or closed.</p>
<blockquote>
<p>why it exists</p>",WDT VBZ JJ CC VBN -LRB- NN -LRB- ADD -RRB- -LRB- NN WRB PRP VBZ SYM NN,no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],6,705,3432,325496,58,TRUE,TRUE,TRUE,3,1692,FALSE,9,1927,0,FALSE,10,TRUE,11.11111111,0.36887604,0.16006169,"</blockquote>
<p><code>Connection</code>",-LRB- NN -RRB- -LRB- NN NN NFP NN -RRB-,no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],6,705,3432,325496,58,TRUE,TRUE,TRUE,3,1692,FALSE,17,1968,0,TRUE,10,TRUE,11.76470588,0.65556157,0.56381613,"exists as the conduit for conversation with a database server.</p>
<p><code>DataSource</code>","VBZ IN DT NN IN NN IN DT NN NN . -LRB- NN NN , NN -RRB-",no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],6,705,3432,325496,58,TRUE,TRUE,TRUE,3,1692,FALSE,25,2062,0,TRUE,0,FALSE,8,0.881397,0.7189677,"exists as a way to avoid hard-coding connection info (user name, password, options) within your app’s code base.","VBZ IN DT NN TO VB JJ HYPH NN NN NN -LRB- NN NN , NN , NNS -RRB- IN PRP$ NN POS NN NN .",no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],6,705,3432,325496,58,TRUE,TRUE,TRUE,3,1692,FALSE,48,2175,0,FALSE,0,TRUE,4.166666667,0.81205964,0.6809495,"In real work, after you deploy your app you’ll not want to have to edit your code, recompile, and redeploy just because the <a href=""https://en.wikipedia.org/wiki/Database_administrator"" rel=""noreferrer"">DBA</a> rotated passwords.</p>
<p>","IN JJ NN , IN PRP VBP PRP$ NN PRP MD RB VB TO VB TO VB PRP$ NN , VB , CC VB RB IN DT -LRB- DT NN SYM `` ADD '' FW SYM `` NN '' -RRB- NN , NN VBN NNS -RRB- -LRB- NN -RRB-",no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],6,705,3432,325496,58,TRUE,TRUE,TRUE,3,1692,FALSE,32,2413,0,FALSE,0,FALSE,3.125,0.9103487,0.71027637,"As a programmer, you do not want to be affected by deployment issues such as the database server’s machine network address, user names, user passwords, and such.","IN DT NN , PRP VBP RB VB TO VB VBN IN NN NNS JJ IN DT NN NN POS NN NN NN , NN NNS , NN NNS , CC JJ .",no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],6,705,3432,325496,58,TRUE,TRUE,TRUE,3,1692,FALSE,41,2575,183,FALSE,0,FALSE,2.43902439,0.7849352,0.68705267,"You’ll want that info externalized outside of your codebase.</p>
<blockquote>
<p>externalizing database properties such as username, password, url etc in a property file and then use DriverManager work in the same way?</p>","PRP MD VB DT NN VBN RB IN PRP$ NN -LRB- NN -LRB- SYM -RRB- -LRB- NN NN NNS JJ IN NN , NN , NN FW IN DT NN NN CC RB VB NNP NN IN DT JJ NN . -RRB-",no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],6,705,3432,325496,58,TRUE,TRUE,TRUE,3,1692,FALSE,6,2798,0,FALSE,0,FALSE,0,0.44768298,0.23772846,"</blockquote>
<p>No.",-LRB- NN -RRB- -LRB- NN .,no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],6,705,3432,325496,58,TRUE,TRUE,TRUE,3,1692,FALSE,15,2819,0,FALSE,0,FALSE,6.666666667,0.8969003,0.68461126,Your code would still be hard-coded to look for that property file.,PRP$ NN MD RB VB JJ HYPH VBN TO VB IN DT NN NN .,no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],6,705,3432,325496,58,TRUE,TRUE,TRUE,3,1692,FALSE,29,2887,0,FALSE,0,FALSE,0,0.85054106,0.6968262,"But there are other ways for DBAs and SysAdmins to configure and communicate that connection info (user name, passwords, server address, etc.).","CC EX VBP JJ NNS IN NNS CC NNPS TO VB CC VB IN NN NN -LRB- NN NN , NNS , NN NN , FW . -RRB- .",no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],6,705,3432,325496,58,TRUE,TRUE,TRUE,3,1692,FALSE,7,3031,0,FALSE,0,TRUE,0,0.4868701,0.3490325,The Java programmer should <em>not</em>,DT NNP NN MD -LRB- NNP -RRB-,no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],6,705,3432,325496,58,TRUE,TRUE,TRUE,3,1692,FALSE,16,3071,0,TRUE,0,FALSE,0,0.7541355,0.6383404,"make assumptions about the choices and changes to be made during deployment.</p>
<p>",VB NNS IN DT NNS CC NNS TO VB VBN IN NN . -LRB- NN -RRB-,no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],6,705,3432,325496,58,TRUE,TRUE,TRUE,3,1692,FALSE,31,3155,0,FALSE,0,TRUE,6.451612903,0.8592272,0.6998023,"The principal way to externalize that info is to place the info within a <a href=""https://en.wikipedia.org/wiki/Directory_service"" rel=""noreferrer"">directory server</a>.",DT JJ NN TO VB DT NN VBZ TO VB DT NN IN DT -LRB- DT NN SYM `` ADD '' NN SYM `` NN '' -RRB- NN NN -RRB- NFP,yes
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],6,705,3432,325496,58,TRUE,TRUE,TRUE,3,1692,FALSE,7,3325,0,FALSE,0,FALSE,0,0.80072117,0.6432968,There are many directory server implementations.,EX VBP JJ NN NN NNS .,yes
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],6,705,3432,325496,58,TRUE,TRUE,TRUE,3,1692,FALSE,17,3374,0,FALSE,0,FALSE,11.76470588,0.84348017,0.6634936,"These are commonly accessed via a standardized interface, such as the <a href=""","DT VBP RB VBN IN DT VBN NN , JJ IN DT -LRB- DT NN SYM ''",no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],6,705,3432,325496,58,TRUE,TRUE,TRUE,3,1692,FALSE,14,3453,0,TRUE,0,FALSE,0,0.40329528,0.1731148,"https://en.wikipedia.org/wiki/Lightweight_Directory_Access_Protocol"" rel=""noreferrer"">LDAP</a> interface.</p>
<p>","ADD `` FW SYM `` NN '' NN , NN NN -RRB- -LRB- NN",no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],6,705,3432,325496,58,TRUE,TRUE,TRUE,3,1692,FALSE,21,3566,0,FALSE,0,FALSE,9.523809524,0.91688365,0.73095375,Java provides a facility for your Java-based app to interact with a directory service through the standardized interface.,NNP VBZ DT NN IN PRP$ NNP HYPH VBN NN TO VB IN DT NN NN IN DT VBN NN .,yes
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],6,705,3432,325496,58,TRUE,TRUE,TRUE,3,1692,FALSE,11,3688,0,FALSE,0,FALSE,9.090909091,0.6835056,0.48371634,"This facility is known as 👉 <a href=""",DT NN VBZ VBN IN `` -LRB- DT NN SYM '',no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],6,705,3432,325496,58,TRUE,TRUE,TRUE,3,1692,FALSE,9,3725,0,TRUE,0,TRUE,0,0.2003192,0.109141946,"https://en.wikipedia.org/wiki/Java_Naming_and_Directory_Interface"" rel=""noreferrer""><em>",ADD `` FW SYM `` NN '' ADD -RRB-,no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],6,705,3432,325496,58,TRUE,TRUE,TRUE,3,1692,FALSE,11,3813,0,FALSE,0,FALSE,0,0.47017482,0.31711754,"Java Naming and Directory Interface (JNDI)</em></a>.</p>
<p>",NNP NNP CC NNP NNP -LRB- NNP -RRB- NNP -LRB- NN,no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],6,705,3432,325496,58,TRUE,TRUE,TRUE,3,1692,FALSE,33,3873,0,FALSE,10,TRUE,18.18181818,0.72756404,0.6184663,"Through JNDI, your app can <strong>ask a directory service to provide a <code>DataSource</code> object</strong> with your necessary connection info.","IN NNP , PRP$ NN MD -LRB- JJ IN DT NN NN TO VB DT -LRB- NN -RRB- NN -LRB- , NN -RRB- NN SYM JJ -RRB- IN PRP$ JJ NN NN .",yes
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],6,705,3432,325496,58,TRUE,TRUE,TRUE,3,1692,FALSE,26,4022,0,FALSE,0,FALSE,0,0.8628787,0.6691136,"By using JNDI, your app need not make assumptions about how your DBAs/SysAdmins chose to deliver this connection info to your app.","IN VBG NNP , PRP$ NN VBP RB VB NNS IN WRB PRP$ NNS , NNPS VBD TO VB DT NN NN IN PRP$ NN .",yes
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],6,705,3432,325496,58,TRUE,TRUE,TRUE,3,1692,FALSE,35,4153,0,FALSE,10,TRUE,11.42857143,0.538291,0.45493513,"Indeed, as a programmer you need know <em>nothing</em> about their deployment choices and changes.</p>
<blockquote>
<p>is the <code>DataSource</code>","RB , IN DT NN PRP VBP VB -LRB- NN , PRP -RRB- IN PRP$ NN NNS CC NNS -LRB- NN -LRB- ADD -RRB- -LRB- NN DT -LRB- NN -RRB- NN -LRB- , NN -RRB-",no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],6,705,3432,325496,58,TRUE,TRUE,TRUE,3,1692,FALSE,18,4303,0,TRUE,0,FALSE,5.555555556,0.88629335,0.73648936,interface created only to have a common way of returning connections that can be pooled etc?</p>,NN VBN RB TO VB DT JJ NN IN VBG NNS WDT MD VB VBN FW . -RRB-,no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],6,705,3432,325496,58,TRUE,TRUE,TRUE,3,1692,FALSE,6,1040,0,FALSE,0,FALSE,0,0.4536696,0.19650042,"</blockquote>
<p>",-LRB- NN -RRB- -LRB- NN -RRB-,no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],6,705,3432,325496,58,TRUE,TRUE,TRUE,3,1692,FALSE,12,4417,0,FALSE,0,FALSE,16.66666667,0.78445816,0.59453535,"The connections returned by a call to <a href=""",DT NNS VBD IN DT NN IN -LRB- DT NN SYM '',no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],6,705,3432,325496,58,TRUE,TRUE,TRUE,3,1692,FALSE,8,4464,0,TRUE,24,TRUE,0,0.21174599,0.03225515,"https://docs.oracle.com/en/java/javase/17/docs/api/java.sql/javax/sql/DataSource.html#getConnection()"" rel=""noreferrer""><code>DataSource#getConnection</code></a>",ADD `` NN NN '' -LRB- ADD -RRB-,no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],6,705,3432,325496,58,TRUE,TRUE,TRUE,3,1692,FALSE,11,4626,0,TRUE,0,FALSE,9.090909091,0.83472836,0.662392,may or may not be part of a connection pool.,MD CC MD RB VB NN IN DT NN NN .,no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],6,705,3432,325496,58,TRUE,TRUE,TRUE,3,1692,FALSE,11,4671,0,FALSE,0,FALSE,0,0.7883919,0.6188073,"As the Java programmer, you generally do not care.","IN DT NNP NN , PRP RB VBP RB VB .",no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],6,705,3432,325496,58,TRUE,TRUE,TRUE,3,1692,FALSE,15,4722,0,FALSE,0,FALSE,0,0.8205086,0.6592488,"At deployment time, the DBAs/SysAdmins may initially deploy with non-pooled connections.","IN NN NN , DT NNS , NNPS MD RB VB IN JJ NNS .",yes
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],6,705,3432,325496,58,TRUE,TRUE,TRUE,3,1692,FALSE,10,4811,0,FALSE,0,FALSE,0,0.86587524,0.6640527,Then later they may change to using pooled connections.,RB RBR PRP MD VB IN VBG VBN NNS .,yes
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],6,705,3432,325496,58,TRUE,TRUE,TRUE,3,1692,FALSE,22,4867,0,FALSE,0,FALSE,4.545454545,0.8576538,0.67496324,"Again, you need not care, and there is no need to edit your code, recompile, and redeploy.","RB , PRP VBP RB VB , CC EX VBZ DT NN TO VB PRP$ NN , VB , CC VB .",no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],6,705,3432,325496,58,TRUE,TRUE,TRUE,3,1692,FALSE,17,4958,0,FALSE,0,FALSE,0,0.60505426,0.48943743,"The DBAs can change the pooling without your involvement.</p>
<blockquote>
<p>",DT NNS MD VB DT NN IN PRP$ NN -LRB- NN -LRB- SYM -RRB- -LRB- NN -RRB-,yes
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],6,705,3432,325496,58,TRUE,TRUE,TRUE,3,1692,FALSE,56,5036,0,FALSE,0,TRUE,8.928571429,0.83207864,0.69483656,"In Java EE, does the application server implement this interface and the applications deployed to have a reference to a datasource instead of a connection?</p>
</blockquote>
<p>FYI, Java EE is now known as <a href=""https://jakarta.ee/"" rel=""noreferrer""><em>","IN NNP NNP , VBZ DT NN NN VB DT NN CC DT NNS VBN TO VB DT NN IN DT NN RB IN DT NN . NFP NN , NN -RRB- -LRB- NNP , NNP NNP VBZ RB VBN IN -LRB- DT NN SYM `` ADD '' FW SYM `` NN '' , PRP -RRB-",no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],6,705,3432,325496,58,TRUE,TRUE,TRUE,3,1692,FALSE,18,5293,0,FALSE,0,TRUE,5.555555556,0.4052763,0.29800385,"Jakarta EE</em></a>, after <a href=""https://en.wikipedia.org/wiki/Oracle_Corporation"" rel=""noreferrer"">","NNP NNP NN , IN -LRB- DT NN SYM `` FW '' NN SYM `` NN '' -RRB-",no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],6,705,3432,325496,58,TRUE,TRUE,TRUE,3,1692,FALSE,20,5396,0,FALSE,0,TRUE,5,0.56359756,0.4524966,"Oracle Corp</a> transferred responsibility to the <a href=""https://en.wikipedia.org/wiki/Eclipse_Foundation"" rel=""noreferrer"">",NNP NNP -RRB- VBD NN IN DT -LRB- DT NN SYM `` NNP '' NN SYM `` NN '' -RRB-,no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],6,705,3432,325496,58,TRUE,TRUE,TRUE,3,1692,FALSE,6,5522,0,FALSE,0,FALSE,0,0.45524812,0.19200832,"Eclipse Foundation</a>.</p>
<p>",NNP NNP NNP -LRB- NN -RRB-,no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],6,705,3432,325496,58,TRUE,TRUE,TRUE,3,1692,FALSE,129,5553,0,FALSE,10,TRUE,6.976744186,0.47573477,0.33203846,"You can use <a href=""https://en.wikipedia.org/wiki/Java_Database_Connectivity"" rel=""noreferrer"">JDBC</a> and <code>DataSource</code> objects in any kind of Java app: <a href=""https://en.wikipedia.org/wiki/Console_application"" rel=""noreferrer"">console</a>, desktop (<a href=""https://en.wikipedia.org/wiki/JavaFX"" rel=""noreferrer"">JavaFX</a>/<a href=""https://en.wikipedia.org/wiki/Swing_(Java)"" rel=""noreferrer"">Swing</a>/<a href=""https://en.wikipedia.org/wiki/Standard_Widget_Toolkit"" rel=""noreferrer"">SWT</a>), <a href=""https://en.wikipedia.org/wiki/Web_application"" rel=""noreferrer"">web app</a>, <a href=""https://en.wikipedia.org/wiki/Microservices"" rel=""noreferrer"">microservice</a>, etc.</p>
<p>","PRP MD VB -LRB- DT NN SYM `` ADD '' NN SYM `` NN '' NN , NN CC -LRB- NN -RRB- NN NFP NN -RRB- NNS IN DT NN IN NNP NN : -LRB- DT NN SYM `` NNP '' NN SYM `` NN '' NN , NN -LRB- -LRB- SYM NN SYM `` FW '' FW SYM `` NN '' -RRB- FW : NN SYM `` FW '' FW SYM `` NN '' -RRB- NN -LRB- FW FW FW SYM `` FW '' FW SYM `` NN '' -RRB- NNP NN -RRB- , -LRB- `` NN SYM `` FW '' FW SYM `` NN '' -RRB- NN NN , -LRB- DT NN SYM `` ADD '' NN `` NN '' NN -RRB- , NN -LRB- NN -RRB-",no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],6,705,3432,325496,58,TRUE,TRUE,TRUE,3,1692,FALSE,21,6251,0,FALSE,10,TRUE,9.523809524,0.54394853,0.42832702,"By &quot;this interface&quot;, if you mean the <code>DataSource</code> interface…","IN NN : DT NN : , IN PRP VBP DT -LRB- NN -RRB- NN -LRB- , NN -RRB- NN :",no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],6,705,3432,325496,58,TRUE,TRUE,TRUE,3,1692,FALSE,45,6333,0,FALSE,0,TRUE,2.222222222,0.36747766,0.26019564,"No, the Jakarta EE implementation such as <em>Tomcat</em>, <em>Jetty</em>, <em>Glassfish</em>, <em>Payara</em>, <em>WildFly</em>, <em>JBoss</em>, <em>Open Liberty</em>, does <em>not</em>","UH , DT NNP NNP NN JJ IN -LRB- NNP FW , -LRB- NNP NNP HYPH NNP , -LRB- FW NNP , -LRB- FW NNP , -LRB- FW NNP FW , FW , -LRB- NNP -RRB- NNP NNP SYM FW , VBZ -LRB- FW -RRB-",no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],6,705,3432,325496,58,TRUE,TRUE,TRUE,3,1692,FALSE,7,6520,0,TRUE,10,TRUE,14.28571429,0.49752164,0.3525641,implement <code>DataSource</code>.,"VB -LRB- NN -LRB- , NN NFP",no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],6,705,3432,325496,58,TRUE,TRUE,TRUE,3,1692,FALSE,51,6555,0,FALSE,0,TRUE,1.960784314,0.7608261,0.6525879,"Typically the <a href=""https://en.wikipedia.org/wiki/JDBC_driver"" rel=""noreferrer"">JDBC driver</a> provides an implementation, or your connection pool implementation does.</p>
<p>Again, this is configured at deployment by the DBA/SysAdmin rather than you the programmer during development.","RB DT -LRB- DT NN SYM `` FW '' NN SYM `` NN '' -RRB- NN NN '' -RRB- VBZ DT NN , CC PRP$ NN NN NN VBZ . -LRB- NNP , DT VBZ VBN IN NN IN DT NN , NNP RB IN PRP DT NN IN NN .",no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],6,705,3432,325496,58,TRUE,TRUE,TRUE,3,1692,FALSE,6,6845,0,FALSE,0,TRUE,16.66666667,0.38533375,0.212849,You should <em>not</em>,PRP MD -LRB- NNP PRP -RRB-,yes
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],6,705,3432,325496,58,TRUE,TRUE,TRUE,3,1692,FALSE,10,6869,0,TRUE,0,FALSE,10,0.77681243,0.6039071,bundle a JDBC driver with your Jakarta EE app.,VB DT NN NN IN PRP$ NNP NNP NN .,no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],6,705,3432,325496,58,TRUE,TRUE,TRUE,3,1692,FALSE,48,6916,0,FALSE,4,TRUE,4.166666667,0.79514253,0.6709454,"Instead configure your dependency manager (Maven, Gradle, etc.) to make a driver available transiently, only during development for your work, but not in the final artifact (<code>.war</code> file etc.) for deployment.</p>
<p>","RB VB PRP$ NN NN -LRB- NNP , NNP , FW -RRB- TO VB DT NN JJ RB , RB IN NN IN PRP$ NN , CC RB IN DT JJ NN -LRB- -LRB- NN -LRB- , NN -RRB- NN FW -RRB- IN NN -RRB- -LRB- NN -RRB-",no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],6,705,3432,325496,58,TRUE,TRUE,TRUE,3,1692,FALSE,19,7142,0,FALSE,10,TRUE,15.78947368,0.7057183,0.5929405,The Jakarta EE implementation handles getting your app a <code>DataSource</code> object.,"DT NNP NNP NN VBZ VBG PRP$ NN DT -LRB- NN -RRB- NN -LRB- , NN -RRB- NN .",yes
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],6,705,3432,325496,58,TRUE,TRUE,TRUE,3,1692,FALSE,44,7231,0,FALSE,10,TRUE,6.818181818,0.91262,0.7627984,"The implementation may itself act as the directory service; for example Tomcat can hold the connection info within its own configuration files, and then deliver that info to your app as a <code>DataSource</code> object.","DT NN MD PRP VB IN DT NN NN : IN NN NNP MD VB DT NN NN IN PRP$ JJ NN NNS , CC RB VB DT NN IN PRP$ NN IN DT -LRB- NN -RRB- NN -LRB- , NN -RRB- NN .",yes
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],6,705,3432,325496,58,TRUE,TRUE,TRUE,3,1692,FALSE,36,7451,0,FALSE,0,TRUE,8.333333333,0.82501936,0.6696486,"Or the DBAs/SysAdmins may configure the Jakarta EE implementation to connect to a separate directory server implementation such as <a href=""https://en.wikipedia.org/wiki/Active_Directory"" rel=""noreferrer""><em>","CC DT NNS , NNS MD VB DT NNP NNP NN TO VB IN DT JJ NN NN NN JJ IN -LRB- DT NN SYM `` FW '' FW SYM `` NN '' , PRP -RRB-",no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],6,705,3432,325496,58,TRUE,TRUE,TRUE,3,1692,FALSE,19,7660,0,FALSE,0,TRUE,5.263157895,0.523229,0.35545263,"Microsoft Active Directory</em></a> or <a href=""https://en.wikipedia.org/wiki/OpenLDAP"" rel=""noreferrer""><em>OpenLDAP</em></a>.","NNP NNP NNP , NN CC -LRB- DT NN SYM `` FW '' NN `` NN '' . ADD",no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],6,705,3432,325496,58,TRUE,TRUE,TRUE,3,1692,FALSE,22,7788,0,FALSE,0,FALSE,0,0.67172444,0.56986344,"Again, all these details are none of your concern as the Java programmer.</p>
<blockquote>
<p>","RB , PDT DT NNS VBP NN IN PRP$ NN IN DT NNP NN -LRB- NN -LRB- ADD -RRB- -LRB- NN -RRB-",no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],6,705,3432,325496,58,TRUE,TRUE,TRUE,3,1692,FALSE,23,5105,0,TRUE,0,FALSE,13.04347826,0.7503929,0.6373075,"the applications deployed to have a reference to a datasource instead of a connection?</p>
</blockquote>
<p>","DT NNS VBN TO VB DT NN IN DT NN RB IN DT NN . NFP NN , NN -RRB- -LRB- NN -RRB-",no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],6,705,3432,325496,58,TRUE,TRUE,TRUE,3,1692,FALSE,20,7990,0,FALSE,10,TRUE,20,0.69912064,0.55301404,"In a Jakarta EE deployment, the Jakarta EE implementation delivers a <code>DataSource</code>","IN DT NNP NNP NN , DT NNP NNP NN VBZ DT -LRB- NN -RRB- NN -LRB- , NN -RRB-",yes
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],6,705,3432,325496,58,TRUE,TRUE,TRUE,3,1692,FALSE,5,8083,0,TRUE,0,FALSE,0,0.80138826,0.6078541,object to your app.,VB IN PRP$ NN .,no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],6,705,3432,325496,58,TRUE,TRUE,TRUE,3,1692,FALSE,11,8103,0,FALSE,13,TRUE,18.18181818,0.5398793,0.3668114,Your app code then calls <code>getConnection</code>,"PRP$ NN NN RB VBZ -LRB- NN -LRB- , NN -RRB-",no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],6,705,3432,325496,58,TRUE,TRUE,TRUE,3,1692,FALSE,9,8155,0,TRUE,0,FALSE,0,0.85946596,0.65947384,when needing to talk to the database server.,WRB VBG TO VB IN DT NN NN .,no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],6,705,3432,325496,58,TRUE,TRUE,TRUE,3,1692,FALSE,15,8200,0,FALSE,10,TRUE,20,0.65292096,0.4945299,Your app code then closes the resulting <code>Connection</code>,"PRP$ NN NN RB VBZ DT NN -LRB- NN -RRB- NN -LRB- , NN -RRB-",no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],6,705,3432,325496,58,TRUE,TRUE,TRUE,3,1692,FALSE,31,8264,0,TRUE,0,FALSE,0,0.8627954,0.7148272,"object when done talking to the database server.</p>
<p>Tip: Use try-with-resources syntax to automatically close connections, statements, and other JDBC resources.","NN WRB VBN VBG IN DT NN NN . -LRB- NN : VB VB HYPH IN HYPH NNS NN TO RB VB NNS , NNS , CC JJ NN NNS .",no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],6,705,3432,325496,58,TRUE,TRUE,TRUE,3,1692,FALSE,13,8429,0,FALSE,10,TRUE,15.38461538,0.5844761,0.47215277,"As mentioned above, the <code>DataSource</code>","IN VBN RB , DT -LRB- NN -RRB- NN -LRB- , NN -RRB-",no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],6,705,3432,325496,58,TRUE,TRUE,TRUE,3,1692,FALSE,18,8477,0,TRUE,0,FALSE,5.555555556,0.859811,0.6841487,"object is not a resource in that sense, and is never opened or closed itself.</p>","NN VBZ RB DT NN IN DT NN , CC VBZ RB VBN CC VBN PRP , NN",no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],5,2577,1560,23504,89,TRUE,TRUE,TRUE,4,39,FALSE,28,0,0,FALSE,10,TRUE,10.71428571,0.7217173,0.57968825,"<p><code>DataSource</code> objects can provide connection pooling and distributed transactions, so you may have to use <code>DataSource</code>","NN NN NFP NN -RRB- NNS MD VB NN NN CC VBN NNS , RB PRP MD VB TO VB -LRB- NN -RRB- NN -LRB- , NN -RRB-",yes
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],5,2577,1560,23504,89,TRUE,TRUE,TRUE,4,39,FALSE,11,143,0,TRUE,0,FALSE,0,0.7566374,0.61308813,if you need one of or both these features.</p>,IN PRP VBP CD IN CC PDT DT NNS . NN,no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],4,2637,1501,49,0,TRUE,TRUE,TRUE,5,189,FALSE,13,0,0,FALSE,0,FALSE,7.692307692,0.5686672,0.46396494,<p>Below code shows two way for getting connection.</p>,-LRB- NN JJ NN VBZ CD NN IN VBG NN . NFP -RRB-,no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],4,2637,1501,49,0,TRUE,TRUE,TRUE,5,189,FALSE,18,57,0,FALSE,15,TRUE,5.555555556,0.6556976,0.5515011,<p>There is no need to know about URL in case of <code>mySqlDataSource</code>,"NN EX VBZ DT NN TO VB IN NN IN NN IN -LRB- NNP -LRB- , NN -RRB-",no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],4,2637,1501,49,0,TRUE,TRUE,TRUE,5,189,FALSE,7,135,0,TRUE,0,FALSE,0,0.6689545,0.5332812,as this line is commented.</p>,IN DT NN VBZ VBN . -RRB-,no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],4,2637,1501,49,0,TRUE,TRUE,TRUE,5,189,FALSE,6,167,0,FALSE,34,TRUE,0,0.41798967,0.32058695,<pre><code>public class MySqlDataSourceTest {,-LRB- GW GW GW NN -RRB-,no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],4,2637,1501,49,0,TRUE,TRUE,TRUE,5,189,FALSE,15,214,0,TRUE,0,FALSE,0,0.40485108,0.3090077,"public static void main(String[] args) throws SQLException, ClassNotFoundException {","JJ JJ NN JJ -LRB- NN -LRB- -RRB- NNS -RRB- VBZ NN , NNP -RRB-",no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],4,2637,1501,49,0,TRUE,TRUE,TRUE,5,189,FALSE,32,962,0,FALSE,0,FALSE,0,0.19801083,0.08691904,"Statement st=(Statement) c.createStatement();
ResultSet rs=st.executeQuery(""select id from employee"");
while(rs.next())
{
System.out.println(rs.getInt(1));
}",NN -LRB- NN -RRB- NNP -LRB- -RRB- : NN NN -LRB- `` VB NN IN NN '' -RRB- : IN -LRB- NNP -LRB- -RRB- -RRB- -LRB- ADD FW -RRB- -RRB- : NFP,no
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],0,2902,1235,304,0,TRUE,TRUE,FALSE,6,52,FALSE,12,0,0,FALSE,0,FALSE,8.333333333,0.73288757,0.6379087,<p>We can get connection using a datasource as follows.,NFP -RRB- PRP MD VB NN VBG DT NN IN VBZ .,yes
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],0,2902,1235,304,0,TRUE,TRUE,FALSE,6,52,FALSE,10,56,0,FALSE,0,FALSE,0,0.8443501,0.6834336,Use the connection to perform any database query.</p>,VB DT NN TO VB DT NN NN . -RRB-,yes
TRUE,108,0,98433,48677,4138,6,72,TRUE,TRUE,TRUE,235,[],0,2902,1235,304,0,TRUE,TRUE,FALSE,6,52,FALSE,24,122,0,FALSE,0,FALSE,4.166666667,0.31799728,0.18203667,"DataSource datasource = (DataSource) new InitialContext().lookup(dataSourceName);
Connection connection = datasource.getConnection();
</code></pre>",NN NN SYM -LRB- NN -RRB- JJ NN -LRB- -RRB- ADD -RRB- : NN NN SYM NN -LRB- -RRB- : NFP NN NN -RRB-,no
TRUE,-1,0,1085,153,4195,3,0,TRUE,FALSE,FALSE,61,[],0,4195,0,21518,81,TRUE,FALSE,TRUE,1,72,FALSE,22,0,78,FALSE,0,TRUE,4.545454545,0.52810264,0.34697747,"<p>Surely you can, <a href=""http://docs.oracle.com/javase/7/docs/api/java/sql/DriverManager.html"" rel=""nofollow"">read it here</a>.","-LRB- NN RB PRP MD , -LRB- DT NN SYM `` ADD '' VB `` NN '' -RRB- VB PRP RB .",no
TRUE,-1,0,1085,153,4195,3,0,TRUE,FALSE,FALSE,61,[],0,4195,0,21518,81,TRUE,FALSE,TRUE,1,72,FALSE,19,131,0,FALSE,0,FALSE,0,0.87638295,0.7004304,"Normally you do not need to implement it, use the class from the system library.</p>","RB PRP VBP RB VB TO VB PRP , VB DT NN IN DT NN NN -LRB- NN -RRB-",no
TRUE,-1,0,1085,153,4195,3,0,TRUE,FALSE,FALSE,61,[],0,4195,0,21518,81,TRUE,FALSE,TRUE,1,72,FALSE,20,217,0,FALSE,0,FALSE,5,0.74808025,0.6421497,"<p>If your are seriously interested in this class, look also into the <a href=""","NFP -RRB- IN PRP VBP RB JJ IN DT NN , VB RB IN DT -LRB- DT NN SYM ''",no
TRUE,-1,0,1085,153,4195,3,0,TRUE,FALSE,FALSE,61,[],0,4195,0,21518,81,TRUE,FALSE,TRUE,1,72,FALSE,11,296,86,TRUE,0,FALSE,9.090909091,0.38966882,0.24031207,"http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/6-b14/java/sql/DriverManager.java"" rel=""nofollow"">source code here</a>.</p>",ADD `` FW '' NN '' -RRB- NN NN RB .,no
TRUE,-1,0,1085,153,4195,3,0,TRUE,FALSE,FALSE,61,[],0,4195,0,5486,53,TRUE,FALSE,FALSE,2,53,FALSE,14,0,0,FALSE,0,FALSE,7.142857143,0.5886783,0.4828284,"<p>To know about Class you can view API <a href=""",NN TO VB IN NNP PRP MD VB NNP -LRB- DT NN SYM '',no
TRUE,-1,0,1085,153,4195,3,0,TRUE,FALSE,FALSE,61,[],0,4195,0,5486,53,TRUE,FALSE,FALSE,2,53,FALSE,7,49,50,TRUE,0,FALSE,0,0.28172994,0.16023012,"http://docs.oracle.com/javase/7/docs/api/java/sql/DriverManager.html"" rel=""nofollow"">",ADD `` UH `` FW '' -RRB-,no
TRUE,-1,0,1085,153,4195,3,0,TRUE,FALSE,FALSE,61,[],0,4195,0,5486,53,TRUE,FALSE,FALSE,2,53,FALSE,1,134,50,TRUE,0,FALSE,0,0.3021653,0.111000106,http://docs.oracle.com/javase/7/docs/api/java/sql/DriverManager.html</a></p>,ADD,no
TRUE,-1,0,1085,153,4195,3,0,TRUE,FALSE,FALSE,61,[],0,4195,0,5486,53,TRUE,FALSE,FALSE,2,53,FALSE,30,212,0,FALSE,0,TRUE,6.666666667,0.65696156,0.5440383,"<p>If you want to view source code , you can use Java decompiler (Ex : <a href=""http://java.decompiler.free.fr/?q=jdgui"" rel=""nofollow"">","NFP -RRB- IN PRP VBP TO VB NN NN , PRP MD VB NNP NN -LRB- NN : -LRB- SYM NN SYM `` ADD '' FW `` FW '' -RRB-",no
TRUE,-1,0,1085,153,4195,3,0,TRUE,FALSE,FALSE,61,[],0,4195,0,5486,53,TRUE,FALSE,FALSE,2,53,FALSE,1,348,0,TRUE,0,FALSE,0,0.3021653,0.111000106,http://java.decompiler.free.fr/?q=jdgui</a></p>,ADD,no
TRUE,-1,0,1085,153,4195,3,0,TRUE,FALSE,FALSE,61,[],0,4195,0,2107,0,TRUE,TRUE,FALSE,3,70,FALSE,10,0,0,FALSE,0,FALSE,0,0.43576425,0.34425232,<p>There are not much:</p>,-LRB- NN EX VBP RB JJ : -LRB- NN -RRB-,no
TRUE,-1,0,1085,153,4195,3,0,TRUE,FALSE,FALSE,61,[],0,4195,0,2107,0,TRUE,TRUE,FALSE,3,70,FALSE,44,28,69,FALSE,216,TRUE,0,0.3546104,0.23316151,"<pre><code>Class.forName(""com.mysql.jdbc.Driver"");
Connection conn = DriverManager.getConnection(""jdbc:mysql://localhost/dbtest"", ""user"", ""password"");
PreparedStatement pstmt = conn.prepareStatement(""SELECT * FROM tbltest"");
//","-LRB- NN -LRB- ADD `` FW NN '' -RRB- : NN NN SYM NN -LRB- `` FW , FW '' , `` NN '' , `` NN '' -RRB- : NN NN SYM NN -LRB- `` VB NFP IN NN '' -RRB- : NFP",no
TRUE,-1,0,1085,153,4195,3,0,TRUE,FALSE,FALSE,61,[],0,4195,0,2107,0,TRUE,TRUE,FALSE,3,70,FALSE,16,256,0,FALSE,0,FALSE,6.25,0.23580474,0.11352728,"Do things
// ...
pstmt.close();
conn.close();
</code></pre>","VBP NNS SYM , NNP -LRB- -RRB- : NN -LRB- -RRB- : NFP NN NN -RRB-",no
TRUE,2,0,3960,158,3900,2,50,TRUE,TRUE,FALSE,464,[],0,3900,0,1970,68,TRUE,TRUE,FALSE,1,129,FALSE,8,0,0,FALSE,0,FALSE,0,0.67511755,0.5713465,<p>You might instead use the javax.sql.,NN PRP MD RB VB DT NN .,no
TRUE,2,0,3960,158,3900,2,50,TRUE,TRUE,FALSE,464,[],0,3900,0,1970,68,TRUE,TRUE,FALSE,1,129,FALSE,7,39,28,FALSE,0,FALSE,0,0.54994243,0.44863635,DataSource instead of using DriverManager. </p>,NN RB IN VBG NNP . NN,no
TRUE,2,0,3960,158,3900,2,50,TRUE,TRUE,FALSE,464,[],0,3900,0,1970,68,TRUE,TRUE,FALSE,1,129,FALSE,14,88,0,FALSE,0,TRUE,7.142857143,0.3604272,0.15699804,"<p><a href=""http://docs.oracle.com/javase/6/docs/api/javax/sql/DataSource.html"" rel=""nofollow"">",-LRB- NN -LRB- NN NN SYM `` ADD '' FW `` FW '' -RRB-,no
TRUE,2,0,3960,158,3900,2,50,TRUE,TRUE,FALSE,464,[],0,3900,0,1970,68,TRUE,TRUE,FALSE,1,129,FALSE,15,259,0,FALSE,0,FALSE,0,0.76743746,0.6506134,"<p>This way, you are working with an interface you can Mock.","NFP -RRB- DT NN , PRP VBP VBG IN DT NN PRP MD VB .",no
TRUE,2,0,3960,158,3900,2,50,TRUE,TRUE,FALSE,464,[],0,3900,0,1970,68,TRUE,TRUE,FALSE,1,129,FALSE,18,320,87,FALSE,0,FALSE,0,0.87319773,0.7024123,Most applications these days use the DataSource interface and do not interact with the DriverManager like this.,JJS NNS DT NNS VBP DT NN NN CC VBP RB VB IN DT NNP IN DT .,yes
TRUE,2,0,3960,158,3900,2,50,TRUE,TRUE,FALSE,464,[],0,3900,0,1970,68,TRUE,TRUE,FALSE,1,129,FALSE,14,439,0,FALSE,0,FALSE,7.142857143,0.608484,0.4847028,<p>So your code could then have an api like:</p>,NN RB PRP$ NN MD RB VB DT NN IN : -LRB- NN -RRB-,no
TRUE,2,0,3960,158,3900,2,50,TRUE,TRUE,FALSE,464,[],0,3900,0,1970,68,TRUE,TRUE,FALSE,1,129,TRUE,27,489,0,FALSE,107,TRUE,7.407407407,0.47873953,0.3652439,"<pre><code>public class DataSourceFactory {
public DataSource getDataSource( String url, String usr, String pwd);
}
</code></pre>","-LRB- NN -RRB- -LRB- NN NN NN : JJ NN NN -LRB- NN NN , NN FW , NN NN -RRB- : NN , NN NN -RRB-",no
TRUE,2,0,3960,158,3900,2,50,TRUE,TRUE,FALSE,464,[],0,3900,0,1970,68,TRUE,TRUE,FALSE,1,129,FALSE,23,622,53,FALSE,0,FALSE,0,0.8263172,0.6814162,"<p>And you could implement the real DataSource using DriverManager if you wish, and then mock DataSourceFactory for your unit test.","NN CC PRP MD VB DT JJ NN VBG NNP IN PRP VBP , CC RB VB NNP IN PRP$ NN NN .",no
TRUE,2,0,3960,158,3900,2,50,TRUE,TRUE,FALSE,464,[],0,3900,0,3637,69,TRUE,TRUE,FALSE,2,214,FALSE,19,0,58,FALSE,27,TRUE,10.52631579,0.55474746,0.46543443,<p>A possible workaround in case you can't mock the <code>DriverManager.getConnection</code>,"-LRB- NN DT JJ NN IN NN PRP MD RB VB DT -LRB- NN -RRB- NNP -LRB- , NN -RRB-",no
TRUE,2,0,3960,158,3900,2,50,TRUE,TRUE,FALSE,464,[],0,3900,0,3637,69,TRUE,TRUE,FALSE,2,214,FALSE,9,93,0,TRUE,0,FALSE,0,0.57853204,0.51062244,static invocation is just skip it.</p>,"JJ NN VBZ RB VB PRP , NN -RRB-",no
TRUE,2,0,3960,158,3900,2,50,TRUE,TRUE,FALSE,464,[],0,3900,0,3637,69,TRUE,TRUE,FALSE,2,214,FALSE,23,133,0,FALSE,0,FALSE,4.347826087,0.84471774,0.71642435,<p>Extract the static invocation to a protected method in your sut with the same signature than the static method.</p>,-LRB- NN VB DT JJ NN IN DT VBN NN IN PRP$ NN IN DT JJ NN IN DT JJ NN . -RRB-,no
TRUE,2,0,3960,158,3900,2,50,TRUE,TRUE,FALSE,464,[],0,3900,0,3637,69,TRUE,TRUE,FALSE,2,214,TRUE,33,253,111,FALSE,152,TRUE,6.060606061,0.5733348,0.45062304,"<pre><code>protected Connection driverManagerGetConnection(String url, String user, String password){
return DriverManager.getConnection(url, user, password);
}
</code></pre>","-LRB- NN -RRB- -LRB- NN NN NN -LRB- NN NN , NN NN , NN NN -RRB- NFP NN NN -LRB- NN , NN , NN -RRB- : NN NFP NN NN -RRB-",no
TRUE,2,0,3960,158,3900,2,50,TRUE,TRUE,FALSE,464,[],0,3900,0,3637,69,TRUE,TRUE,FALSE,2,214,FALSE,14,431,0,FALSE,0,FALSE,7.142857143,0.6383972,0.55694664,"<p>Now, in your test, use <a href=""","-LRB- NN RB , IN PRP$ NN , VB -LRB- DT NN SYM ''",no
TRUE,2,0,3960,158,3900,2,50,TRUE,TRUE,FALSE,464,[],0,3900,0,3637,69,TRUE,TRUE,FALSE,2,214,FALSE,7,466,0,TRUE,0,FALSE,0,0.28172994,0.16023012,"http://easymock.org/api/easymock/3.0/org/easymock/IMockBuilder.html"" rel=""nofollow"">",ADD `` UH `` NN '' -RRB-,no
TRUE,2,0,3960,158,3900,2,50,TRUE,TRUE,FALSE,464,[],0,3900,0,3637,69,TRUE,TRUE,FALSE,2,214,FALSE,23,550,0,FALSE,26,TRUE,13.04347826,0.6570089,0.5630271,"EasyMock to create a partial mock</a> of your sut, mocking the <code>driverManagerGetConnection</code> method.</p>","NNP TO VB DT JJ NN SYM NN -RRB- IN PRP$ NN , VBG DT -LRB- NN -LRB- , NN -RRB- NN -RRB-",yes
TRUE,2,0,3960,158,3900,2,50,TRUE,TRUE,FALSE,464,[],0,3900,0,3637,69,TRUE,TRUE,FALSE,2,214,FALSE,21,701,0,FALSE,0,FALSE,0,0.16601461,0.019047093,"// setup: sut
YourSutClass sut = EasyMock.createMockBuilder(YourSutClass.class)
.addMockedMethod(""driverManagerGetConnection"").createMock();",SYM NN : NN NNP NN SYM ADD NNP -RRB- . NNP -LRB- `` NNP '' -RRB- NNP -LRB- -RRB- :,no
TRUE,2,0,3960,158,3900,2,50,TRUE,TRUE,FALSE,464,[],0,3900,0,3637,69,TRUE,TRUE,FALSE,2,214,FALSE,14,871,0,FALSE,0,FALSE,0,0.4129663,0.26032224,"// setup: expectations
EasyMock.expect(sut.driverManagerGetConnection()).andReturn(mockConnection);
...",SYM NN : NNS NNP NNP -LRB- -RRB- -RRB- -LRB- NNP -RRB- : .,no
TRUE,2,0,3960,158,3900,2,50,TRUE,TRUE,FALSE,464,[],0,3900,0,3637,69,TRUE,TRUE,FALSE,2,214,FALSE,12,982,0,FALSE,0,FALSE,0,0.24284486,0.13007832,"// exercise
EasyMock.replay(sut, mockConnection);
sut.whatever();","SYM NN NNP NN , NNP -RRB- : NN -LRB- -RRB- :",no
TRUE,2,0,3960,158,3900,2,50,TRUE,TRUE,FALSE,464,[],0,3900,0,3637,69,TRUE,TRUE,FALSE,2,214,FALSE,13,1055,0,FALSE,0,FALSE,7.692307692,0.3813041,0.26714385,"// verify
EasyMock.verify(sut, mockConnection);
}
</code></pre>","NFP VB NNP NN , NNP -RRB- : NN , FW NN -RRB-",no
TRUE,2,0,3960,158,3900,2,50,TRUE,TRUE,FALSE,464,[],0,3900,0,3637,69,TRUE,TRUE,FALSE,2,214,FALSE,20,1122,0,FALSE,0,FALSE,0,0.82397974,0.70410585,<p>With this approach the only line you leave untested is the invocation to the static method.</p>,-LRB- NN IN DT NN DT JJ NN PRP VBP JJ VBZ DT NN IN DT JJ NN . -RRB-,no
TRUE,2,0,1021,23,4412,2,0,TRUE,FALSE,FALSE,87,[],3,4412,0,687195,100,TRUE,FALSE,TRUE,1,79,FALSE,14,0,0,FALSE,0,FALSE,14.28571429,0.8107717,0.67766964,<p>It's perfectly possible to use a DataSource on a desktop application.,-LRB- NN PRP VBZ RB JJ TO VB DT NN IN DT NN NN .,no
TRUE,2,0,1021,23,4412,2,0,TRUE,FALSE,FALSE,87,[],3,4412,0,687195,100,TRUE,FALSE,TRUE,1,79,FALSE,22,79,0,FALSE,0,FALSE,0,0.85025865,0.72244436,"<p>Server apps are usually multi-thread, multi-user applications, where several connections to the database are open in parallel.","-LRB- NN NN NNS VBP RB JJ , NN NNS , WRB JJ NNS IN DT NN VBP JJ IN JJ .",yes
TRUE,2,0,1021,23,4412,2,0,TRUE,FALSE,FALSE,87,[],3,4412,0,687195,100,TRUE,FALSE,TRUE,1,79,FALSE,9,209,0,FALSE,0,FALSE,0,0.5796566,0.39351538,A pooled DataSource is critical here.</p>,DT VBN NN VBZ JJ RB -LRB- NN -RRB-,no
TRUE,2,0,1021,23,4412,2,0,TRUE,FALSE,FALSE,87,[],3,4412,0,687195,100,TRUE,FALSE,TRUE,1,79,FALSE,21,252,0,FALSE,0,FALSE,0,0.87418294,0.72770673,"<p>Desktop apps are usually single-user applications, where you just need one connection to the database.","-LRB- NN NN NNS VBP RB JJ HYPH NN NNS , WRB PRP RB VBP CD NN IN DT NN .",yes
TRUE,2,0,1021,23,4412,2,0,TRUE,FALSE,FALSE,87,[],3,4412,0,687195,100,TRUE,FALSE,TRUE,1,79,FALSE,12,358,0,FALSE,0,FALSE,8.333333333,0.7387364,0.59702045,So a pooled datasource isn't necessary in this case.</p>,RB DT VBN NN VBZ RB JJ IN DT NN -LRB- NN -RRB-,no
TRUE,2,0,1021,23,4412,2,0,TRUE,FALSE,FALSE,87,[],2,4412,0,4684,100,TRUE,TRUE,FALSE,2,90,FALSE,9,0,0,FALSE,0,FALSE,0,0.4569444,0.29706424,<p>I'll quote the javadoc:</p>,-LRB- NN PRP MD VB DT NN : NFP -RRB-,no
TRUE,2,0,1021,23,4412,2,0,TRUE,FALSE,FALSE,87,[],2,4412,0,4684,100,TRUE,TRUE,FALSE,2,90,FALSE,23,50,22,FALSE,0,FALSE,8.695652174,0.88509303,0.6835618,"An alternative to the DriverManager facility, a DataSource object is the preferred means of getting a connection.</p>
</blockquote>","DT NN IN DT NNP NN , DT NN NN VBZ DT VBN NN IN VBG DT NN -LRB- NN -LRB- SYM -RRB-",no
TRUE,2,0,1021,23,4412,2,0,TRUE,FALSE,FALSE,87,[],2,4412,0,4684,100,TRUE,TRUE,FALSE,2,90,FALSE,12,183,26,FALSE,13,TRUE,8.333333333,0.43557695,0.31735653,<p>Normally you use <code>DriverManager</code>,"-LRB- NN RB PRP VBP -LRB- NN NN -LRB- , NN -RRB-",no
TRUE,2,0,1021,23,4412,2,0,TRUE,FALSE,FALSE,87,[],2,4412,0,4684,100,TRUE,TRUE,FALSE,2,90,FALSE,19,230,0,TRUE,10,TRUE,15.78947368,0.7249031,0.62524986,when you just want a connection for one time while with <code>DataSource</code>,"WRB PRP RB VBP DT NN IN CD NN IN IN -LRB- NN -RRB- NN -LRB- , NN -RRB-",no
TRUE,2,0,1021,23,4412,2,0,TRUE,FALSE,FALSE,87,[],2,4412,0,4684,100,TRUE,TRUE,FALSE,2,90,FALSE,13,310,0,TRUE,0,FALSE,0,0.8177408,0.6602332,you get other features such as connection pooling and distributed transactions.</p>,PRP VBP JJ NNS JJ IN NN NN CC VBN NNS . NN,no
TRUE,2,0,1021,23,4412,2,0,TRUE,FALSE,FALSE,87,[],2,4412,0,4684,100,TRUE,TRUE,FALSE,2,90,FALSE,8,395,0,FALSE,0,FALSE,0,0.462914,0.23965345,<p>Hope this helps.</p>,-LRB- NN VBP DT VBZ -LRB- NN -RRB-,no
TRUE,0,0,1401,23504,4091,1,89,TRUE,TRUE,TRUE,217,[],5,4091,0,687195,100,TRUE,FALSE,TRUE,1,82,FALSE,8,0,0,FALSE,0,FALSE,12.5,0.6225768,0.5250849,<p>It's not a singleton.,-LRB- NN -RRB- PRP VBZ RB DT NN .,no
TRUE,0,0,1401,23504,4091,1,89,TRUE,TRUE,TRUE,217,[],5,4091,0,687195,100,TRUE,FALSE,TRUE,1,82,FALSE,11,25,0,FALSE,0,FALSE,9.090909091,0.8409294,0.64738315,"It's a pure utility class, with only static methods.","PRP VBZ DT JJ NN NN , IN RB JJ NNS .",no
TRUE,0,0,1401,23504,4091,1,89,TRUE,TRUE,TRUE,217,[],5,4091,0,687195,100,TRUE,FALSE,TRUE,1,82,FALSE,8,78,0,FALSE,0,FALSE,0,0.8251793,0.6225543,There is 0 instance of this class.,EX VBZ CD NN IN DT NN .,no
TRUE,0,0,1401,23504,4091,1,89,TRUE,TRUE,TRUE,217,[],5,4091,0,687195,100,TRUE,FALSE,TRUE,1,82,FALSE,26,113,0,FALSE,0,FALSE,0,0.91197777,0.75860155,"A singleton would have one instance of the class, and you would have access to this instance to call instance methods on it.</p>","DT NN MD VB CD NN IN DT NN , CC PRP MD VB NN IN DT NN TO VB NN NNS IN PRP . NN",no
TRUE,0,0,1401,23504,4091,1,89,TRUE,TRUE,TRUE,217,[],5,4091,0,687195,100,TRUE,FALSE,TRUE,1,82,FALSE,12,243,0,FALSE,0,FALSE,0,0.7170653,0.62482184,"<p>Java is documented, and it's open-source.","-LRB- NN NNP VBZ VBN , CC PRP VBZ JJ HYPH NN .",no
TRUE,0,0,1401,23504,4091,1,89,TRUE,TRUE,TRUE,217,[],5,4091,0,687195,100,TRUE,FALSE,TRUE,1,82,FALSE,17,288,0,FALSE,0,FALSE,0,0.85063434,0.6924127,You can look at the source of the class to understand how it works.</p>,"PRP MD VB IN DT NN IN DT NN TO VB WRB PRP VBZ , NN -RRB-",no
TRUE,2,0,754,401,3947,1,0,TRUE,TRUE,FALSE,393,[],2,3947,0,346315,60,TRUE,TRUE,TRUE,1,233,FALSE,40,0,0,FALSE,16,TRUE,7.5,0.6903769,0.5804444,"<p>Only <code>AWTEvent</code> objects are processed from the context of the Event Dispatching Thread, all other types of events are generally raised manually (generally using a <code>for-loop</code>","NN RB -LRB- NN NFP NN -RRB- NNS VBP VBN IN DT NN IN DT NN NN NN , DT JJ NNS IN NNS VBP RB VBN RB -LRB- RB VBG DT -LRB- NN HYPH NN -LRB- , NN -RRB-",yes
TRUE,2,0,754,401,3947,1,0,TRUE,TRUE,FALSE,393,[],2,3947,0,346315,60,TRUE,TRUE,TRUE,1,233,FALSE,9,199,0,TRUE,0,FALSE,11.11111111,0.74460423,0.6269349,and a list of registered listeners).</p>,"CC DT NN IN VBN NNS -RRB- , NN",no
TRUE,2,0,754,401,3947,1,0,TRUE,TRUE,FALSE,393,[],2,3947,0,346315,60,TRUE,TRUE,TRUE,1,233,FALSE,25,241,0,FALSE,0,FALSE,0,0.85162914,0.77159375,"<p>This means, in the context of your example, the property change event would actually be triggered outside of the EDT.","NFP -RRB- DT VBZ , IN DT NN IN PRP$ NN , DT NN NN NN MD RB VB VBN IN IN DT NNP .",no
TRUE,2,0,754,401,3947,1,0,TRUE,TRUE,FALSE,393,[],2,3947,0,346315,60,TRUE,TRUE,TRUE,1,233,FALSE,21,363,0,FALSE,0,FALSE,0,0.8848051,0.7309417,"Because most Swing components assume that they are being notified within the EDT, this is indeed dangerous.</p>","IN JJS NN NNS VBP IN PRP VBP VBG VBN IN DT NNP , DT VBZ RB JJ . NN -RRB-",no
TRUE,2,0,754,401,3947,1,0,TRUE,TRUE,FALSE,393,[],2,3947,0,346315,60,TRUE,TRUE,TRUE,1,233,FALSE,9,476,0,FALSE,0,TRUE,11.11111111,0.27316755,0.13444272,"<p>Now, you <em>could</em>","-LRB- NN RB , PRP -LRB- FW PRP -RRB-",no
TRUE,2,0,754,401,3947,1,0,TRUE,TRUE,FALSE,393,[],2,3947,0,346315,60,TRUE,TRUE,TRUE,1,233,FALSE,39,503,0,TRUE,22,TRUE,2.564102564,0.84096885,0.6693112,"modify any of your <code>PropertyChangeListener</code>s to check that they are being executed within the context of the EDT, but what you can't do is change how other registered listeners might work.</p>","VB DT IN PRP$ -LRB- NN -RRB- NN , NNS TO VB IN PRP VBP VBG VBN IN DT NN IN DT NNP , CC WP PRP MD RB VB VBZ VB WRB JJ VBN NNS MD VB . -RRB-",no
TRUE,2,0,754,401,3947,1,0,TRUE,TRUE,FALSE,393,[],2,3947,0,346315,60,TRUE,TRUE,TRUE,1,233,FALSE,37,708,0,FALSE,29,TRUE,8.108108108,0.58266634,0.47013828,"<p>If you need to do this (I would question the reason's why), you should wrap the <code>firePropertyChange</code> in an <code>invokeLater</code>","NFP -RRB- IN PRP VBP TO VB DT -LRB- PRP MD VB DT NN VBZ WRB -RRB- , PRP MD VB DT -LRB- NN -RRB- NN -LRB- , NN -RRB- IN DT -LRB- NN -LRB- , NN -RRB-",no
TRUE,2,0,754,401,3947,1,0,TRUE,TRUE,FALSE,393,[],2,3947,0,346315,60,TRUE,TRUE,TRUE,1,233,FALSE,11,854,0,TRUE,0,FALSE,0,0.672324,0.5474788,call to re-sync it back to the EDT.</p>,VB TO VB PRP RB IN DT NNP -LRB- NN -RRB-,no
TRUE,2,0,754,401,3947,1,0,TRUE,TRUE,FALSE,393,[],2,3947,0,346315,60,TRUE,TRUE,TRUE,1,233,FALSE,23,895,0,FALSE,18,TRUE,17.39130435,0.45567322,0.31764394,"<p>Equally, you could use a <code>SwingWorker</code> and <code>publish</code>","-LRB- NN RB , PRP MD VB DT -LRB- NN -RRB- NN -LRB- , NN -RRB- CC -LRB- NN -LRB- , NN -RRB-",no
TRUE,2,0,754,401,3947,1,0,TRUE,TRUE,FALSE,393,[],2,3947,0,346315,60,TRUE,TRUE,TRUE,1,233,FALSE,13,973,0,TRUE,9,TRUE,7.692307692,0.6412065,0.49262324,the changes so that they are <code>processed</code>,"DT NNS IN IN PRP VBP -LRB- NN VBN -LRB- , NN -RRB-",no
TRUE,2,0,754,401,3947,1,0,TRUE,TRUE,FALSE,393,[],2,3947,0,346315,60,TRUE,TRUE,TRUE,1,233,FALSE,6,1025,0,TRUE,0,FALSE,0,0.56029975,0.44678128,within the EDT for you...</p>,IN DT NNP IN PRP .,no
TRUE,0,0,64,1842,1704,1,10,TRUE,TRUE,TRUE,1341,[],0,1704,0,323286,100,TRUE,TRUE,TRUE,1,243,FALSE,20,18,64,TRUE,0,FALSE,5,0.7236129,0.56959283,"but it'd still be good to know if there is a way of suppressing PropertyChangeEvents...</p>
</blockquote>","CC PRP MD RB VB JJ TO VB IN EX VBZ DT NN IN VBG NNS , NN SYM SYM -RRB-",no
TRUE,0,0,64,1842,1704,1,10,TRUE,TRUE,TRUE,1341,[],0,1704,0,323286,100,TRUE,TRUE,TRUE,1,243,TRUE,53,125,0,FALSE,240,TRUE,5.660377358,0.45163167,0.15407829,"<pre><code>public void componentResized(ComponentEvent e) {
removePropertyChangeListener( this );
updateDividerLocation();
addPropertyChangeListener( this );
System.err.println(String.format("" CE: Left: %d Right: %d"", left, right));
}
</code></pre>","-LRB- NN -RRB- -LRB- NN NN NN NN -LRB- NNP FW : FW -LRB- DT -RRB- : NNP -LRB- -RRB- : NNP -LRB- DT -RRB- : NNP -LRB- NNP -LRB- `` NN : NN : NN JJ : NN NN '' , JJ , JJ -RRB- -RRB- : NN , NN NN -RRB-",no
TRUE,0,0,64,1842,1704,1,10,TRUE,TRUE,TRUE,1341,[],0,1704,0,323286,100,TRUE,TRUE,TRUE,1,243,FALSE,3,391,0,FALSE,0,FALSE,0,0.22608797,0.074227996,<p>Edit:</p>,NN NN NN,no
TRUE,0,0,64,1842,1704,1,10,TRUE,TRUE,TRUE,1341,[],0,1704,0,323286,100,TRUE,TRUE,TRUE,1,243,FALSE,24,405,66,FALSE,0,FALSE,0,0.78472537,0.6435668,<p>Maybe you can look at the event on the EDT that is causing the PropertyChangeEvent to be generated?</p>,-LRB- NN RB PRP MD VB IN DT NN IN DT NNP WDT VBZ VBG DT NN TO VB VBN . -LRB- NN -RRB-,no
TRUE,0,0,64,1842,1704,1,10,TRUE,TRUE,TRUE,1341,[],0,1704,0,323286,100,TRUE,TRUE,TRUE,1,243,FALSE,13,513,42,FALSE,59,TRUE,15.38461538,0.40622398,0.17843886,"<pre><code> public void propertyChange(PropertyChangeEvent e)
{",-LRB- NN -RRB- -LRB- NN -RRB- JJ NN NN -LRB- NNP NN -RRB-,no
TRUE,0,0,64,1842,1704,1,10,TRUE,TRUE,TRUE,1341,[],0,1704,0,323286,100,TRUE,TRUE,TRUE,1,243,FALSE,21,593,0,TRUE,0,FALSE,0,0.45098358,0.106139846,"if (e.getPropertyName().equals(""dividerLocation""))
{
AWTEvent event = EventQueue.getCurrentEvent();",IN -LRB- NN -LRB- -RRB- . VBZ -LRB- `` NNP '' -RRB- -RRB- -LRB- NNP NN SYM NNP -LRB- -RRB- :,no
TRUE,0,0,64,1842,1704,1,10,TRUE,TRUE,TRUE,1341,[],0,1704,0,323286,100,TRUE,TRUE,TRUE,1,243,FALSE,10,850,0,TRUE,0,FALSE,0,0.379988,0.031759467,int pos = (Integer)e.getNewValue();,NN NN SYM -LRB- NN -RRB- NNP -LRB- -RRB- :,no
TRUE,0,0,64,1842,1704,1,10,TRUE,TRUE,TRUE,1341,[],0,1704,0,323286,100,TRUE,TRUE,TRUE,1,243,FALSE,27,899,0,TRUE,0,FALSE,0,0.4934284,0.18401422,"if (right == -1) {
left = pos;
} else {
Dimension d = getSize();
if (orient == JSplitPane.","IN -LRB- JJ SYM HYPH CD -RRB- , VBN SYM NN : UH RB : NN NN SYM NNP -RRB- : IN -LRB- NN SYM NNP .",no
TRUE,0,0,64,1842,1704,1,10,TRUE,TRUE,TRUE,1341,[],0,1704,0,323286,100,TRUE,TRUE,TRUE,1,243,FALSE,20,1049,0,FALSE,0,FALSE,0,0.4366563,0.20519789,"VERTICAL_SPLIT) {
right = d.height - pos;
} else {
right = d.width - pos;
}
}",NNP -RRB- : JJ SYM NN HYPH NN : UH RB HYPH JJ SYM NN HYPH NN : SYM -RRB-,no
TRUE,0,0,64,1842,1704,1,10,TRUE,TRUE,TRUE,1341,[],0,1704,0,323286,100,TRUE,TRUE,TRUE,1,243,FALSE,26,1224,0,FALSE,0,FALSE,3.846153846,0.36213627,0.14748992,"System.err.println(String.format(""PCE: Left: %d Right: %d"", left, right));
}
}
</code></pre>","NNP -LRB- NN NN : NN : NN JJ : NN NN '' , JJ , JJ -RRB- -RRB- : NN . , NN NN -RRB-",no
TRUE,-1,0,466,294,2888,1,0,TRUE,TRUE,FALSE,213,[],0,2882,6,294,0,TRUE,TRUE,TRUE,1,211,FALSE,49,0,0,FALSE,0,FALSE,4.081632653,0.8611685,0.72723603,"<p>I found the solution, what I had to do is, create a StringFieldEditor and then use it in a listener for get the new value, process this value using my own algorithm for encrypt, then set this value encrypted to StringFieldEditor.</p>","NN PRP VBD DT NN , WP PRP VBD TO VB VBZ , VB DT NNP CC RB VB PRP IN DT NN IN VB DT JJ NN , VB DT NN VBG PRP$ JJ NN IN NN , RB VB DT NN VBN IN NNP , NN -RRB-",no
TRUE,-1,0,466,294,2888,1,0,TRUE,TRUE,FALSE,213,[],0,2882,6,294,0,TRUE,TRUE,TRUE,1,211,FALSE,3,350,0,FALSE,0,FALSE,0,0.41842675,0.2318425,StringFieldEditor secretSFE;,NNP NNP :,no
TRUE,-1,0,466,294,2888,1,0,TRUE,TRUE,FALSE,213,[],0,2882,6,294,0,TRUE,TRUE,TRUE,1,211,FALSE,22,556,0,TRUE,0,FALSE,0,0.37744305,0.12913732,"secretSFE = new StringFieldEditor(""secret"", ""&amp;Secret:\t\t"",getFieldEditorParent()){","NN SYM JJ NNP -LRB- `` NN '' , `` NN : NN : NN '' , NNP -LRB- -RRB- -RRB- .",no
TRUE,-1,0,466,294,2888,1,0,TRUE,TRUE,FALSE,213,[],0,2882,6,294,0,TRUE,TRUE,TRUE,1,211,FALSE,20,653,0,FALSE,0,FALSE,0,0.63912547,0.37120223,"@Override
protected void doFillIntoGrid(Composite parent, int numColumns) {
super.doFillIntoGrid(parent, numColumns);","NFP VB VBN NN NNP NNP -LRB- JJ NN , NN NNP -RRB- -LRB- NNP NN , NNP -RRB- :",no
TRUE,-1,0,466,294,2888,1,0,TRUE,TRUE,FALSE,213,[],0,2882,6,294,0,TRUE,TRUE,TRUE,1,211,FALSE,7,804,0,TRUE,0,FALSE,0,0.32369545,0.08368469,"getTextControl().setEchoChar('*');
}",NNP -LRB- -RRB- NNP -RRB- : NFP,no
TRUE,-1,0,466,294,2888,1,0,TRUE,TRUE,FALSE,213,[],0,2882,6,294,0,TRUE,TRUE,TRUE,1,211,FALSE,13,887,0,FALSE,0,FALSE,0,0.30663198,-0.04184049,Activator.getDefault().getPreferenceStore().addPropertyChangeListener(new IPropertyChangeListener() {,NNP -LRB- -RRB- NNP -LRB- -RRB- NNP -LRB- JJ NNP -LRB- -RRB- -RRB-,no
TRUE,-1,0,466,294,2888,1,0,TRUE,TRUE,FALSE,213,[],0,2882,6,294,0,TRUE,TRUE,TRUE,1,211,FALSE,53,998,45,FALSE,0,FALSE,1.886792453,0.41894484,0.0900541,"@Override
public void propertyChange(PropertyChangeEvent event) {
if(""secret"".equalsIgnoreCase(event.getProperty())){
String valueToEncrypt = (String)event.getNewValue();
valueToEncrypt = ConnectionValues.convert(valueToEncrypt);
secretFFE.setStringValue(valueToEncrypt);
}
}
}); }
}
</code></pre>","NFP VB JJ NN NN -LRB- NN NN -RRB- , IN -LRB- `` NN '' -LRB- NNP -LRB- -RRB- -RRB- -RRB- -LRB- NN NN SYM -LRB- NN -RRB- NNP -LRB- -RRB- : NN SYM NNP NNP -RRB- : NNP FW -RRB- : NFP HYPH LS -RRB- : NN . NFP NN NN -RRB-",no
TRUE,1,0,229,5295,3550,1,74,TRUE,TRUE,TRUE,138,[],2,3550,0,2796,70,TRUE,TRUE,FALSE,1,68,FALSE,14,0,0,FALSE,0,FALSE,0,0.7412532,0.6590158,"<p>In the second instance, you provide the same value twice.","LS -RRB- IN DT JJ NN , PRP VBP DT JJ NN RB .",no
TRUE,1,0,229,5295,3550,1,74,TRUE,TRUE,TRUE,138,[],2,3550,0,2796,70,TRUE,TRUE,FALSE,1,68,FALSE,12,61,0,FALSE,0,FALSE,0,0.6569508,0.4550667,I'm guessing firePropertyChange does nothing if the value didn't actually change.,PRP VBP VBG NNP VBZ NN IN DT NN VBD RB RB VB .,no
TRUE,1,0,229,5295,3550,1,74,TRUE,TRUE,TRUE,138,[],2,3550,0,2796,70,TRUE,TRUE,FALSE,1,68,FALSE,4,143,0,FALSE,0,FALSE,0,0.11634744,-0.02152755,Try this:</p>,VB DT NN -RRB-,no
TRUE,1,0,229,5295,3550,1,74,TRUE,TRUE,TRUE,138,[],2,3550,0,2796,70,TRUE,TRUE,FALSE,1,68,TRUE,38,158,0,FALSE,172,TRUE,5.263157895,0.47516385,0.23075546,"<pre><code>public void setWeekDate(Date weekDate) {
Date oldValue = this.weekDate;
this.weekDate = weekDate; firePropertyChange(""weekDate"", oldValue, this.weekDate);
}
</code></pre>","-LRB- NN -RRB- -LRB- NN NN ADD NN NN -RRB- : NN NN SYM DT NN : DT NN SYM NN : NN -LRB- `` NNP '' , NNP , NNP -RRB- : NN HYPH FW NN -RRB-",no
TRUE,1,0,2408,412,2671,2,100,TRUE,TRUE,TRUE,102,[],5,2662,8,33876,0,TRUE,FALSE,TRUE,1,338,FALSE,17,0,0,FALSE,0,FALSE,0,0.58893675,0.58893675,<p>The Java security model is based on classes having specific permissions.</p>,-LRB- NN -RRB- DT NNP NN NN VBZ VBN IN NNS VBG JJ NNS -LRB- NN -RRB-,yes