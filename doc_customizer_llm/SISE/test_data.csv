sent_pos,sentence,sent_avg_cosine,sent_max_cosine,sent_total_tokens,sent_start_islower,question_views,question_answer_count,question_size,answer_contains_code,answer_age,answer_size,answer_score,isMeaningful
-LRB- NN VBN IN -LRB- DT NN SYM `` ADD    NN NN    -LRB- NN NFP NN -RRB- NN NFP NN -RRB-,<p>Based on <a href= http://docs.oracle.com/javase/8/docs/api/java/util/stream/Collectors.html#toMap-java.util.function.Function-java.util.function.Function-  rel= noreferrer ><code>Collectors</code> documentation</a>,0.214656800031662,0.38993898034095764,23,False,773068,23,226,True,3865,60,1522,?
PRP VBZ RB JJ IN NFP NN -RRB-,it s as simple as:</p>,0.5631144046783447,0.7017547488212585,7,True,773068,23,226,True,3865,60,1522,?
-LRB- NN NN -RRB-,<pre><code>,0.08482181280851364,0.27207159996032715,4,False,773068,23,226,True,3865,60,1522,?
"NNP : NNP , NNP : NN SYM NNP -RRB- NNP NNP -LRB- NNP NNP , NNP -LRB- -RRB- -RRB- -RRB- : -LRB- NNP FW -RRB-",Map&lt;String  Choice&gt; result =     choices.stream().collect(Collectors.toMap(Choice::getName                                                Function.identity())); </code></pre>,0.16975657641887665,0.41879239678382874,26,False,773068,23,226,True,3865,60,1522,?
"NFP -RRB- IN PRP$ NN VBZ -LRB- JJ -RRB- RB SYM JJ -RRB- VBN TO VB JJ IN DT NNS IN DT NN , PRP MD VB PRP IN DT -LRB- NN -RRB-",<p>If your key is <strong>NOT</strong> guaranteed to be unique for all elements in the list  you should convert it to a <code>,0.653061032295227,0.7884687781333923,33,False,773068,23,226,True,3603,85,368,?
"NNP : NNP , NNP : NNP : NNP SYM NN -RRB- RB IN DT -LRB- NN -RRB-",Map&lt;String  List&lt;Choice&gt;&gt;</code> instead of a <code>,0.5105686187744141,0.6037560105323792,18,False,773068,23,226,True,3603,85,368,?
"NNP : NNP , NNP ADD",Map&lt;String  Choice&gt;</code></p>,0.2921023368835449,0.4440987706184387,6,False,773068,23,226,True,3603,85,368,?
"-LRB- NN NN -RRB- NNP : NNP , NNP : NNP : NNP : NN SYM NNP -RRB- FW NNP FW -RRB- -RRB- : -LRB- ADD FW -RRB-",<pre><code>Map&lt;String  List&lt;Choice&gt;&gt; result =  choices.stream().collect(Collectors.groupingBy(Choice::getName)); </code></pre>,0.18751949071884155,0.39721131324768066,28,False,773068,23,226,True,3603,85,368,?
"-LRB- NN NN -LRB- NN -LRB- -RRB- NFP NN -RRB- IN DT NN CC -LRB- NN -RRB- NN -LRB- , NN -RRB-",<p>Use <code>getName()</code> as the key and <code>Choice</code>,0.3032887578010559,0.4350953996181488,22,False,773068,23,226,True,3414,63,182,?
PRP IN DT NN IN DT NN NN -RRB-,itself as the value of the map:</p>,0.7321028709411621,0.857823371887207,9,True,773068,23,226,True,3414,63,182,?
-LRB- NN NN -RRB-,<pre><code>,0.08482181280851364,0.27207159996032715,4,False,773068,23,226,True,3414,63,182,?
"NNP : NNP , NNP : NN SYM NNP -RRB- FW NNP -LRB- NNP NNP , NNP HYPH NNP : NNP -RRB- -RRB- : -LRB- NNP NN -RRB-",Map&lt;String  Choice&gt; result =     choices.stream().collect(Collectors.toMap(Choice::getName  c -&gt; c)); </code></pre>,0.27175474166870117,0.495922327041626,28,False,773068,23,226,True,3414,63,182,?
-LRB- NN JJS IN DT NNS VBN VBP DT NN WRB DT -LRB- JJ -RRB- NN VBZ NN NNS SYM JJ -RRB-,<p>Most of the answers listed miss a case when the <strong>list has duplicate items</strong>.,0.6050336956977844,0.6826592087745667,22,False,773068,23,226,True,2148,109,37,?
"IN DT NN , PRP$ NN MD VB -LRB- NN -RRB- NNP -LRB- , NN -RRB-",In that case  their answer will throw <code>IllegalStateException</code>.,0.5931970477104187,0.6601038575172424,16,False,773068,23,226,True,2148,109,37,?
"VB IN DT JJ NN -LRB- JJ -RRB- TO VB NN NNS , JJ -RRB-",Refer to the below code <strong>to handle list duplicates</strong>,0.5743739604949951,0.6755738258361816,15,False,773068,23,226,True,2148,109,37,?
"RB RB NNP -RRB- -LRB- NNP NNP NNP : NNP , NNP : FW FW : NNP : NNS -RRB- -LRB- NN NN -LRB- -RRB- NN -LRB- NN -LRB- NN SYM NN , NN HYPH NN : NN , -LRB- FW , NN -RRB- , NN : NN -RRB- -RRB- : NN , NN NN -RRB-",as well:</p> <pre><code>public Map&lt;String  Choice&gt; convertListToMap(List&lt;Choice&gt; choices) {     return choices.stream()         .collect(Collectors.toMap(Choice::getName  choice -&gt; choice              (oldValue  newValue) -&gt; newValue));   } </code></pre>,0.2654498815536499,0.4839118719100952,56,True,773068,23,226,True,2148,109,37,?
-LRB- NN RB VBZ DT NN IN NN PRP VBP RB VB TO VB NNP NN -LRB- -RRB- . -RRB-,<p>Here s another one in case you don t want to use Collectors.toMap()</p>,0.5602056980133057,0.705318808555603,18,False,773068,23,226,True,2997,79,32,?
-LRB- NN -RRB- -LRB- NN -RRB-,<pre><code>,0.08482181280851364,0.27207159996032715,6,False,773068,23,226,True,2997,79,32,?
"NNP : NNP , NNP : NN SYM NN -LRB- -RRB- NN -LRB- NNP : NNP , NNP : : : JJ , -LRB- NN , NN -RRB- HYPH NN : NN -LRB- NNP -LRB- -RRB- , NN -RRB- , -LRB- NN , CD -RRB- HYPH NN : NN -RRB- : -LRB- NN NN -RRB-",Map&lt;String  Choice&gt; result =    choices.stream().collect(HashMap&lt;String  Choice&gt;::new                              (m  c) -&gt; m.put(c.getName()  c)                             (m  u) -&gt; {}); </code></pre>,0.20421244204044342,0.4504966735839844,55,False,773068,23,226,True,2997,79,32,?
-LRB- NN -RRB- -LRB- NN -RRB-,<blockquote>   <p>,0.1484217792749405,0.36544257402420044,6,False,773068,23,226,True,2645,55,25,?
CD JJR NN IN JJ NN .,One more option in simple way</p>,0.5936751961708069,0.6966165900230408,7,False,773068,23,226,True,2645,55,25,?
-LRB- NN -RRB-,</blockquote>,0.10340219736099243,0.2741348147392273,3,False,773068,23,226,True,2645,55,25,?
"-LRB- NN -RRB- -LRB- NN -RRB- NNP : NNP , NNP : NN SYM JJ NNP : NNP : -LRB- -RRB- : NNP NNP : FW -LRB- NNP -LRB- -RRB- , NNP -RRB- -RRB- : -LRB- NNP FW -RRB-",<pre><code>Map&lt;String Choice&gt; map = new HashMap&lt;&gt;(); choices.forEach(e-&gt;map.put(e.getName() e)); </code></pre>,0.18399405479431152,0.41421404480934143,39,False,773068,23,226,True,2645,55,25,?
"NN IN NN , IN PRP VBP VB NN NNS IN NN -RRB-",<p>For example  if you want convert object fields to map:</p>,0.5272442102432251,0.6766459941864014,13,False,773068,23,226,True,2448,154,23,?
-LRB- NN NN NN : -LRB- NN -RRB-,<p>Example object:</p>,0.133793905377388,0.35418349504470825,8,False,773068,23,226,True,2448,154,23,?
-LRB- NN -RRB- -LRB- NN NN JJ NN NN : JJ NN NN :,<pre><code>class Item{         private String code;         private String name;,0.4312228262424469,0.5657579898834229,14,False,773068,23,226,True,2448,154,23,?
"JJ NN -LRB- NN NN , NN NN -RRB- NFP DT NN SYM NN : DT NN SYM NN : NFP",public Item(String code  String name) {             this.code = code;             this.name = name;         },0.34133052825927734,0.5355437397956848,21,True,773068,23,226,True,2448,154,23,?
", NNS CC NNS : NFP NN NN -RRB-",//getters and setters     } </code></pre>,0.31745460629463196,0.4662761986255646,9,False,773068,23,226,True,2448,154,23,?
-LRB- NN CC NN VB NN IN NNP . -RRB-,<p>And operation convert List To Map:</p>,0.24845857918262482,0.3894016742706299,10,False,773068,23,226,True,2448,154,23,?
"-LRB- NN -RRB- -LRB- NN -RRB- : : NNP : NN SYM JJ NN : NN : -LRB- -RRB- : NN -LRB- JJ NN -LRB- `` FW    , `` NN    -RRB- -RRB- : NN -LRB- JJ NN -LRB- `` FW    , `` NN    -RRB- -RRB- :",<pre><code>List&lt;Item&gt; list = new ArrayList&lt;&gt;(); list.add(new Item( code1    name1 )); list.add(new Item( code2    name2 ));,0.1947706937789917,0.39753997325897217,50,False,773068,23,226,True,2448,154,23,?
"NNP : NNP , NNP : NN SYM NN -LRB- -RRB- NN -LRB- NN -LRB- NN NN , NN : : NN -RRB- -RRB- : NFP NN NN -RRB-",Map&lt;String String&gt; map = list.stream()      .collect(Collectors.toMap(Item::getCode  Item::getName)); </code></pre>,0.16434215009212494,0.4130557179450989,29,False,773068,23,226,True,2448,154,23,?
"NFP -RRB- IN PRP VBP RB VB VBG JJ NN NNS , NNP POS -LRB- DT NN SYM `` ADD   ",<p>If you don t mind using 3rd party libraries  AOL s <a href= https://github.com/aol/cyclops-react >cyclops-react</a>,0.4225969612598419,0.5535967350006104,19,False,773068,23,226,True,3052,101,13,?
NN -LRB- NN PRP VBP DT NN -RRB- VBZ NNS IN DT -LRB- DT NN SYM   ,lib (disclosure I am a contributor) has extensions for all <a href= ,0.5460436344146729,0.6765632629394531,17,True,773068,23,226,True,3052,101,13,?
"NNP    -RRB- NNP NNP , NN NNS , VBG -LRB- DT NN SYM `` ADD    -RRB- NNP CC -LRB- DT NN SYM `` ADD    ADD",https://medium.com/@johnmcclean/extending-jdk-8-collections-8ae8d43dd75e#.j5lxtrqze >JDK Collection</a> types  including <a href= http://static.javadoc.io/com.aol.simplereact/cyclops-react/1.0.0-RC1/com/aol/cyclops/data/collections/extensions/standard/ListX.html >List</a> and <a href= http://static.javadoc.io/com.aol.simplereact/cyclops-react/1.0.0-RC1/com/aol/cyclops/data/collections/extensions/standard/MapX.html >Map</a>.</p>,0.17256544530391693,0.34810948371887207,28,True,773068,23,226,True,3052,101,13,?
-LRB- NN -RRB- -LRB- NN -RRB-,<pre><code>,0.08482181280851364,0.27207159996032715,6,False,773068,23,226,True,3052,101,13,?
"NNP : NNP : NNS : NNP : NNP , NNP : NN SYM NNP NNP NNP : NNP -RRB- , FW NN : NN -RRB- : -LRB- NNP NN -RRB-",ListX&lt;Choices&gt; choices; Map&lt;String  Choice&gt; map = choices.toMap(c-&gt; c.getName() c-&gt;c); </code></pre>,0.2931438088417053,0.476725310087204,31,False,773068,23,226,True,3052,101,13,?
NFP -RRB- PRP MD VB DT NN IN DT NNS VBG DT NN CC RB VB PRP IN DT NN NN -RRB-,<p>You can create a Stream of the indices using an IntStream and then convert them to a Map :</p>,0.6427875757217407,0.7182997465133667,22,False,773068,23,226,True,2582,69,12,?
"-LRB- NN -RRB- -LRB- NN -RRB- NNP : NN , NNP : NN SYM ADD NN -LRB- -RRB- -RRB- . VBN -LRB- -RRB- NN -LRB- NN -LRB- NN HYPH NN : FW , NN HYPH NN : ADD LS -RRB- -RRB- -RRB- : NFP NN NN -RRB-",<pre><code>Map&lt;Integer Item&gt; map =  IntStream.range(0 items.size())          .boxed()          .collect(Collectors.toMap (i -&gt; i  i -&gt; items.get(i))); </code></pre>,0.0933542251586914,0.37028953433036804,47,False,773068,23,226,True,2582,69,12,?
"NN PRP VBD VBG TO VB DT CC VBD IN , VBG DT NNS RB , WRB VBG -LRB- NN -RRB- NNS . NN -LRB- -RRB- -LRB- NN -RRB- IN DT NN IN DT NN , RB PRP VBD NNS IN VBG DT JJ NN IN -LRB- ADD NN -RRB- TO RB VB IN IN NN NNS . NN",<p>I was trying to do this and found that  using the answers above  when using <code>Functions.identity()</code> for the key to the Map  then I had issues with using a local method like <code>this::localMethodName</code> to actually work because of typing issues.</p>,0.7208351492881775,0.7969918251037598,59,False,773068,23,226,True,3100,230,11,?
-LRB- NN -LRB- NN NN -LRB- -RRB- NFP NN -RRB-,<p><code>Functions.identity()</code>,0.0651240274310112,0.24642795324325562,10,False,773068,23,226,True,3100,230,11,?
"RB VBZ NN IN DT NN IN DT NN IN DT NN MD RB VB IN VBG -LRB- NN -RRB- NN -LRB- , NN -RRB- CC VBG DT NN IN -LRB- NN NFP NN -RRB-",actually does something to the typing in this case so the method would only work by returning <code>Object</code> and accepting a param of <code>Object</code></p>,0.7296255826950073,0.7945177555084229,35,True,773068,23,226,True,3100,230,11,?
"NN TO VB DT , PRP VBD RP VBG -LRB- NN NNS NN -LRB- -RRB- , NN -RRB- CC VBG -LRB- NN NN -RRB- RB NFP",<p>To solve this  I ended up ditching <code>Functions.identity()</code> and using <code>s-&gt;s</code> instead.</p>,0.3017593324184418,0.4333144426345825,26,False,773068,23,226,True,3100,230,11,?
"NN RB PRP$ NN , IN PRP$ NN TO VB DT NNS IN DT NN , CC IN DT NN VB DT NN IN DT NN IN DT NN IN DT NN CC RB VB DT NN IN DT NN NN CC VB DT NN IN NNS , VBZ IN : -LRB- NN -RRB-",<p>So my code  in my case to list all directories inside a directory  and for each one use the name of the directory as the key to the map and then call a method with the directory name and return a collection of items  looks like:</p>,0.8361473083496094,0.9196548461914062,54,False,773068,23,226,True,3100,230,11,?
-LRB- NN NN -RRB-,<pre><code>,0.08482181280851364,0.27207159996032715,4,False,773068,23,226,True,3100,230,11,?
"NNP : NNP , NNP : NNP : NN : NNS SYM NN NN -LRB- NN : NN -RRB- -RRB- NN -LRB- NN : : NN -RRB- ADD -LRB- NN NN FW , DT NN -RRB- -RRB- : NFP NN NN -RRB-",Map&lt;String  Collection&lt;ItemType&gt;&gt; items = Arrays.stream(itemFilesDir.listFiles(File::isDirectory)) .map(File::getName) .collect(Collectors.toMap(s-&gt;s  this::retrieveBrandItems)); </code></pre>,0.13918086886405945,0.4029277563095093,42,False,773068,23,226,True,3100,230,11,?
-LRB- LS -RRB- DT NNS -LRB- NN -RRB- -LRB- NN -RRB-,<h1>All Versions</h1> <p>,0.11104080826044083,0.3190615177154541,11,False,1972666,22,112,True,4729,669,2157,?
IN NN PRP VBP TO VB RB DT JJ NN :,In case you happen to need just a single entry:,0.6594946980476379,0.7555278539657593,11,False,1972666,22,112,True,4729,669,2157,?
EX VBZ -LRB- NN -RRB- NNS .,There is <code>Collections.,0.5018739700317383,0.5829921960830688,7,False,1972666,22,112,True,4729,669,2157,?
"NNP NN : NN : , NN : NN : -RRB- , NN -RRB- -RRB- -LRB- LS -RRB- IN NNP NN CD CC JJR NN -RRB- -LRB- NN -RRB-",singletonMap(&quot;key&quot;  &quot;value&quot;)</code>.</p> <h1>For Java Version 9 or higher:</h1> <p>,0.1889474242925644,0.3728123605251312,29,True,1972666,22,112,True,4729,669,2157,?
"UH , DT VBZ JJ RB .",Yes  this is possible now.,0.6972807049751282,0.8324981331825256,7,False,1972666,22,112,True,4729,669,2157,?
"IN NNP CD DT NN IN NN NNS VBP VBN VBN WDT VBP DT NN IN NNS SYM -LRB- NN -RRB- -LRB- NN , DT VBZ IN RB IN CD NNS : NNP : NNP , NNP : NN SYM NN -LRB- NN : NN : , NN : NN : , NN : NN : , NN : NN : -RRB- :",In Java 9 a couple of factory methods have been added that simplify the creation of maps :</p> <pre><code>// this works for up to 10 elements: Map&lt;String  String&gt; test1 = Map.of(     &quot;a&quot;  &quot;b&quot;      &quot;c&quot;  &quot;d&quot; );,0.4841393232345581,0.620875358581543,63,False,1972666,22,112,True,4729,669,2157,?
NFP DT VBZ IN DT NN IN NNS : VB JJ NN .,// this works for any number of elements: import static java.util.,0.763144850730896,0.8638269901275635,13,False,1972666,22,112,True,4729,669,2157,?
"NNP : NNP : NNP , NNP : NN SYM NN -LRB- NN -LRB- NN : NN : , NN : NN : -RRB- , NN -LRB- NN : NN : , NN : NN : -RRB- -RRB- : ADD NN -RRB- -LRB- NN -RRB-",Map.entry;     Map&lt;String  String&gt; test2 = Map.ofEntries(     entry(&quot;a&quot;  &quot;b&quot;)      entry(&quot;c&quot;  &quot;d&quot;) ); </code></pre> <p>,0.19531290233135223,0.4059041738510132,45,False,1972666,22,112,True,4729,669,2157,?
"IN DT NN IN DT -LRB- NN NN -RRB- CC -LRB- NN NN -RRB- MD VB DT JJ , RB IN JJ NNS IN VBG DT NN .",In the example above both <code>test</code> and <code>test2</code> will be the same  just with different ways of expressing the Map.,0.6927902698516846,0.7799628376960754,28,False,1972666,22,112,True,4729,669,2157,?
DT -LRB- NN NNP SYM NN -RRB-,The <code>Map.of</code>,0.2087990939617157,0.33748942613601685,7,False,1972666,22,112,True,4729,669,2157,?
"NN VBZ VBN IN IN IN CD NNS IN DT NN , IN DT -LRB- NN -RRB- NNP -LRB- , NN -RRB-",method is defined for up to ten elements in the map  while the <code>Map.ofEntries</code>,0.750518798828125,0.8351147174835205,22,True,1972666,22,112,True,4729,669,2157,?
NN MD VB DT JJ NN . -LRB- NN -RRB-,method will have no such limit.</p> <p>,0.40600472688674927,0.5398802161216736,10,True,1972666,22,112,True,4729,669,2157,?
VB IN IN DT NN DT VBG NN MD VB DT JJ NN .,Note that in this case the resulting map will be an immutable map.,0.7978969216346741,0.9001134634017944,14,False,1972666,22,112,True,4729,669,2157,?
"IN PRP VBP DT NN TO VB JJ , PRP MD VB PRP RB , FW VBG -LRB- NN NN SYM JJ NNP : NN : -LRB- NN IN -LRB- NN : NN : , NN : NN : -RRB- -RRB- NFP NN NFP",If you want the map to be mutable  you could copy it again  e.g. using <code>mutableMap = new HashMap&lt;&gt;(Map.of(&quot;a&quot;  &quot;b&quot;));</code>.,0.6920135617256165,0.7917613983154297,44,False,1972666,22,112,True,4729,669,2157,?
"RB VB IN IN DT NN NNS CC NNS MD RB VB -LRB- NN , NN -RRB- -LRB- NN -RRB-",Also note that in this case keys and values must not be <code>null</code>.</p> <p>,0.5412234663963318,0.682660698890686,20,False,1972666,22,112,True,4729,669,2157,?
-LRB- VB RB -LRB- DT NN SYM `` ADD    NN `` NN    SYM CD -RRB- CC DT -LRB- DT NN SYM `` ADD    NN `` NN    -RRB-,(See also <a href= http://openjdk.java.net/jeps/269  rel= noreferrer >JEP 269</a> and the <a href= https://docs.oracle.com/javase/9/docs/api/java/util/Map.html  rel= noreferrer >,0.2232244610786438,0.38672661781311035,31,False,1972666,22,112,True,4729,669,2157,?
NNP NNP -RRB- -RRB- -LRB- LS -RRB- IN RB IN NNP NNP CD -RRB- -LRB- NN -RRB-,Javadoc</a>)</p> <h1>For up to Java Version 8:</h1> <p>,0.21852022409439087,0.36796659231185913,17,False,1972666,22,112,True,4729,669,2157,?
"UH , PRP MD VB TO VB PDT DT NNS RB .",No  you will have to add all the elements manually.,0.7503788471221924,0.8959545493125916,12,False,1972666,22,112,True,4729,669,2157,?
"PRP MD VB DT NN IN DT JJ NN TO VB DT NN DT JJ NN JJR NN -RRB- -LRB- NN NN -RRB- : NN , NN : NN SYM JJ NNP : NN , NN : -LRB- -RRB- NFP VB -LRB- NN : NN : , NN : NN : -RRB- : VB -LRB- NN : NN : , NN : NN : -RRB- : NN : ADD NN -RRB- -LRB- NN",You can use an initializer in an anonymous subclass to make the syntax a little bit shorter:</p> <pre><code>Map&lt;String  String&gt; myMap = new HashMap&lt;String  String&gt;() {{     put(&quot;a&quot;  &quot;b&quot;);     put(&quot;c&quot;  &quot;d&quot;); }}; </code></pre> <p>,0.46959343552589417,0.5767737030982971,73,False,1972666,22,112,True,4729,669,2157,?
"RB , DT JJ NN MD VB JJ NN IN DT NNS .",However  the anonymous subclass might introduce unwanted behavior in some cases.,0.7974026799201965,0.9058115482330322,13,False,1972666,22,112,True,4729,669,2157,?
DT VBZ IN NN NN -RRB- -LRB- FW -RRB- -LRB- FW -RRB-,This includes for example:</p> <ul> <li>,0.2059110850095749,0.37505125999450684,12,False,1972666,22,112,True,4729,669,2157,?
"PRP VBZ DT JJ NN WDT VBZ NN NN , NN NN NN CC NN HYPH NN -LRB- NNP -RRB- -LRB- NNP -RRB-",It generates an additional class which increases memory consumption  disk space consumption and startup-time</li> <li>,0.6601617932319641,0.7542062401771545,23,False,1972666,22,112,True,4729,669,2157,?
IN NN IN DT JJ NN :,In case of a non-static method:,0.6102104187011719,0.7886464595794678,7,False,1972666,22,112,True,4729,669,2157,?
PRP VBZ DT NN IN DT NN DT NN NN VBD VBN IN .,It holds a reference to the object the creating method was called upon.,0.8014922142028809,0.9138672351837158,14,False,1972666,22,112,True,4729,669,2157,?
"DT VBZ DT NN IN DT JJ NN MD RB VB NN VBN IN DT VBN NN NN VBZ RB VBN , RB VBG JJ NN -LRB- NNP -RRB- NNP -RRB- -LRB- NN",That means the object of the outer class cannot be garbage collected while the created map object is still referenced  thus blocking additional memory</li> </ul> <p>,0.7075627446174622,0.7732781767845154,32,False,1972666,22,112,True,4729,669,2157,?
"VBG DT NN IN NN MD RB VB PRP TO VB DT NN IN DT NN , CC VBZ JJ NN HYPH NNS , NN -LRB- NN -LRB- NN -RRB- NNP : NN , NNP : NN SYM NN -RRB- :",Using a function for initialization will also enable you to generate a map in an initializer  but avoids nasty side-effects:</p> <pre><code>Map&lt;String  String&gt; myMap = createMap();,0.7279765605926514,0.8414736390113831,41,False,1972666,22,112,True,4729,669,2157,?
"JJ NN NNP : NNP , NNP : NNP -LRB- -RRB- -LRB- NNP : NNP , NNP : NNP SYM JJ NNP : NNP , NNP : -LRB- -RRB- : NNP -LRB- NN : NN : , NN : NNP : -RRB- : NNP -LRB- NN : NN : , NN : NN : -RRB- : NN NN : SYM ADD NN -RRB-",private static Map&lt;String  String&gt; createMap() {     Map&lt;String String&gt; myMap = new HashMap&lt;String String&gt;();     myMap.put(&quot;a&quot;  &quot;b&quot;);     myMap.put(&quot;c&quot;  &quot;d&quot;);     return myMap; } </code></pre>,0.24970531463623047,0.43417251110076904,63,True,1972666,22,112,True,4729,669,2157,?
"NFP -RRB- DT VBZ CD NN -LRB- NN -LRB- NN NN -RRB- NNP : NNP , NNP : NN SYM JJ NNP : NNP , NNP : -LRB- -RRB- , VBN -LRB- NN : NN : , NN : NN : -RRB- : NN : ADD NN -RRB- -LRB- NN -RRB-",<p>This is one way.</p> <pre><code>Map&lt;String  String&gt; h = new HashMap&lt;String  String&gt;() {{     put(&quot;a&quot; &quot;b&quot;); }}; </code></pre> <p>,0.25366315245628357,0.4786725640296936,51,False,1972666,22,112,True,4729,175,1164,?
"RB , PRP MD VB JJ CC VB JJ IN PRP VBP DT JJ NN -LRB- PRP VBZ DT JJ NN WDT VBZ IN NNP -RRB- .",However  you should be careful and make sure that you understand the above code (it creates a new class that inherits from HashMap).,0.8130386471748352,0.9017664194107056,27,False,1972666,22,112,True,4729,175,1164,?
"RB , PRP MD VB JJR RB : -LRB- DT NN SYM `` ADD    NN SYM `` NN    ADD , CC RB VB NNP -LRB- NN -LRB- NN -RRB-",Therefore  you should read more here: <a href= http://www.c2.com/cgi/wiki?DoubleBraceInitialization  rel= noreferrer >http://www.c2.com/cgi/wiki?DoubleBraceInitialization</a>   or simply use Guava:</p> <pre><code>,0.3755534291267395,0.4891052842140198,31,False,1972666,22,112,True,4729,175,1164,?
"NNP : NNP , NNP : NN SYM JJ NNP -LRB- NN : NN : , CD , NN : NN : , CD , NN : NN : , CD -RRB- : NFP NN NN -RRB- -LRB- NN NN -RRB- VBZ IN RB IN CD NNS .",Map&lt;String  Integer&gt; left = ImmutableMap.of(&quot;a&quot;  1  &quot;b&quot;  2  &quot;c&quot;  3); </code></pre> <p><code>ImmutableMap.of</code> works for up to 5 entries.,0.35380682349205017,0.5109477639198303,48,False,1972666,22,112,True,4729,175,1164,?
"RB , VB DT NN : -LRB- DT NN SYM `` ADD    NN `` NN    ADD",Otherwise  use the builder: <a href= https://github.com/google/guava/blob/master/guava/src/com/google/common/collect/ImmutableMap.java  rel= noreferrer >source</a>.</p>,0.17211797833442688,0.32429733872413635,18,False,1972666,22,112,True,4729,175,1164,?
"NFP -RRB- IN PRP VBP JJ NN NNS , PRP MD VB -LRB- DT NN SYM `` ADD    NN `` NN    -RRB-",<p>If you allow 3rd party libs  you can use <a href= https://code.google.com/p/guava-libraries/  rel= noreferrer >,0.42453840374946594,0.5908694267272949,24,False,1972666,22,112,True,4023,283,371,?
NNP -LRB- DT NN SYM `` ADD    NN `` NN    -RRB- JJ NNP    TO VB JJ HYPH IN NN NN -RRB-,Guava</a> s <a href= https://google.github.io/guava/releases/snapshot/api/docs/com/google/common/collect/ImmutableMap.html  rel= noreferrer >ImmutableMap</a> to achieve literal-like brevity:</p>,0.19133134186267853,0.343719482421875,24,False,1972666,22,112,True,4023,283,371,?
"-LRB- NN -RRB- -LRB- NN -RRB- NNP : NNP , NNP : NN SYM JJ NNP -LRB- `` NNP    , `` NNP    , `` FW    , `` NNP    -RRB- : SYM NN NFP NN -RRB-",<pre><code>Map&lt;String  String&gt; test = ImmutableMap.of( k1    v1    k2    v2 ); </code></pre>,0.3129082918167114,0.5453002452850342,39,False,1972666,22,112,True,4023,283,371,?
NFP -RRB- DT VBZ IN RP IN -LRB- DT NN SYM   ,<p>This works for up to <a href= ,0.5084912180900574,0.6450257301330566,12,False,1972666,22,112,True,4023,283,371,?
"ADD `` NN SYM `` NN    -RRB- CD NN , NN NNS , NN , RB PRP MD VB PRP$ -LRB- DT NN SYM   ",https://google.github.io/guava/releases/snapshot/api/docs/com/google/common/collect/ImmutableMap.html#of-K-V-K-V-K-V-K-V-K-V-  rel= noreferrer >5 key/value pairs</a>  otherwise you can use its <a href= ,0.6157124638557434,0.7493531703948975,26,True,1972666,22,112,True,4023,283,371,?
ADD `` NN NN `` FW -RRB-,https://google.github.io/guava/releases/snapshot/api/docs/com/google/common/collect/ImmutableMap.html#builder--  rel= noreferrer >builder</a>:</p>,0.08240596950054169,0.2997290790081024,7,True,1972666,22,112,True,4023,283,371,?
"-LRB- NN NN -RRB- NNP : NNP , NNP : NN SYM NNP : NN , NN : NN -LRB- -RRB- . VB -LRB- `` NNP    , `` NN CD    -RRB- . VBN -LRB- `` NNP    , `` NN CD    -RRB- , . NN -LRB- -RRB- : NFP NNP NN -RRB-",<pre><code>Map&lt;String  String&gt; test = ImmutableMap.&lt;String  String&gt;builder()     .put( k1    v1 )     .put( k2    v2 )     ...     .build(); </code></pre>,0.22500209510326385,0.42257511615753174,55,False,1972666,22,112,True,4023,283,371,?
-LRB- NN -RRB-,<p><br/></p>,0.08482181280851364,0.27207159996032715,3,False,1972666,22,112,True,4023,283,371,?
"-LRB- NN -RRB- -LRB- SYM VB IN NNP POS -LRB- DT NN SYM `` ADD    NN `` NN    -RRB- JJ NN NN VBZ IN NNP POS -LRB- DT NN SYM `` ADD    NN `` NN    -RRB- NN NN NN -LRB- RBS RB PRP VBZ JJ CC VBZ RB VB JJ NNS , NNS -RRB- -LRB- NNP -RRB- -LRB- LS -RRB- IN JJR NN , VB NNP POS NN NN NN IN PRP$ -LRB- DT NN SYM   ",<ul> <li>note that Guava s <a href= https://google.github.io/guava/releases/snapshot/api/docs/com/google/common/collect/ImmutableMap.html  rel= noreferrer >ImmutableMap</a> implementation differs from Java s <a href= https://docs.oracle.com/javase/8/docs/api/java/util/HashMap.html  rel= noreferrer >HashMap</a> implementation (most notably it is immutable and does not permit null keys/values)</li> <li>for more info  see Guava s user guide article on its <a href= ,0.35125380754470825,0.4744988679885864,78,False,1972666,22,112,True,4023,283,371,?
ADD `` NN    NN `` -RRB- JJ NN FW FW -RRB- -LRB- FW -RRB-,https://github.com/google/guava/wiki/ImmutableCollectionsExplained  rel= noreferrer >immutable collection types</a></li> </ul>,0.1297152042388916,0.2784113883972168,15,True,1972666,22,112,True,4023,283,371,?
"NN EX VBZ DT JJ NN TO VB DT ,",<p>There is no direct way to do this -,0.589535117149353,0.7572711706161499,10,False,1972666,22,112,True,4729,557,122,?
"IN IN CD , NNP VBZ DT NN NNS -LRB- CC , PRP VBP PRP VBD VBN IN NNP CD , CC VBD RB VB PRP -RRB- -RRB- -LRB- NN",As of 2021  Java has no Map literals (yet - I think they were proposed for Java 8  but didn t make it).</p> <p>,0.6737660765647888,0.7702281475067139,29,False,1972666,22,112,True,4729,557,122,?
DT NNS IN DT NN -RRB- -LRB- NN -LRB- NN -RRB-,Some people like this:</p> <pre><code>,0.24005885422229767,0.3478706479072571,11,False,1972666,22,112,True,4729,557,122,?
"NNP : NNP , NNP : NN SYM JJ NNP : NN , NNP : -LRB- -RRB- : VB -LRB- NN : NN : , NN : NN : -RRB- : VB -LRB- NN : NN : , NN : NN : -RRB- SYM : -LRB- NN NN -RRB- -LRB- NN -RRB-",Map&lt;String String&gt; test = new HashMap&lt;String  String&gt;(){{        put(&quot;test&quot; &quot;test&quot;); put(&quot;test&quot; &quot;test&quot;);}}; </code></pre> <p>,0.2480003535747528,0.45230594277381897,52,False,1972666,22,112,True,4729,557,122,?
"DT VBZ DT JJ NN IN NNP , WP$ NN NN VBZ DT NNS .",This creates an anonymous subclass of HashMap  whose instance initializer puts these values.,0.7977698445320129,0.9225095510482788,15,False,1972666,22,112,True,4729,557,122,?
"-LRB- IN DT NN , DT NN MD RB VB RB DT JJ NN , PRP$ JJ NN MD VB DT JJ NN .",(By the way  a map can t contain twice the same value  your second put will overwrite the first one.,0.7855701446533203,0.8708940148353577,23,False,1972666,22,112,True,4729,557,122,?
PRP MD VB JJ NNS IN DT JJ NNS . -RRB- . -LRB- NN -RRB-,I ll use different values for the next examples.)</p> <p>,0.4858250021934509,0.6084331274032593,14,False,1972666,22,112,True,4729,557,122,?
"DT JJ NN MD VB DT -LRB- IN DT JJ NN -RRB- : SYM NN -LRB- NN -LRB- NN -RRB- NNP : NNP , NNP : NN SYM JJ NNP : NNP , NNP : -LRB- -RRB- : NN VBN -LRB- NN : NN : , NN : NN : -RRB- : NN VBN -LRB- NN : NN : , NN : NN : -RRB- : NFP NN NN -RRB- -LRB- NN -RRB-",The normal way would be this (for a local variable):</p> <pre><code>Map&lt;String String&gt; test = new HashMap&lt;String  String&gt;(); test.put(&quot;test&quot; &quot;test&quot;); test.put(&quot;test1&quot; &quot;test2&quot;); </code></pre> <p>,0.4265066087245941,0.5963932275772095,73,False,1972666,22,112,True,4729,557,122,?
IN PRP$ -LRB- NN NFP NN -RRB-,If your <code>test</code>,0.2367306649684906,0.3891301453113556,7,False,1972666,22,112,True,4729,557,122,?
"NN VBZ DT NN JJ , VB DT NN IN DT NN CC NN NN NN -RRB- -LRB- NN NN -RRB-",map is an instance variable  put the initialization in a constructor or instance initializer:</p> <pre><code>,0.7389891743659973,0.8340644836425781,21,True,1972666,22,112,True,4729,557,122,?
"NNP : NNP , NNP : NN SYM JJ NNP : NNP , NNP : -LRB- -RRB- : SYM NN -LRB- NN : NN : , NN : NN : -RRB- : NN VBN -LRB- NN : NN : , NN : NN : -RRB- : NN ADD NN -RRB- -LRB- NN -RRB-",Map&lt;String String&gt; test = new HashMap&lt;String  String&gt;(); {     test.put(&quot;test&quot; &quot;test&quot;);     test.put(&quot;test1&quot; &quot;test2&quot;); } </code></pre> <p>,0.2614658772945404,0.4641987979412079,53,False,1972666,22,112,True,4729,557,122,?
IN PRP$ -LRB- NN NFP NN -RRB-,If your <code>test</code>,0.2367306649684906,0.3891301453113556,7,False,1972666,22,112,True,4729,557,122,?
"NN VBZ DT NN NN , VB DT NN IN DT JJ NN -LRB- NN -RRB- -LRB- NN -LRB- NN NNP : NNP , NNP : NN SYM JJ NNP : NNP , NNP : -LRB- -RRB- : NN , NN -LRB- NN : NN : , NN : NN : -RRB- : NN VBN -LRB- NN : NN : , NN : NN : -RRB- : NN ADD NN -RRB- -LRB- NN -RRB-",map is a class variable  put the initialization in a static initializer:</p> <pre><code>static Map&lt;String String&gt; test = new HashMap&lt;String  String&gt;(); static {     test.put(&quot;test&quot; &quot;test&quot;);     test.put(&quot;test1&quot; &quot;test2&quot;); } </code></pre> <p>,0.5002039074897766,0.6211087703704834,74,True,1972666,22,112,True,4729,557,122,?
"IN PRP VBP PRP$ NN TO RB VB , PRP MD IN DT NN VB PRP$ NN IN -LRB- NN NN",If you want your map to never change  you should after the initialization wrap your map by <code>Collections.,0.7121047973632812,0.8414317965507507,21,False,1972666,22,112,True,4729,557,122,?
"JJ NN -LRB- , -RRB- SYM NN NFP",unmodifiableMap(...)</code>.,0.3440231382846832,0.4779365658760071,8,True,1972666,22,112,True,4729,557,122,?
"PRP MD VB DT IN DT JJ NN NN NN -RRB- -LRB- NNP NNP NNP : NNP , NNP : NN : -LRB- NNP : NNP , NNP : NN SYM JJ NNP : NNP , NNP : -LRB- -RRB- : NNP -LRB- NN : NNP : , NN : NNP : -RRB- : NN -LRB- NN : NN : , NN : NN : -RRB- : NN SYM NNP -RRB- : FW FW NN -RRB- -LRB- NN NFP PRP VBP RB JJ IN PRP MD RB VB -LRB- NN SYM NN -RRB-",You can do this in a static initializer too:</p> <pre><code>static Map&lt;String String&gt; test; {     Map&lt;String String&gt; temp = new HashMap&lt;String  String&gt;();     temp.put(&quot;test&quot; &quot;test&quot;);     temp.put(&quot;test1&quot; &quot;test2&quot;);     test = Collections.unmodifiableMap(temp); } </code></pre> <p>(I m not sure if you can now make <code>test</code>,0.4692898392677307,0.6223230957984924,92,False,1972666,22,112,True,4729,557,122,?
"JJ , VB PRP RP CC VB RB . -RRB- SYM NN -LRB- NN IN NNP CD , PRP RB VBP DT NN -LRB- , -RRB- CC NNS -LRB- -RRB- NN , IN VBN IN -LRB- DT NN SYM `` ADD    -RRB- DT NN IN ADD",final ... try it out and report here.)</p> <p>Since Java 9  you also have the Map.of(...) and Map.ofEntries() syntax  as explained in <a href= https://stackoverflow.com/a/6802502/600500 >the answer from yankee</a>.</p>,0.5868884325027466,0.7115046381950378,47,True,1972666,22,112,True,4729,557,122,?
"-LRB- NN -RRB- -LRB- NN -RRB- NNP : NNP , NNP : NN SYM JJ NNP : NNP , NNP : -LRB- -RRB- , HYPH VBN -LRB- NN , NN -RRB- : VB -LRB- NN , NN -RRB- : SYM NN : ADD NN -RRB-",<pre><code>Map&lt;String String&gt; test = new HashMap&lt;String  String&gt;() {     {         put(key1  value1);         put(key2  value2);     } }; </code></pre>,0.2576151192188263,0.4604830741882324,45,False,1972666,22,112,True,4729,45,65,?
"VB DT NN , VBG JJ NNP CD NNS CC NNS : VB DT NN -LRB- NN NNP -LRB- , NN -RRB-",<p>An alternative  using plain Java 7 classes and varargs: create a class <code>HashMapBuilder</code>,0.44350308179855347,0.5507116913795471,22,False,1972666,22,112,True,4017,205,46,?
IN DT NN : NN,with this method:     </p>,0.26608991622924805,0.382773756980896,5,True,1972666,22,112,True,4017,205,46,?
"-LRB- NN NN NN NN : NN , FW : NN NN , NNS -RRB- -RRB-",<pre><code>public static HashMap&lt;String  String&gt; build(String... data){,0.4251103401184082,0.5833483934402466,16,False,1972666,22,112,True,4017,205,46,?
"NNP : NNP , NNP : NN SYM JJ NNP : NNP , NNP : -LRB- -RRB- :",HashMap&lt;String  String&gt; result = new HashMap&lt;String  String&gt;();,0.3192448616027832,0.5031942129135132,18,False,1972666,22,112,True,4017,205,46,?
IN -LRB- NNP NN CD SYM LS -RRB- VB JJ NN -LRB- `` JJ NN IN NNS    -RRB- :,if(data.length % 2 != 0)          throw new IllegalArgumentException( Odd number of arguments );,0.27187904715538025,0.48684245347976685,20,True,1972666,22,112,True,4017,205,46,?
NN NN SYM NN : NN NN SYM SYM CD :,String key = null;     Integer step = -1;,0.33611956238746643,0.5071426630020142,11,False,1972666,22,112,True,4017,205,46,?
"IN -LRB- NN NN : NNS -RRB- NFP NN SYM : NN -LRB- NN NN CD -RRB- : NN CD : IN -LRB- NN SYM NN -RRB- VB JJ NN -LRB- `` JJ JJ NN    -RRB- : NN SYM NN : VB : NN CD : NN VBN -LRB- JJ , NN -RRB- : NN : SYM -RRB-",for(String value : data){         step++;         switch(step % 2){         case 0:              if(value == null)                 throw new IllegalArgumentException( Null key value );              key = value;             continue;         case 1:                          result.put(key  value);             break;         }     },0.28402474522590637,0.5262472629547119,59,True,1972666,22,112,True,4017,205,46,?
"NN NN : NN , FW NN -RRB-",return result; } </code></pre>,0.3018071949481964,0.4370701313018799,8,True,1972666,22,112,True,4017,205,46,?
-LRB- NN VB DT NN IN DT : NFP -RRB-,<p>Use the method like this:</p>,0.32728561758995056,0.47049960494041443,10,False,1972666,22,112,True,4017,205,46,?
-LRB- NN NN -RRB-,<pre><code>,0.08482181280851364,0.27207159996032715,4,False,1972666,22,112,True,4017,205,46,?
"NNP : NNP , NNP : NN SYM NNP .",HashMap&lt;String String&gt; data = HashMapBuilder.,0.5310013890266418,0.6473236680030823,10,False,1972666,22,112,True,4017,205,46,?
"VB `` NN    , `` NN    , `` NN    , `` NN    -RRB- : NFP NNP NN -RRB-",build( key1   value1   key2   value2 ); </code></pre>,0.12907440960407257,0.328510046005249,22,True,1972666,22,112,True,4017,205,46,?
NNP : NN -RRB- -LRB- NN NN -LRB- NN NN -RRB- NNS IN NNP CD CC RBR -RRB- -LRB- NN -LRB- NN -RRB-,<h1>tl;dr</h1> <p>Use <code>Map.of…</code> methods in Java 9 and later.</p> <pre><code>,0.17928217351436615,0.34835267066955566,23,False,1972666,22,112,True,1661,1605,26,?
"UH : NN , NN NN : NN SYM NN -LRB- NN : NN : , NN : NN : , , NN , NN NN : NN : , NN : NN : , , NN , NN NN : NN : , NN : NN : NFP NN , NN -RRB- : ADD NN -LRB- ADD -RRB- -LRB- NN NNP CD VBD DT NN IN -LRB- DT NN SYM `` ADD    NN NN    , NNP -RRB-",Map&lt; String   String &gt; animalSounds =     Map.of(         &quot;dog&quot;    &quot;bark&quot;     // key   value         &quot;cat&quot;    &quot;meow&quot;     // key   value         &quot;bird&quot;   &quot;chirp&quot;    // key   value     ) ; </code></pre> <h1><code>Map.of</code></h1> <p>Java 9 added a series of <a href= https://docs.oracle.com/javase/9/docs/api/java/util/Map.html#of--  rel= noreferrer ><code>Map.of</code></a>,0.27379876375198364,0.45170164108276367,80,False,1972666,22,112,True,1661,1605,26,?
JJ NNS TO VB RB WP PRP VBP : -LRB- JJ -RRB-,static methods to do just what you want: <strong>,0.5001265406608582,0.6837823390960693,12,True,1972666,22,112,True,1661,1605,26,?
"VB DT JJ -LRB- NN -RRB- NN -LRB- , NN -RRB-",Instantiate an immutable <code>Map</code>,0.3245588541030884,0.52787846326828,11,False,1972666,22,112,True,1661,1605,26,?
VBG JJ NN NFP -LRB- NN -RRB-,using literal syntax</strong>.</p> <p>,0.22090159356594086,0.4161757826805115,7,True,1972666,22,112,True,1661,1605,26,?
"DT NN -LRB- DT NN IN NNS -RRB- VBZ JJ , RB PRP MD RB VB CC VB NNS IN VBG .",The map (a collection of entries) is immutable  so you cannot add or remove entries after instantiating.,0.8120861053466797,0.9070221185684204,21,False,1972666,22,112,True,1661,1605,26,?
"RB , DT NN CC DT NN IN DT NN VBZ JJ , MD RB VB VBN .",Also  the key and the value of each entry is immutable  cannot be changed.,0.8477233052253723,0.9272741079330444,17,False,1972666,22,112,True,1661,1605,26,?
-LRB- DT NN SYM `` ADD    NN `` NN    -RRB-,<a href= https://docs.oracle.com/javase/9/docs/api/java/util/Map.html#immutable  rel= noreferrer >,0.11514484882354736,0.2645644247531891,12,False,1972666,22,112,True,1661,1605,26,?
"VB DT NN , LS -RRB- IN JJ NNS , JJ IN DT NNS VBN , DT NN NNS VBN , CC DT NN NN IN NNS VBZ JJ . -LRB- NN -RRB-",See the Javadoc</a> for other rules  such as no NULLs allowed  no duplicate keys allowed  and the iteration order of mappings is arbitrary.</p> <p>,0.7553894519805908,0.8487531542778015,33,False,1972666,22,112,True,1661,1605,26,?
"VB PRP VB IN DT NNS , VBG DT NN NNS IN DT NN IN NN HYPH IN HYPH NN IN DT NN WP PRP VBP MD VB IN DT NN -LRB- NN -LRB- NN -RRB- -LRB- NN -RRB-",Let s look at these methods  using some sample data for a map of day-of-week to a person who we expect will work on that day.</p> <pre><code>,0.7865338921546936,0.8666268587112427,38,False,1972666,22,112,True,1661,1605,26,?
"NN NN SYM JJ NN -LRB- NNP : NNP : -RRB- : NN NNP SYM JJ NN -LRB- NNP : NNP : -RRB- : NN NNP SYM JJ NN -LRB- NNP : NNP : -RRB- : ADD NNP -RRB- -LRB- ADD -RRB- -LRB- NN CD -RRB- -LRB- NN , SYM NN SYM `` ADD    NN NN    , NNP NN VBZ DT JJ -LRB- NN NN NFP",Person alice = new Person( &quot;Alice&quot; ); Person bob = new Person( &quot;Bob&quot; ); Person carol = new Person( &quot;Carol&quot; ); </code></pre> <h2><code>Map.of()</code></h2> <p><a href= https://docs.oracle.com/javase/9/docs/api/java/util/Map.html#of--  rel= noreferrer ><code>Map.of</code></a> creates an empty <code>Map</code>.,0.14107564091682434,0.3477659821510315,68,False,1972666,22,112,True,1661,1605,26,?
"JJ , RB PRP MD RB VB NNS .",Unmodifiable  so you cannot add entries.,0.6213387250900269,0.8443769812583923,8,False,1972666,22,112,True,1661,1605,26,?
"RB VBZ DT NN IN PDT DT NN , JJ IN DT NNS -LRB- NN -LRB- NNP NN NNP FW : NNP , NN NN : NNP SYM NNP -RRB- : -LRB- NNP FW -LRB- FW -RRB- -LRB- NNP -LRB- -RRB- : NN -LRB- NN -RRB- SYM NN -RRB- NNP -LRB- NFP -RRB- -LRB- CD -RRB- -LRB- NN NN -RRB- NNP -LRB- NN , NN , NN , NN , : -RRB- SYM NN -RRB-",Here is an example of such a map  empty with no entries.</p> <pre><code>Map &lt; DayOfWeek  Person &gt; dailyWorkerEmpty = Map.of(); </code></pre> <blockquote> <p>dailyWorkerEmpty.toString(): {}</p> </blockquote> <h2><code>Map.of( … )</code></h2> <p><code>Map.of( k   v   k   v   …)</code>,0.2347429096698761,0.4645690619945526,75,False,1972666,22,112,True,1661,1605,26,?
VBP JJ NNS WDT VBP CD IN CD NN HYPH NN NNS .,are several methods that take 1 to 10 key-value pairs.,0.6696459054946899,0.7521517872810364,13,True,1972666,22,112,True,1661,1605,26,?
"RB VBZ DT NN IN CD NNS -LRB- NN -LRB- NNP NNP FW : NNP , NN NN : NNP SYM NNP -LRB- NNP FW , NNP , SYM NN , NN NNP NNP , NNP , NN , NN -RRB- : NFP NNP FW -LRB- ADD -RRB- -LRB- NN -LRB- -RRB- : NFP NNP SYM NN NN NFP NNP    CD , NNP SYM NNP NN NFP NNP    NNP -LRB- FW -RRB- -LRB- CD , NN NNP -LRB- NFP -RRB- -LRB- CD -RRB- -LRB- NN , NN NN SYM `` ADD `` NN SYM `` NN    , NN -RRB- NNP -LRB- NN NN , NFP -RRB- SYM NN NN VBZ DT NN IN NNS VBG DT -LRB- DT NN SYM `` ADD    NN SYM `` NN    , ADD NN SYM -RRB- NN .",Here is an example of two entries.</p> <pre><code>Map &lt; DayOfWeek  Person &gt; weekendWorker =          Map.of(              DayOfWeek.SATURDAY   alice       // key   value             DayOfWeek.SUNDAY   bob           // key   value         ) ; </code></pre> <blockquote> <p>weekendWorker.toString(): {SUNDAY=Person{ name= Bob  }  SATURDAY=Person{ name= Alice  }}</p> </blockquote> <h2><code>Map.ofEntries( … )</code></h2> <p><a href= https://docs.oracle.com/javase/9/docs/api/java/util/Map.html#ofEntries-java.util.Map.Entry...-  rel= noreferrer ><code>Map.ofEntries( Map.Entry   … )</code></a> takes any number of objects implementing the <a href= https://docs.oracle.com/javase/9/docs/api/java/util/Map.Entry.html  rel= noreferrer ><code>Map.Entry</code></a> interface.,0.30373623967170715,0.48047757148742676,138,False,1972666,22,112,True,1661,1605,26,?
"NNP VBZ CD NNS VBG DT NN , CD JJ , DT JJ JJ : -LRB- DT NN SYM `` ADD    FW SYM `` NN    , NNP NN NNP , -LRB- -LRB- NN SYM `` ADD    FW SYM `` NN    , NNP , NN -RRB- NFP",Java bundles two classes implementing that interface  one mutable  the other immutable:     <a href= https://docs.oracle.com/javase/9/docs/api/java/util/AbstractMap.SimpleEntry.html  rel= noreferrer ><code>AbstractMap.SimpleEntry</code></a>  <a href= https://docs.oracle.com/javase/9/docs/api/java/util/AbstractMap.SimpleImmutableEntry.html  rel= noreferrer ><code>AbstractMap.SimpleImmutableEntry</code></a>.,0.3721170425415039,0.5029786825180054,50,False,1972666,22,112,True,1661,1605,26,?
CC PRP VBP RB VB DT JJ NN .,But we need not specify a concrete class.,0.6743494272232056,0.8331576585769653,9,False,1972666,22,112,True,1661,1605,26,?
"PRP RB VBP TO VB -LRB- DT NN SYM `` ADD    FW SYM `` NN    , NN -RRB- NNP -LRB- NN , NN -RRB- NN NN",We merely need to call <a href= https://docs.oracle.com/javase/9/docs/api/java/util/Map.html#entry-K-V-  rel= noreferrer ><code>Map.entry( k   v )</code></a>,0.23302486538887024,0.44412076473236084,28,False,1972666,22,112,True,1661,1605,26,?
"NN , VB PRP$ NN CC PRP$ NN , CC PRP VBP RB DT NN IN DT DT NN NN -LRB- DT NN SYM `` ADD    FW SYM `` NN    -LRB- ADD -RRB- -RRB- NN -RRB- -LRB- NNP NN NNP NN : NNP , NN NN : NN SYM NN -LRB- NNP -LRB- NNP .",method  pass our key and our value  and we get back an object of a some class implementing <a href= https://docs.oracle.com/javase/9/docs/api/java/util/Map.Entry.html  rel= noreferrer ><code>Map.Entry</code></a> interface.</p> <pre><code>Map &lt; DayOfWeek  Person &gt; weekdayWorker = Map.ofEntries(         Map.entry( DayOfWeek.,0.4742453992366791,0.5995180010795593,57,True,1972666,22,112,True,1661,1605,26,?
"NNP , NN -RRB- , SYM NN IN `` NN    NN VBZ DT NN VBG `` NN NN    .",MONDAY   alice )              // Call to `Map.entry` method returns an object implementing `Map.Entry`.,0.5314047336578369,0.5982496738433838,21,False,1972666,22,112,True,1661,1605,26,?
"NNP -LRB- NNP NNP , NNP -RRB- , NNP -LRB- NNP NNP , NNP -RRB- , NNP -LRB- NNP FW , NNP -RRB- , NNP -LRB- NNP .",Map.entry( DayOfWeek.TUESDAY   bob )           Map.entry( DayOfWeek.WEDNESDAY   bob )           Map.entry( DayOfWeek.THURSDAY   carol )           Map.entry( DayOfWeek.,0.2516728937625885,0.4403996467590332,28,False,1972666,22,112,True,1661,1605,26,?
"NNP , NNP -RRB- -RRB- : -LRB- NNP FW -LRB- NNP -RRB- -LRB- NNP -LRB- -RRB- : NFP NNP NNP NN NFP NNP    NN , NNP SYM NNP NN NFP NNP    -RRB- , NNP SYM NNP NN NFP NNP       , NNP SYM NNP NN NFP NNP       , NNP SYM NNP NN NFP NNP    FW -LRB- ADD -RRB- -LRB- ADD -RRB- -LRB- NN -RRB- NNP CD VBD DT NN -LRB- DT NN SYM `` ADD    FW SYM `` FW    -LRB- ADD -RRB- NFP",FRIDAY   carol ) ); </code></pre> <blockquote> <p>weekdayWorker.toString(): {WEDNESDAY=Person{ name= Bob  }  TUESDAY=Person{ name= Bob  }  THURSDAY=Person{ name= Carol  }  FRIDAY=Person{ name= Carol  }  MONDAY=Person{ name= Alice  }}</p> </blockquote> <h2><code>Map.copyOf</code></h2> <p>Java 10 added the method <a href= https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Map.html#copyOf(java.util.Map)  rel= noreferrer ><code>Map.copyOf</code></a>.,0.17858447134494781,0.39531397819519043,91,False,1972666,22,112,True,1661,1605,26,?
"VB DT VBG NN , VB RB DT JJ NN IN DT NN . -LRB- NN -RRB-",Pass an existing map  get back an immutable copy of that map.</p> <p>,0.6211283206939697,0.7691943645477295,17,False,1972666,22,112,True,1661,1605,26,?
"IN NN , IN DT VBN NN VBZ RB RB JJ , DT -LRB- NN -LRB- , NN -RRB-",For efficiency  if the passed map is already truly immutable  the <code>copyOf</code>,0.7009284496307373,0.7820197343826294,19,False,1972666,22,112,True,1661,1605,26,?
NN VBZ DT NN IN DT NN IN VBG DT JJ NN . -LRB- NNP -LRB- NNP -RRB- -LRB- NN : VB -LRB- NN -RRB- IN -LRB- NN NN SYM `` ADD    FW SYM `` FW    -LRB- ADD -RRB-,method returns a reference to the original without manufacturing a new map.</p> <h2>About <code>Collections.unmodifiableMap</code></h2> <p>Tip: Prefer <code>Map.copyOf</code> over <a href= https://docs.oracle.com/en/java/javase/20/docs/api/java.base/java/util/Collections.html#unmodifiableMap(java.util.Map)  rel= noreferrer ><code>Collections.unmodifiableMap</code></a>,0.26171770691871643,0.4096466302871704,41,True,1972666,22,112,True,1661,1605,26,?
"IN PRP VBP , VB DT RB JJ NN . -LRB- NN -RRB-",if you need/expect a truly immutable map.</p> <p>,0.40537431836128235,0.5659664869308472,13,True,1972666,22,112,True,1661,1605,26,?
"DT -LRB- NN -RRB- NNS -LRB- , NN -RRB-",The <code>Collections</code>,0.2087990939617157,0.33748942613601685,9,False,1972666,22,112,True,1661,1605,26,?
"NN VBZ DT -LRB- NN , PRP -RRB- IN DT JJ NN , DT JJ NN , RB DT JJ NN .",method produces a <em>view</em> onto the original map  a mere wrapper  not a true copy.,0.7010296583175659,0.8261657953262329,22,True,1972666,22,112,True,1661,1605,26,?
DT NN : VBG DT JJ NN VBZ DT NN IN VBG NN .,The upside: Being a mere view has the benefit of conserving memory.,0.7492278218269348,0.8930509090423584,14,False,1972666,22,112,True,1661,1605,26,?
DT NN : NNS IN DT JJ NN IN SYM -LRB- NN -RRB-,The downside: Modifications to the original show through.</p> <p>,0.4995414912700653,0.5840408802032471,13,False,1972666,22,112,True,1661,1605,26,?
"IN DT JJ NN VBZ VBN -LRB- -LRB- NN NN , -LRB- NN -LRB- , NN , FW -RRB- , DT RB HYPH JJ MD RB VB DT NN .",If the original map gets modified (<code>put</code>  <code>remove</code>  etc.)  the supposedly-unmodifiable will actually show the modification.,0.6037412881851196,0.6916688084602356,30,False,1972666,22,112,True,1661,1605,26,?
"IN NN , DT -LRB- NN NNP NFP NN -RRB-",In contrast  the <code>Map.copyOf</code>,0.4222896993160248,0.5209465026855469,10,False,1972666,22,112,True,1661,1605,26,?
"VBZ RB VB DT JJ NN IN DT VBN NN IN RB RB RB JJ -LRB- NN -LRB- NN NN SYM `` FW HYPH FW FW HYPH NN    , NN NN -LRB- NN NN -RRB- , NN NN NN SYM JJ NN -LRB- NNP : NNP : -RRB- : NN NNP SYM JJ NN -LRB- NNP : NNP : -RRB- : NNP NNP : NNP , NN NN : NNP SYM NNP -LRB- CD -RRB- : NNP -LRB- NNP , NNP -RRB- : NNP -LRB- NNP , NNP -RRB- : ADD -LRB- FW : NNP SYM FW : SYM NNP -RRB- :",does indeed produce a true copy of the passed map if not already truly immutable.</p> <pre class= lang-java prettyprint-override ><code>record Person( String name ) { } Person alice = new Person ( &quot;Alice&quot; ); Person bob = new Person ( &quot;Bob&quot; ); Map &lt; DayOfWeek  Person &gt; weekendWorkerMutable = HashMap.newHashMap ( 2 ); weekendWorkerMutable.put ( DayOfWeek.SATURDAY   bob ); weekendWorkerMutable.put ( DayOfWeek.SUNDAY   bob ); System.out.println ( &quot;weekendWorkerMutable = &quot; + weekendWorkerMutable );,0.228236585855484,0.4610491096973419,103,True,1972666,22,112,True,1661,1605,26,?
"NNP NNP : NNP , NN NNP : NNP SYM NNP -LRB- NNP -RRB- : ADD -LRB- FW : NNP SYM FW : SYM NNP -RRB- : NN NN : NNP , NN NN : NNP SYM NNP -LRB- NN NNP -RRB- : ADD -LRB- FW : NN SYM FW : SYM NN -RRB- :",Map &lt; DayOfWeek  Person &gt; weekendWorkerSupposedlyUnmodifiable = Collections.unmodifiableMap ( weekendWorkerMutable ); System.out.println ( &quot;weekendWorkerSupposedlyUnmodifiable = &quot; + weekendWorkerSupposedlyUnmodifiable ); Map &lt; DayOfWeek  Person &gt; trueCopy = Map.copyOf ( weekendWorkerSupposedlyUnmodifiable ); System.out.println ( &quot;trueCopy = &quot; + trueCopy );,0.023221122100949287,0.24735285341739655,55,False,1972666,22,112,True,1661,1605,26,?
"NNP -LRB- NNP , NNP -RRB- : HYPH NN , VB DT NN .",weekendWorkerMutable.put ( DayOfWeek.SATURDAY   alice );  // &lt;--- Modify the original.,0.33636727929115295,0.5017440915107727,14,True,1972666,22,112,True,1661,1605,26,?
LS -LRB- NN : SYM,System.out.println ( &quot; -----,-0.015291835181415081,0.19193528592586517,5,False,1972666,22,112,True,1661,1605,26,?
"IN VBG DT JJ JJ NN , NN : -RRB- : FW -LRB- FW : NNP SYM FW : SYM NN NNP -RRB- : ADD -LRB- NN : NN SYM FW : SYM NN -RRB- : ADD NN -RRB- -LRB- NN -RRB-",After mutating the original mutable map  ----- &quot; ); System.out.println ( &quot;weekendWorkerSupposedlyUnmodifiable = &quot; + weekendWorkerSupposedlyUnmodifiable ); System.out.println ( &quot;trueCopy = &quot; + trueCopy ); </code></pre> <p>,0.10874324291944504,0.33280280232429504,42,False,1972666,22,112,True,1661,1605,26,?
WRB NNP -LRB- NNP -RRB- -LRB- NNP -RRB-,When run:</p> <ul> <li>,0.0836053341627121,0.2834908068180084,8,False,1972666,22,112,True,1661,1605,26,?
"PRP VBP IN DT RB JJ VBZ RB JJ -LRB- UH RB , FW , IN VBG DT JJ NN IN WDT DT JJ NN VBZ DT NN -LRB- NNP -RRB- -LRB- FW -RRB- IN NN , DT -LRB- NN NFP NN -RRB-",We see that the supposedly unmodifiable is indeed modifiable <em>indirectly</em>  by modifying the original map on which the unmodifiable map is a view.</li> <li>In contrast  the <code>copyOf</code>,0.6186380386352539,0.6923104524612427,43,False,1972666,22,112,True,1661,1605,26,?
"NN VBZ DT JJ NN , VBG NNP IN VBG DT JJ NN RB IN VBG NNP -LRB- NNP -RRB- -LRB- NNP -LRB- FW NN SYM `` FW HYPH NN FW HYPH NN    , NNP SYM -LRB- NNP NNP NN NNP -RRB- , NNP SYM NN NN SYM NNP -RRB- SYM NNP SYM -LRB- NNP NNP NN NNP -RRB- , NNP SYM NN NN SYM NNP -RRB- SYM NN SYM -LRB- NNP NNP NN NNP -RRB- , NNP SYM NN NN SYM NNP -RRB- -RRB-",method produces a true copy  showing Bob as working the entire weekend even after assigning Alice.</li> </ul> <pre class= lang-none prettyprint-override ><code>weekendWorkerMutable = {SATURDAY=Person[name=Bob]  SUNDAY=Person[name=Bob]} weekendWorkerSupposedlyUnmodifiable = {SATURDAY=Person[name=Bob]  SUNDAY=Person[name=Bob]} trueCopy = {SUNDAY=Person[name=Bob]  SATURDAY=Person[name=Bob]},0.21396738290786743,0.4172624349594116,86,True,1972666,22,112,True,1661,1605,26,?
NFP,-----,0.12273874878883362,0.16953912377357483,1,False,1972666,22,112,True,1661,1605,26,?
"IN VBG DT JJ JJ NN , NNP SYM -LRB- NNP NNP NN NNP -RRB- , NNP SYM NN NN SYM NNP -RRB- : NNP SYM -LRB- NNP NNP NN NNP -RRB- , NNP NNP NN NNP -RRB- -RRB-",After mutating the original mutable map  -----  weekendWorkerSupposedlyUnmodifiable = {SATURDAY=Person[name=Alice]  SUNDAY=Person[name=Bob]} trueCopy = {SUNDAY=Person[name=Bob]  SATURDAY=Person[name=Bob]},0.1657576709985733,0.357931911945343,39,False,1972666,22,112,True,1661,1605,26,?
-LRB- NN NN -LRB- NN -LRB- NN -RRB- -LRB- NN NN IN DT NN NN IN NNS VBN IN -LRB- NN NN NFP NN -RRB- VBP -LRB- LS PRP -RRB- VBN .,</code></pre> <h2>Notes</h2> <p>Notice that the iterator order of maps produced via <code>Map.of</code> are <em>not</em> guaranteed.,0.29239943623542786,0.4313174784183502,32,False,1972666,22,112,True,1661,1605,26,?
DT NNS VBP DT JJ NN .,The entries have an arbitrary order.,0.7298317551612854,0.8841500282287598,7,False,1972666,22,112,True,1661,1605,26,?
"VB RB VB NN VBN IN DT NN VBN , IN DT NN VBZ DT NN VBZ JJ IN NN . -LRB- NN",Do not write code based on the order seen  as the documentation warns the order is subject to change.</p> <p>,0.7615737915039062,0.8385190963745117,23,False,1972666,22,112,True,1661,1605,26,?
"VB IN DT IN DT -LRB- NN -RRB- NN NN NN -RRB- NNS VBP DT -LRB- NN NN SYM `` ADD    FW SYM `` NN    , NNP IN -LRB- JJ SYM JJ NN , JJ -RRB-",Note that all of these <code>Map.of…</code> methods return a <a href= https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Map.html  rel= noreferrer ><code>Map</code></a> of <strong>an unspecified class</strong>.,0.30919381976127625,0.42673206329345703,38,False,1972666,22,112,True,1661,1605,26,?
DT JJ JJ NN MD RB VB IN CD NN IN NNP IN DT .,The underlying concrete class may even vary from one version of Java to another.,0.8192912936210632,0.9208890199661255,15,False,1972666,22,112,True,1661,1605,26,?
"DT NN VBZ NNP TO VB IN JJ NNS , WP RB VBZ PRP$ JJ NNS .",This anonymity enables Java to choose from various implementations  whatever optimally fits your particular data.,0.7885044813156128,0.8635914921760559,17,False,1972666,22,112,True,1661,1605,26,?
"IN NN , IN PRP$ NNS VBP IN DT -LRB- DT NN SYM   ",For example  if your keys come from an <a href= ,0.6762222647666931,0.8054714202880859,14,False,1972666,22,112,True,1661,1605,26,?
"ADD `` FW SYM `` NN    NNP HYPH NN , NNP MD VB DT -LRB- DT NN SYM `` ADD    FW SYM `` NN    -LRB- ADD -RRB-",https://docs.oracle.com/javase/tutorial/java/javaOO/enum.html  rel= noreferrer >enum</a>  Java might use an <a href= https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/EnumMap.html  rel= noreferrer ><code>EnumMap</code></a>,0.17946916818618774,0.31294217705726624,30,True,1972666,22,112,True,1661,1605,26,?
IN DT NNS . -RRB-,under the covers.</p>,0.4892915189266205,0.5840886235237122,5,True,1972666,22,112,True,1661,1605,26,?
GW GW ADD,<p><strong>JAVA 8</strong></p>,0.15985891222953796,0.3004084825515747,3,False,1972666,22,112,True,1556,170,16,?
"NN IN JJ NN CD PRP RB VBP DT NN IN VBG -LRB- NN NNS , NNS -LRB- , NN -RRB- TO VB DT NN . -RRB-",<p>In plain java 8 you also have the possibility of using <code>Streams/Collectors</code> to do the job.</p>,0.5022026896476746,0.5752987861633301,27,False,1972666,22,112,True,1556,170,16,?
-LRB- NN NN -RRB-,<pre><code>,0.08482181280851364,0.27207159996032715,4,False,1972666,22,112,True,1556,170,16,?
"NNP : NNP , NNP : NNP SYM NNP JJ NNP : NN : -LRB- `` NN    , `` NN    -RRB- , JJ NN : NN : -LRB- `` NN    , `` NN    -RRB- , JJ NN : NN : -LRB- `` NN    , `` FW    -RRB- -RRB- NN -LRB- NN -LRB- NNP FW , NN : : NN -RRB- -RRB- : -LRB- NN NN -RRB-",Map&lt;String  String&gt; myMap = Stream.of(          new SimpleEntry&lt;&gt;( key1    value1 )           new SimpleEntry&lt;&gt;( key2    value2 )           new SimpleEntry&lt;&gt;( key3    value3 ))         .collect(toMap(SimpleEntry::getKey  SimpleEntry::getValue)); </code></pre>,0.2723129093647003,0.5220239162445068,72,False,1972666,22,112,True,1556,170,16,?
NFP -RRB- DT VBZ DT NN IN RB VBG DT JJ NN -LRB- NN -RRB-,<p>This has the advantage of not creating an Anonymous class.</p>,0.6182113885879517,0.705915093421936,15,False,1972666,22,112,True,1556,170,16,?
-LRB- NN VB IN DT NNS VBP : -LRB- NN -RRB-,<p>Note that the imports are:</p>,0.3801019489765167,0.5029053688049316,11,False,1972666,22,112,True,1556,170,16,?
-LRB- NN NN NN ADD : NN ADD : -LRB- GW NN -RRB-,<pre><code>import static java.util.stream.Collectors.toMap; import java.util.AbstractMap.SimpleEntry; </code></pre>,0.4401792287826538,0.5410045385360718,13,False,1972666,22,112,True,1556,170,16,?
"NN IN NN , IN VBN IN JJ NNS , IN NNP CD RB PRP VBP JJR NNS IN VBG DT JJ -LRB- NN -RRB-",<p>Of course  as noted in other answers  in java 9 onwards you have simpler ways of doing the same.</p>,0.7069594860076904,0.8381739854812622,25,False,1972666,22,112,True,1556,170,16,?
"NN PRP MD VB TO VB DT JJ NN IN NNP NNP POS NN , -LRB- ADD -RRB- VBZ IN -LRB- NN , NN -RRB- CC -LRB- JJ -RRB- VBZ RB VB JJ NNS SYM NN , RB PRP MD VB DT -LRB- NN -RRB- NN -LRB- , NN -RRB-",<p>I would like to give a brief warning to Johnny Willer s answer.</p> <p><code>Collectors.toMap</code> relies on <code>Map.merge</code> and <strong>does not expect null values</strong>  so it will throw a <code>NullPointerException</code>,0.44351136684417725,0.5639246106147766,49,False,1972666,22,112,True,1233,252,7,?
IN PRP VBD VBN IN DT NN NN : -LRB- DT NN SYM `` ADD    NN SYM `` NN    -RRB-,as it was described in this bug report: <a href= https://bugs.openjdk.java.net/browse/JDK-8148463  rel= noreferrer >,0.5153353214263916,0.6796265840530396,22,True,1972666,22,112,True,1233,252,7,?
ADD,https://bugs.openjdk.java.net/browse/JDK-8148463</a></p>,0.026050006970763206,0.19150179624557495,1,True,1972666,22,112,True,1233,252,7,?
-LRB- NN,<p>,0.12704530358314514,0.37488943338394165,2,False,1972666,22,112,True,1233,252,7,?
"RB , IN DT NN VBZ JJ NNS , DT NN -LRB- NN , NN -RRB- MD VB DT -LRB- NN -RRB- -LRB- NN",Also  if a key appears several times  the default <code>Collectors.toMap</code> will throw an <code>IllegalStateException</code>.</p> <p>,0.49159714579582214,0.6066437363624573,24,False,1972666,22,112,True,1233,252,7,?
"DT JJ NN TO VB DT NN IN JJ NNS VBG DT NN NN IN NNP CD VBZ VBG DT JJ NN -LRB- JJ -RRB- VBN IN DT NN -LRB- , JJ -RRB-",An alternative way to get a map with null values using a builder syntax on Java 8 is writing a custom collector <strong>backed by a HashMap</strong>,0.7246425747871399,0.8423706293106079,33,False,1972666,22,112,True,1233,252,7,?
"-LRB- IN PRP VBZ VB JJ NNS -RRB- : NFP NN -LRB- NN NN NN : NNP , NNP : NNP SYM NNP -LRB- JJ NNP : NNP : -LRB- NN : NNP : , NN : NNP : -RRB- , JJ NNP : NNP : -LRB- NN : NNP : , -LRB- NNP -RRB- NN -RRB- , JJ NNP : NN : -LRB- NN : NNP : , NN : NNP : -RRB- , JJ NNP : NN : -LRB- NN : NN : , NN : NN -RRB- -RRB- NN -LRB- NN -RRB- , -LRB- NN , NN -RRB- , NN : NN NN -LRB- -RRB- , NN -RRB- -RRB- , NNP FW -RRB- : -LRB- NN NN -RRB-",(because it does allow null values):</p> <pre><code>Map&lt;String  String&gt; myMap = Stream.of(          new SimpleEntry&lt;&gt;(&quot;key1&quot;  &quot;value1&quot;)           new SimpleEntry&lt;&gt;(&quot;key2&quot;  (String) null)           new SimpleEntry&lt;&gt;(&quot;key3&quot;  &quot;value3&quot;)           new SimpleEntry&lt;&gt;(&quot;key1&quot;  &quot;value1updated&quot;))         .collect(HashMap::new                  (map  entry) -&gt; map.put(entry.getKey()                                          entry.getValue())                  HashMap::putAll); </code></pre>,0.26228010654449463,0.4725461006164551,121,False,1972666,22,112,True,1233,252,7,?
NN PRP VBP DT JJ NN NN TO VB NNS IN DT JJ NN NN -RRB- -LRB- NN NN -RRB-,<p>We use a simple utility class to initialize Maps in a fluent way:</p> <pre><code>,0.5451140403747559,0.6356158256530762,20,False,1972666,22,112,True,979,315,3,?
"UH : NNP , NNP : NN SYM NNP ADD NN : NN : , NN : NN : -RRB- . VB -LRB- NN : NN : , NN : NN : -RRB- . VB -LRB- NN : NN NN : , NN : NN : -RRB- . NNP -LRB- -RRB- : -LRB- NN NN -RRB- -LRB- NN -RRB-",Map&lt;String  String&gt; map = MapInit     .init(&quot;key1&quot;  &quot;value1&quot;)     .put(&quot;key2&quot;  &quot;value2&quot;)     .put(&quot;key3&quot;  &quot;value3&quot;)     .getMap(); </code></pre> <p>,0.17592476308345795,0.3858790397644043,59,False,1972666,22,112,True,979,315,3,?
DT NN NN VBZ RB VBN CC VBG DT NN IN NNS CC NNS CC VBG DT NN IN NNS CC VBG DT NN IN DT VBG NN NFP -LRB- NN -RRB-,The utility class isn t limited neither regarding the type of keys and values nor regarding the amount of entries nor regarding the type of the resulting Map.</p> <p>,0.7854322195053101,0.9082776308059692,31,False,1972666,22,112,True,979,315,3,?
"DT NN NN VBZ IN DT VBG : -LRB- NN -RRB- -LRB- NN NN NN NN NNP : NNP , NNP , NNP VBZ NNP : NNP , NNP : NNP : SYM JJ JJ NN NN :",The utility class looks like the following:</p> <pre><code>public class MapInit&lt;K  V  T extends Map&lt;K  V&gt;&gt; {     private final T map;,0.5869083404541016,0.7082624435424805,38,False,1972666,22,112,True,979,315,3,?
JJ NNP -LRB- JJ NN NN -RRB- NFP DT NN SYM NN : NFP,private MapInit(final T map) {         this.map = map;     },0.22491927444934845,0.41583627462387085,14,True,1972666,22,112,True,979,315,3,?
JJ NN NN -LRB- -RRB- NFP NN NNP : NFP,public T getMap() {         return this.map;     },0.14872263371944427,0.38387519121170044,10,True,1972666,22,112,True,979,315,3,?
"JJ NN NN : NNP , NNP : NNP : NNP , NNP , NNP : NNP , NNP : NNP : JJ JJ NN NN , JJ NN NN -RRB- , NN NN NN : : JJ , NN , NN -RRB- : NFP",public static &lt;K  V&gt; MapInit&lt;K  V  HashMap&lt;K  V&gt;&gt; init(final K key  final V value) {         return init(HashMap::new  key  value);     },0.4857754707336426,0.6249648332595825,45,True,1972666,22,112,True,979,315,3,?
"JJ NN NN : NNP , NNP , NNP VBZ NNP : NNP , NNP : NNP : NNP : NNP , NNP , NNP : NNP JJ NNP : NNP : NN , JJ NN NN , JJ NN NN -RRB- -LRB- NN JJ NNP : NNP : -LRB- NNP -LRB- -RRB- -RRB- , . VBN -LRB- JJ , NN -RRB- : NFP",public static &lt;K  V  T extends Map&lt;K  V&gt;&gt; MapInit&lt;K  V  T&gt; init(final Supplier&lt;T&gt; mapSupplier  final K key  final V value) {         return new MapInit&lt;&gt;(mapSupplier.get()) //                 .put(key  value);     },0.3960000276565552,0.5692257881164551,64,True,1972666,22,112,True,979,315,3,?
"JJ NNP : NNP , NNP , NNP : VBN -LRB- JJ NN NN , JJ NN NN -RRB- -LRB- ADD NN , NN -RRB- : VB DT , SYM : ADD NN -RRB-",public MapInit&lt;K  V  T&gt; put(final K key  final V value) {         this.map.put(key  value);         return this;     } } </code></pre>,0.45223379135131836,0.6159316301345825,34,True,1972666,22,112,True,979,315,3,?
