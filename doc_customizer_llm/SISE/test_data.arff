@relation test_data

@attribute sent_pos {'-LRB- NN VBN IN -LRB- DT NN SYM `` ADD    NN NN    -LRB- NN NFP NN -RRB- NN NFP NN -RRB-','PRP VBZ RB JJ IN NFP NN -RRB-','-LRB- NN NN -RRB-','NNP : NNP , NNP : NN SYM NNP -RRB- NNP NNP -LRB- NNP NNP , NNP -LRB- -RRB- -RRB- -RRB- : -LRB- NNP FW -RRB-','NFP -RRB- IN PRP$ NN VBZ -LRB- JJ -RRB- RB SYM JJ -RRB- VBN TO VB JJ IN DT NNS IN DT NN , PRP MD VB PRP IN DT -LRB- NN -RRB-','NNP : NNP , NNP : NNP : NNP SYM NN -RRB- RB IN DT -LRB- NN -RRB-','NNP : NNP , NNP ADD','-LRB- NN NN -RRB- NNP : NNP , NNP : NNP : NNP : NN SYM NNP -RRB- FW NNP FW -RRB- -RRB- : -LRB- ADD FW -RRB-','-LRB- NN NN -LRB- NN -LRB- -RRB- NFP NN -RRB- IN DT NN CC -LRB- NN -RRB- NN -LRB- , NN -RRB-','PRP IN DT NN IN DT NN NN -RRB-','NNP : NNP , NNP : NN SYM NNP -RRB- FW NNP -LRB- NNP NNP , NNP HYPH NNP : NNP -RRB- -RRB- : -LRB- NNP NN -RRB-','-LRB- NN JJS IN DT NNS VBN VBP DT NN WRB DT -LRB- JJ -RRB- NN VBZ NN NNS SYM JJ -RRB-','IN DT NN , PRP$ NN MD VB -LRB- NN -RRB- NNP -LRB- , NN -RRB-','VB IN DT JJ NN -LRB- JJ -RRB- TO VB NN NNS , JJ -RRB-','RB RB NNP -RRB- -LRB- NNP NNP NNP : NNP , NNP : FW FW : NNP : NNS -RRB- -LRB- NN NN -LRB- -RRB- NN -LRB- NN -LRB- NN SYM NN , NN HYPH NN : NN , -LRB- FW , NN -RRB- , NN : NN -RRB- -RRB- : NN , NN NN -RRB-','-LRB- NN RB VBZ DT NN IN NN PRP VBP RB VB TO VB NNP NN -LRB- -RRB- . -RRB-','-LRB- NN -RRB- -LRB- NN -RRB-','NNP : NNP , NNP : NN SYM NN -LRB- -RRB- NN -LRB- NNP : NNP , NNP : : : JJ , -LRB- NN , NN -RRB- HYPH NN : NN -LRB- NNP -LRB- -RRB- , NN -RRB- , -LRB- NN , CD -RRB- HYPH NN : NN -RRB- : -LRB- NN NN -RRB-','CD JJR NN IN JJ NN .','-LRB- NN -RRB-','-LRB- NN -RRB- -LRB- NN -RRB- NNP : NNP , NNP : NN SYM JJ NNP : NNP : -LRB- -RRB- : NNP NNP : FW -LRB- NNP -LRB- -RRB- , NNP -RRB- -RRB- : -LRB- NNP FW -RRB-','NN IN NN , IN PRP VBP VB NN NNS IN NN -RRB-','-LRB- NN NN NN : -LRB- NN -RRB-','-LRB- NN -RRB- -LRB- NN NN JJ NN NN : JJ NN NN :','JJ NN -LRB- NN NN , NN NN -RRB- NFP DT NN SYM NN : DT NN SYM NN : NFP',', NNS CC NNS : NFP NN NN -RRB-','-LRB- NN CC NN VB NN IN NNP . -RRB-','-LRB- NN -RRB- -LRB- NN -RRB- : : NNP : NN SYM JJ NN : NN : -LRB- -RRB- : NN -LRB- JJ NN -LRB- `` FW    , `` NN    -RRB- -RRB- : NN -LRB- JJ NN -LRB- `` FW    , `` NN    -RRB- -RRB- :','NNP : NNP , NNP : NN SYM NN -LRB- -RRB- NN -LRB- NN -LRB- NN NN , NN : : NN -RRB- -RRB- : NFP NN NN -RRB-','NFP -RRB- IN PRP VBP RB VB VBG JJ NN NNS , NNP POS -LRB- DT NN SYM `` ADD   ','NN -LRB- NN PRP VBP DT NN -RRB- VBZ NNS IN DT -LRB- DT NN SYM   ','NNP    -RRB- NNP NNP , NN NNS , VBG -LRB- DT NN SYM `` ADD    -RRB- NNP CC -LRB- DT NN SYM `` ADD    ADD','NNP : NNP : NNS : NNP : NNP , NNP : NN SYM NNP NNP NNP : NNP -RRB- , FW NN : NN -RRB- : -LRB- NNP NN -RRB-','NFP -RRB- PRP MD VB DT NN IN DT NNS VBG DT NN CC RB VB PRP IN DT NN NN -RRB-','-LRB- NN -RRB- -LRB- NN -RRB- NNP : NN , NNP : NN SYM ADD NN -LRB- -RRB- -RRB- . VBN -LRB- -RRB- NN -LRB- NN -LRB- NN HYPH NN : FW , NN HYPH NN : ADD LS -RRB- -RRB- -RRB- : NFP NN NN -RRB-','NN PRP VBD VBG TO VB DT CC VBD IN , VBG DT NNS RB , WRB VBG -LRB- NN -RRB- NNS . NN -LRB- -RRB- -LRB- NN -RRB- IN DT NN IN DT NN , RB PRP VBD NNS IN VBG DT JJ NN IN -LRB- ADD NN -RRB- TO RB VB IN IN NN NNS . NN','-LRB- NN -LRB- NN NN -LRB- -RRB- NFP NN -RRB-','RB VBZ NN IN DT NN IN DT NN IN DT NN MD RB VB IN VBG -LRB- NN -RRB- NN -LRB- , NN -RRB- CC VBG DT NN IN -LRB- NN NFP NN -RRB-','NN TO VB DT , PRP VBD RP VBG -LRB- NN NNS NN -LRB- -RRB- , NN -RRB- CC VBG -LRB- NN NN -RRB- RB NFP','NN RB PRP$ NN , IN PRP$ NN TO VB DT NNS IN DT NN , CC IN DT NN VB DT NN IN DT NN IN DT NN IN DT NN CC RB VB DT NN IN DT NN NN CC VB DT NN IN NNS , VBZ IN : -LRB- NN -RRB-','NNP : NNP , NNP : NNP : NN : NNS SYM NN NN -LRB- NN : NN -RRB- -RRB- NN -LRB- NN : : NN -RRB- ADD -LRB- NN NN FW , DT NN -RRB- -RRB- : NFP NN NN -RRB-','-LRB- LS -RRB- DT NNS -LRB- NN -RRB- -LRB- NN -RRB-','IN NN PRP VBP TO VB RB DT JJ NN :','EX VBZ -LRB- NN -RRB- NNS .','NNP NN : NN : , NN : NN : -RRB- , NN -RRB- -RRB- -LRB- LS -RRB- IN NNP NN CD CC JJR NN -RRB- -LRB- NN -RRB-','UH , DT VBZ JJ RB .','IN NNP CD DT NN IN NN NNS VBP VBN VBN WDT VBP DT NN IN NNS SYM -LRB- NN -RRB- -LRB- NN , DT VBZ IN RB IN CD NNS : NNP : NNP , NNP : NN SYM NN -LRB- NN : NN : , NN : NN : , NN : NN : , NN : NN : -RRB- :','NFP DT VBZ IN DT NN IN NNS : VB JJ NN .','NNP : NNP : NNP , NNP : NN SYM NN -LRB- NN -LRB- NN : NN : , NN : NN : -RRB- , NN -LRB- NN : NN : , NN : NN : -RRB- -RRB- : ADD NN -RRB- -LRB- NN -RRB-','IN DT NN IN DT -LRB- NN NN -RRB- CC -LRB- NN NN -RRB- MD VB DT JJ , RB IN JJ NNS IN VBG DT NN .','DT -LRB- NN NNP SYM NN -RRB-','NN VBZ VBN IN IN IN CD NNS IN DT NN , IN DT -LRB- NN -RRB- NNP -LRB- , NN -RRB-','NN MD VB DT JJ NN . -LRB- NN -RRB-','VB IN IN DT NN DT VBG NN MD VB DT JJ NN .','IN PRP VBP DT NN TO VB JJ , PRP MD VB PRP RB , FW VBG -LRB- NN NN SYM JJ NNP : NN : -LRB- NN IN -LRB- NN : NN : , NN : NN : -RRB- -RRB- NFP NN NFP','RB VB IN IN DT NN NNS CC NNS MD RB VB -LRB- NN , NN -RRB- -LRB- NN -RRB-','-LRB- VB RB -LRB- DT NN SYM `` ADD    NN `` NN    SYM CD -RRB- CC DT -LRB- DT NN SYM `` ADD    NN `` NN    -RRB-','NNP NNP -RRB- -RRB- -LRB- LS -RRB- IN RB IN NNP NNP CD -RRB- -LRB- NN -RRB-','UH , PRP MD VB TO VB PDT DT NNS RB .','PRP MD VB DT NN IN DT JJ NN TO VB DT NN DT JJ NN JJR NN -RRB- -LRB- NN NN -RRB- : NN , NN : NN SYM JJ NNP : NN , NN : -LRB- -RRB- NFP VB -LRB- NN : NN : , NN : NN : -RRB- : VB -LRB- NN : NN : , NN : NN : -RRB- : NN : ADD NN -RRB- -LRB- NN','RB , DT JJ NN MD VB JJ NN IN DT NNS .','DT VBZ IN NN NN -RRB- -LRB- FW -RRB- -LRB- FW -RRB-','PRP VBZ DT JJ NN WDT VBZ NN NN , NN NN NN CC NN HYPH NN -LRB- NNP -RRB- -LRB- NNP -RRB-','IN NN IN DT JJ NN :','PRP VBZ DT NN IN DT NN DT NN NN VBD VBN IN .','DT VBZ DT NN IN DT JJ NN MD RB VB NN VBN IN DT VBN NN NN VBZ RB VBN , RB VBG JJ NN -LRB- NNP -RRB- NNP -RRB- -LRB- NN','VBG DT NN IN NN MD RB VB PRP TO VB DT NN IN DT NN , CC VBZ JJ NN HYPH NNS , NN -LRB- NN -LRB- NN -RRB- NNP : NN , NNP : NN SYM NN -RRB- :','JJ NN NNP : NNP , NNP : NNP -LRB- -RRB- -LRB- NNP : NNP , NNP : NNP SYM JJ NNP : NNP , NNP : -LRB- -RRB- : NNP -LRB- NN : NN : , NN : NNP : -RRB- : NNP -LRB- NN : NN : , NN : NN : -RRB- : NN NN : SYM ADD NN -RRB-','NFP -RRB- DT VBZ CD NN -LRB- NN -LRB- NN NN -RRB- NNP : NNP , NNP : NN SYM JJ NNP : NNP , NNP : -LRB- -RRB- , VBN -LRB- NN : NN : , NN : NN : -RRB- : NN : ADD NN -RRB- -LRB- NN -RRB-','RB , PRP MD VB JJ CC VB JJ IN PRP VBP DT JJ NN -LRB- PRP VBZ DT JJ NN WDT VBZ IN NNP -RRB- .','RB , PRP MD VB JJR RB : -LRB- DT NN SYM `` ADD    NN SYM `` NN    ADD , CC RB VB NNP -LRB- NN -LRB- NN -RRB-','NNP : NNP , NNP : NN SYM JJ NNP -LRB- NN : NN : , CD , NN : NN : , CD , NN : NN : , CD -RRB- : NFP NN NN -RRB- -LRB- NN NN -RRB- VBZ IN RB IN CD NNS .','RB , VB DT NN : -LRB- DT NN SYM `` ADD    NN `` NN    ADD','NFP -RRB- IN PRP VBP JJ NN NNS , PRP MD VB -LRB- DT NN SYM `` ADD    NN `` NN    -RRB-','NNP -LRB- DT NN SYM `` ADD    NN `` NN    -RRB- JJ NNP    TO VB JJ HYPH IN NN NN -RRB-','-LRB- NN -RRB- -LRB- NN -RRB- NNP : NNP , NNP : NN SYM JJ NNP -LRB- `` NNP    , `` NNP    , `` FW    , `` NNP    -RRB- : SYM NN NFP NN -RRB-','NFP -RRB- DT VBZ IN RP IN -LRB- DT NN SYM   ','ADD `` NN SYM `` NN    -RRB- CD NN , NN NNS , NN , RB PRP MD VB PRP$ -LRB- DT NN SYM   ','ADD `` NN NN `` FW -RRB-','-LRB- NN NN -RRB- NNP : NNP , NNP : NN SYM NNP : NN , NN : NN -LRB- -RRB- . VB -LRB- `` NNP    , `` NN CD    -RRB- . VBN -LRB- `` NNP    , `` NN CD    -RRB- , . NN -LRB- -RRB- : NFP NNP NN -RRB-','-LRB- NN -RRB- -LRB- SYM VB IN NNP POS -LRB- DT NN SYM `` ADD    NN `` NN    -RRB- JJ NN NN VBZ IN NNP POS -LRB- DT NN SYM `` ADD    NN `` NN    -RRB- NN NN NN -LRB- RBS RB PRP VBZ JJ CC VBZ RB VB JJ NNS , NNS -RRB- -LRB- NNP -RRB- -LRB- LS -RRB- IN JJR NN , VB NNP POS NN NN NN IN PRP$ -LRB- DT NN SYM   ','ADD `` NN    NN `` -RRB- JJ NN FW FW -RRB- -LRB- FW -RRB-','NN EX VBZ DT JJ NN TO VB DT ,','IN IN CD , NNP VBZ DT NN NNS -LRB- CC , PRP VBP PRP VBD VBN IN NNP CD , CC VBD RB VB PRP -RRB- -RRB- -LRB- NN','DT NNS IN DT NN -RRB- -LRB- NN -LRB- NN -RRB-','NNP : NNP , NNP : NN SYM JJ NNP : NN , NNP : -LRB- -RRB- : VB -LRB- NN : NN : , NN : NN : -RRB- : VB -LRB- NN : NN : , NN : NN : -RRB- SYM : -LRB- NN NN -RRB- -LRB- NN -RRB-','DT VBZ DT JJ NN IN NNP , WP$ NN NN VBZ DT NNS .','-LRB- IN DT NN , DT NN MD RB VB RB DT JJ NN , PRP$ JJ NN MD VB DT JJ NN .','PRP MD VB JJ NNS IN DT JJ NNS . -RRB- . -LRB- NN -RRB-','DT JJ NN MD VB DT -LRB- IN DT JJ NN -RRB- : SYM NN -LRB- NN -LRB- NN -RRB- NNP : NNP , NNP : NN SYM JJ NNP : NNP , NNP : -LRB- -RRB- : NN VBN -LRB- NN : NN : , NN : NN : -RRB- : NN VBN -LRB- NN : NN : , NN : NN : -RRB- : NFP NN NN -RRB- -LRB- NN -RRB-','IN PRP$ -LRB- NN NFP NN -RRB-','NN VBZ DT NN JJ , VB DT NN IN DT NN CC NN NN NN -RRB- -LRB- NN NN -RRB-','NNP : NNP , NNP : NN SYM JJ NNP : NNP , NNP : -LRB- -RRB- : SYM NN -LRB- NN : NN : , NN : NN : -RRB- : NN VBN -LRB- NN : NN : , NN : NN : -RRB- : NN ADD NN -RRB- -LRB- NN -RRB-','NN VBZ DT NN NN , VB DT NN IN DT JJ NN -LRB- NN -RRB- -LRB- NN -LRB- NN NNP : NNP , NNP : NN SYM JJ NNP : NNP , NNP : -LRB- -RRB- : NN , NN -LRB- NN : NN : , NN : NN : -RRB- : NN VBN -LRB- NN : NN : , NN : NN : -RRB- : NN ADD NN -RRB- -LRB- NN -RRB-','IN PRP VBP PRP$ NN TO RB VB , PRP MD IN DT NN VB PRP$ NN IN -LRB- NN NN','JJ NN -LRB- , -RRB- SYM NN NFP','PRP MD VB DT IN DT JJ NN NN NN -RRB- -LRB- NNP NNP NNP : NNP , NNP : NN : -LRB- NNP : NNP , NNP : NN SYM JJ NNP : NNP , NNP : -LRB- -RRB- : NNP -LRB- NN : NNP : , NN : NNP : -RRB- : NN -LRB- NN : NN : , NN : NN : -RRB- : NN SYM NNP -RRB- : FW FW NN -RRB- -LRB- NN NFP PRP VBP RB JJ IN PRP MD RB VB -LRB- NN SYM NN -RRB-','JJ , VB PRP RP CC VB RB . -RRB- SYM NN -LRB- NN IN NNP CD , PRP RB VBP DT NN -LRB- , -RRB- CC NNS -LRB- -RRB- NN , IN VBN IN -LRB- DT NN SYM `` ADD    -RRB- DT NN IN ADD','-LRB- NN -RRB- -LRB- NN -RRB- NNP : NNP , NNP : NN SYM JJ NNP : NNP , NNP : -LRB- -RRB- , HYPH VBN -LRB- NN , NN -RRB- : VB -LRB- NN , NN -RRB- : SYM NN : ADD NN -RRB-','VB DT NN , VBG JJ NNP CD NNS CC NNS : VB DT NN -LRB- NN NNP -LRB- , NN -RRB-','IN DT NN : NN','-LRB- NN NN NN NN : NN , FW : NN NN , NNS -RRB- -RRB-','NNP : NNP , NNP : NN SYM JJ NNP : NNP , NNP : -LRB- -RRB- :','IN -LRB- NNP NN CD SYM LS -RRB- VB JJ NN -LRB- `` JJ NN IN NNS    -RRB- :','NN NN SYM NN : NN NN SYM SYM CD :','IN -LRB- NN NN : NNS -RRB- NFP NN SYM : NN -LRB- NN NN CD -RRB- : NN CD : IN -LRB- NN SYM NN -RRB- VB JJ NN -LRB- `` JJ JJ NN    -RRB- : NN SYM NN : VB : NN CD : NN VBN -LRB- JJ , NN -RRB- : NN : SYM -RRB-','NN NN : NN , FW NN -RRB-','-LRB- NN VB DT NN IN DT : NFP -RRB-','NNP : NNP , NNP : NN SYM NNP .','VB `` NN    , `` NN    , `` NN    , `` NN    -RRB- : NFP NNP NN -RRB-','NNP : NN -RRB- -LRB- NN NN -LRB- NN NN -RRB- NNS IN NNP CD CC RBR -RRB- -LRB- NN -LRB- NN -RRB-','UH : NN , NN NN : NN SYM NN -LRB- NN : NN : , NN : NN : , , NN , NN NN : NN : , NN : NN : , , NN , NN NN : NN : , NN : NN : NFP NN , NN -RRB- : ADD NN -LRB- ADD -RRB- -LRB- NN NNP CD VBD DT NN IN -LRB- DT NN SYM `` ADD    NN NN    , NNP -RRB-','JJ NNS TO VB RB WP PRP VBP : -LRB- JJ -RRB-','VB DT JJ -LRB- NN -RRB- NN -LRB- , NN -RRB-','VBG JJ NN NFP -LRB- NN -RRB-','DT NN -LRB- DT NN IN NNS -RRB- VBZ JJ , RB PRP MD RB VB CC VB NNS IN VBG .','RB , DT NN CC DT NN IN DT NN VBZ JJ , MD RB VB VBN .','-LRB- DT NN SYM `` ADD    NN `` NN    -RRB-','VB DT NN , LS -RRB- IN JJ NNS , JJ IN DT NNS VBN , DT NN NNS VBN , CC DT NN NN IN NNS VBZ JJ . -LRB- NN -RRB-','VB PRP VB IN DT NNS , VBG DT NN NNS IN DT NN IN NN HYPH IN HYPH NN IN DT NN WP PRP VBP MD VB IN DT NN -LRB- NN -LRB- NN -RRB- -LRB- NN -RRB-','NN NN SYM JJ NN -LRB- NNP : NNP : -RRB- : NN NNP SYM JJ NN -LRB- NNP : NNP : -RRB- : NN NNP SYM JJ NN -LRB- NNP : NNP : -RRB- : ADD NNP -RRB- -LRB- ADD -RRB- -LRB- NN CD -RRB- -LRB- NN , SYM NN SYM `` ADD    NN NN    , NNP NN VBZ DT JJ -LRB- NN NN NFP','JJ , RB PRP MD RB VB NNS .','RB VBZ DT NN IN PDT DT NN , JJ IN DT NNS -LRB- NN -LRB- NNP NN NNP FW : NNP , NN NN : NNP SYM NNP -RRB- : -LRB- NNP FW -LRB- FW -RRB- -LRB- NNP -LRB- -RRB- : NN -LRB- NN -RRB- SYM NN -RRB- NNP -LRB- NFP -RRB- -LRB- CD -RRB- -LRB- NN NN -RRB- NNP -LRB- NN , NN , NN , NN , : -RRB- SYM NN -RRB-','VBP JJ NNS WDT VBP CD IN CD NN HYPH NN NNS .','RB VBZ DT NN IN CD NNS -LRB- NN -LRB- NNP NNP FW : NNP , NN NN : NNP SYM NNP -LRB- NNP FW , NNP , SYM NN , NN NNP NNP , NNP , NN , NN -RRB- : NFP NNP FW -LRB- ADD -RRB- -LRB- NN -LRB- -RRB- : NFP NNP SYM NN NN NFP NNP    CD , NNP SYM NNP NN NFP NNP    NNP -LRB- FW -RRB- -LRB- CD , NN NNP -LRB- NFP -RRB- -LRB- CD -RRB- -LRB- NN , NN NN SYM `` ADD `` NN SYM `` NN    , NN -RRB- NNP -LRB- NN NN , NFP -RRB- SYM NN NN VBZ DT NN IN NNS VBG DT -LRB- DT NN SYM `` ADD    NN SYM `` NN    , ADD NN SYM -RRB- NN .','NNP VBZ CD NNS VBG DT NN , CD JJ , DT JJ JJ : -LRB- DT NN SYM `` ADD    FW SYM `` NN    , NNP NN NNP , -LRB- -LRB- NN SYM `` ADD    FW SYM `` NN    , NNP , NN -RRB- NFP','CC PRP VBP RB VB DT JJ NN .','PRP RB VBP TO VB -LRB- DT NN SYM `` ADD    FW SYM `` NN    , NN -RRB- NNP -LRB- NN , NN -RRB- NN NN','NN , VB PRP$ NN CC PRP$ NN , CC PRP VBP RB DT NN IN DT DT NN NN -LRB- DT NN SYM `` ADD    FW SYM `` NN    -LRB- ADD -RRB- -RRB- NN -RRB- -LRB- NNP NN NNP NN : NNP , NN NN : NN SYM NN -LRB- NNP -LRB- NNP .','NNP , NN -RRB- , SYM NN IN `` NN    NN VBZ DT NN VBG `` NN NN    .','NNP -LRB- NNP NNP , NNP -RRB- , NNP -LRB- NNP NNP , NNP -RRB- , NNP -LRB- NNP FW , NNP -RRB- , NNP -LRB- NNP .','NNP , NNP -RRB- -RRB- : -LRB- NNP FW -LRB- NNP -RRB- -LRB- NNP -LRB- -RRB- : NFP NNP NNP NN NFP NNP    NN , NNP SYM NNP NN NFP NNP    -RRB- , NNP SYM NNP NN NFP NNP       , NNP SYM NNP NN NFP NNP       , NNP SYM NNP NN NFP NNP    FW -LRB- ADD -RRB- -LRB- ADD -RRB- -LRB- NN -RRB- NNP CD VBD DT NN -LRB- DT NN SYM `` ADD    FW SYM `` FW    -LRB- ADD -RRB- NFP','VB DT VBG NN , VB RB DT JJ NN IN DT NN . -LRB- NN -RRB-','IN NN , IN DT VBN NN VBZ RB RB JJ , DT -LRB- NN -LRB- , NN -RRB-','NN VBZ DT NN IN DT NN IN VBG DT JJ NN . -LRB- NNP -LRB- NNP -RRB- -LRB- NN : VB -LRB- NN -RRB- IN -LRB- NN NN SYM `` ADD    FW SYM `` FW    -LRB- ADD -RRB-','IN PRP VBP , VB DT RB JJ NN . -LRB- NN -RRB-','DT -LRB- NN -RRB- NNS -LRB- , NN -RRB-','NN VBZ DT -LRB- NN , PRP -RRB- IN DT JJ NN , DT JJ NN , RB DT JJ NN .','DT NN : VBG DT JJ NN VBZ DT NN IN VBG NN .','DT NN : NNS IN DT JJ NN IN SYM -LRB- NN -RRB-','IN DT JJ NN VBZ VBN -LRB- -LRB- NN NN , -LRB- NN -LRB- , NN , FW -RRB- , DT RB HYPH JJ MD RB VB DT NN .','IN NN , DT -LRB- NN NNP NFP NN -RRB-','VBZ RB VB DT JJ NN IN DT VBN NN IN RB RB RB JJ -LRB- NN -LRB- NN NN SYM `` FW HYPH FW FW HYPH NN    , NN NN -LRB- NN NN -RRB- , NN NN NN SYM JJ NN -LRB- NNP : NNP : -RRB- : NN NNP SYM JJ NN -LRB- NNP : NNP : -RRB- : NNP NNP : NNP , NN NN : NNP SYM NNP -LRB- CD -RRB- : NNP -LRB- NNP , NNP -RRB- : NNP -LRB- NNP , NNP -RRB- : ADD -LRB- FW : NNP SYM FW : SYM NNP -RRB- :','NNP NNP : NNP , NN NNP : NNP SYM NNP -LRB- NNP -RRB- : ADD -LRB- FW : NNP SYM FW : SYM NNP -RRB- : NN NN : NNP , NN NN : NNP SYM NNP -LRB- NN NNP -RRB- : ADD -LRB- FW : NN SYM FW : SYM NN -RRB- :','NNP -LRB- NNP , NNP -RRB- : HYPH NN , VB DT NN .','LS -LRB- NN : SYM','IN VBG DT JJ JJ NN , NN : -RRB- : FW -LRB- FW : NNP SYM FW : SYM NN NNP -RRB- : ADD -LRB- NN : NN SYM FW : SYM NN -RRB- : ADD NN -RRB- -LRB- NN -RRB-','WRB NNP -LRB- NNP -RRB- -LRB- NNP -RRB-','PRP VBP IN DT RB JJ VBZ RB JJ -LRB- UH RB , FW , IN VBG DT JJ NN IN WDT DT JJ NN VBZ DT NN -LRB- NNP -RRB- -LRB- FW -RRB- IN NN , DT -LRB- NN NFP NN -RRB-','NN VBZ DT JJ NN , VBG NNP IN VBG DT JJ NN RB IN VBG NNP -LRB- NNP -RRB- -LRB- NNP -LRB- FW NN SYM `` FW HYPH NN FW HYPH NN    , NNP SYM -LRB- NNP NNP NN NNP -RRB- , NNP SYM NN NN SYM NNP -RRB- SYM NNP SYM -LRB- NNP NNP NN NNP -RRB- , NNP SYM NN NN SYM NNP -RRB- SYM NN SYM -LRB- NNP NNP NN NNP -RRB- , NNP SYM NN NN SYM NNP -RRB- -RRB-',NFP,'IN VBG DT JJ JJ NN , NNP SYM -LRB- NNP NNP NN NNP -RRB- , NNP SYM NN NN SYM NNP -RRB- : NNP SYM -LRB- NNP NNP NN NNP -RRB- , NNP NNP NN NNP -RRB- -RRB-','-LRB- NN NN -LRB- NN -LRB- NN -RRB- -LRB- NN NN IN DT NN NN IN NNS VBN IN -LRB- NN NN NFP NN -RRB- VBP -LRB- LS PRP -RRB- VBN .','DT NNS VBP DT JJ NN .','VB RB VB NN VBN IN DT NN VBN , IN DT NN VBZ DT NN VBZ JJ IN NN . -LRB- NN','VB IN DT IN DT -LRB- NN -RRB- NN NN NN -RRB- NNS VBP DT -LRB- NN NN SYM `` ADD    FW SYM `` NN    , NNP IN -LRB- JJ SYM JJ NN , JJ -RRB-','DT JJ JJ NN MD RB VB IN CD NN IN NNP IN DT .','DT NN VBZ NNP TO VB IN JJ NNS , WP RB VBZ PRP$ JJ NNS .','IN NN , IN PRP$ NNS VBP IN DT -LRB- DT NN SYM   ','ADD `` FW SYM `` NN    NNP HYPH NN , NNP MD VB DT -LRB- DT NN SYM `` ADD    FW SYM `` NN    -LRB- ADD -RRB-','IN DT NNS . -RRB-','GW GW ADD','NN IN JJ NN CD PRP RB VBP DT NN IN VBG -LRB- NN NNS , NNS -LRB- , NN -RRB- TO VB DT NN . -RRB-','NNP : NNP , NNP : NNP SYM NNP JJ NNP : NN : -LRB- `` NN    , `` NN    -RRB- , JJ NN : NN : -LRB- `` NN    , `` NN    -RRB- , JJ NN : NN : -LRB- `` NN    , `` FW    -RRB- -RRB- NN -LRB- NN -LRB- NNP FW , NN : : NN -RRB- -RRB- : -LRB- NN NN -RRB-','NFP -RRB- DT VBZ DT NN IN RB VBG DT JJ NN -LRB- NN -RRB-','-LRB- NN VB IN DT NNS VBP : -LRB- NN -RRB-','-LRB- NN NN NN ADD : NN ADD : -LRB- GW NN -RRB-','NN IN NN , IN VBN IN JJ NNS , IN NNP CD RB PRP VBP JJR NNS IN VBG DT JJ -LRB- NN -RRB-','NN PRP MD VB TO VB DT JJ NN IN NNP NNP POS NN , -LRB- ADD -RRB- VBZ IN -LRB- NN , NN -RRB- CC -LRB- JJ -RRB- VBZ RB VB JJ NNS SYM NN , RB PRP MD VB DT -LRB- NN -RRB- NN -LRB- , NN -RRB-','IN PRP VBD VBN IN DT NN NN : -LRB- DT NN SYM `` ADD    NN SYM `` NN    -RRB-',ADD,'-LRB- NN','RB , IN DT NN VBZ JJ NNS , DT NN -LRB- NN , NN -RRB- MD VB DT -LRB- NN -RRB- -LRB- NN','DT JJ NN TO VB DT NN IN JJ NNS VBG DT NN NN IN NNP CD VBZ VBG DT JJ NN -LRB- JJ -RRB- VBN IN DT NN -LRB- , JJ -RRB-','-LRB- IN PRP VBZ VB JJ NNS -RRB- : NFP NN -LRB- NN NN NN : NNP , NNP : NNP SYM NNP -LRB- JJ NNP : NNP : -LRB- NN : NNP : , NN : NNP : -RRB- , JJ NNP : NNP : -LRB- NN : NNP : , -LRB- NNP -RRB- NN -RRB- , JJ NNP : NN : -LRB- NN : NNP : , NN : NNP : -RRB- , JJ NNP : NN : -LRB- NN : NN : , NN : NN -RRB- -RRB- NN -LRB- NN -RRB- , -LRB- NN , NN -RRB- , NN : NN NN -LRB- -RRB- , NN -RRB- -RRB- , NNP FW -RRB- : -LRB- NN NN -RRB-','NN PRP VBP DT JJ NN NN TO VB NNS IN DT JJ NN NN -RRB- -LRB- NN NN -RRB-','UH : NNP , NNP : NN SYM NNP ADD NN : NN : , NN : NN : -RRB- . VB -LRB- NN : NN : , NN : NN : -RRB- . VB -LRB- NN : NN NN : , NN : NN : -RRB- . NNP -LRB- -RRB- : -LRB- NN NN -RRB- -LRB- NN -RRB-','DT NN NN VBZ RB VBN CC VBG DT NN IN NNS CC NNS CC VBG DT NN IN NNS CC VBG DT NN IN DT VBG NN NFP -LRB- NN -RRB-','DT NN NN VBZ IN DT VBG : -LRB- NN -RRB- -LRB- NN NN NN NN NNP : NNP , NNP , NNP VBZ NNP : NNP , NNP : NNP : SYM JJ JJ NN NN :','JJ NNP -LRB- JJ NN NN -RRB- NFP DT NN SYM NN : NFP','JJ NN NN -LRB- -RRB- NFP NN NNP : NFP','JJ NN NN : NNP , NNP : NNP : NNP , NNP , NNP : NNP , NNP : NNP : JJ JJ NN NN , JJ NN NN -RRB- , NN NN NN : : JJ , NN , NN -RRB- : NFP','JJ NN NN : NNP , NNP , NNP VBZ NNP : NNP , NNP : NNP : NNP : NNP , NNP , NNP : NNP JJ NNP : NNP : NN , JJ NN NN , JJ NN NN -RRB- -LRB- NN JJ NNP : NNP : -LRB- NNP -LRB- -RRB- -RRB- , . VBN -LRB- JJ , NN -RRB- : NFP','JJ NNP : NNP , NNP , NNP : VBN -LRB- JJ NN NN , JJ NN NN -RRB- -LRB- ADD NN , NN -RRB- : VB DT , SYM : ADD NN -RRB-'}
@attribute sentence {'<p>Based on <a href= http://docs.oracle.com/javase/8/docs/api/java/util/stream/Collectors.html#toMap-java.util.function.Function-java.util.function.Function-  rel= noreferrer ><code>Collectors</code> documentation</a>','it s as simple as:</p>',<pre><code>,'Map&lt;String  Choice&gt; result =     choices.stream().collect(Collectors.toMap(Choice::getName                                                Function.identity())); </code></pre>','<p>If your key is <strong>NOT</strong> guaranteed to be unique for all elements in the list  you should convert it to a <code>','Map&lt;String  List&lt;Choice&gt;&gt;</code> instead of a <code>','Map&lt;String  Choice&gt;</code></p>','<pre><code>Map&lt;String  List&lt;Choice&gt;&gt; result =  choices.stream().collect(Collectors.groupingBy(Choice::getName)); </code></pre>','<p>Use <code>getName()</code> as the key and <code>Choice</code>','itself as the value of the map:</p>','Map&lt;String  Choice&gt; result =     choices.stream().collect(Collectors.toMap(Choice::getName  c -&gt; c)); </code></pre>','<p>Most of the answers listed miss a case when the <strong>list has duplicate items</strong>.','In that case  their answer will throw <code>IllegalStateException</code>.','Refer to the below code <strong>to handle list duplicates</strong>','as well:</p> <pre><code>public Map&lt;String  Choice&gt; convertListToMap(List&lt;Choice&gt; choices) {     return choices.stream()         .collect(Collectors.toMap(Choice::getName  choice -&gt; choice              (oldValue  newValue) -&gt; newValue));   } </code></pre>','<p>Here s another one in case you don t want to use Collectors.toMap()</p>','Map&lt;String  Choice&gt; result =    choices.stream().collect(HashMap&lt;String  Choice&gt;::new                              (m  c) -&gt; m.put(c.getName()  c)                             (m  u) -&gt; {}); </code></pre>','<blockquote>   <p>','One more option in simple way</p>',</blockquote>,'<pre><code>Map&lt;String Choice&gt; map = new HashMap&lt;&gt;(); choices.forEach(e-&gt;map.put(e.getName() e)); </code></pre>','<p>For example  if you want convert object fields to map:</p>','<p>Example object:</p>','<pre><code>class Item{         private String code;         private String name;','public Item(String code  String name) {             this.code = code;             this.name = name;         }','//getters and setters     } </code></pre>','<p>And operation convert List To Map:</p>','<pre><code>List&lt;Item&gt; list = new ArrayList&lt;&gt;(); list.add(new Item( code1    name1 )); list.add(new Item( code2    name2 ));','Map&lt;String String&gt; map = list.stream()      .collect(Collectors.toMap(Item::getCode  Item::getName)); </code></pre>','<p>If you don t mind using 3rd party libraries  AOL s <a href= https://github.com/aol/cyclops-react >cyclops-react</a>','lib (disclosure I am a contributor) has extensions for all <a href= ','https://medium.com/@johnmcclean/extending-jdk-8-collections-8ae8d43dd75e#.j5lxtrqze >JDK Collection</a> types  including <a href= http://static.javadoc.io/com.aol.simplereact/cyclops-react/1.0.0-RC1/com/aol/cyclops/data/collections/extensions/standard/ListX.html >List</a> and <a href= http://static.javadoc.io/com.aol.simplereact/cyclops-react/1.0.0-RC1/com/aol/cyclops/data/collections/extensions/standard/MapX.html >Map</a>.</p>','ListX&lt;Choices&gt; choices; Map&lt;String  Choice&gt; map = choices.toMap(c-&gt; c.getName() c-&gt;c); </code></pre>','<p>You can create a Stream of the indices using an IntStream and then convert them to a Map :</p>','<pre><code>Map&lt;Integer Item&gt; map =  IntStream.range(0 items.size())          .boxed()          .collect(Collectors.toMap (i -&gt; i  i -&gt; items.get(i))); </code></pre>','<p>I was trying to do this and found that  using the answers above  when using <code>Functions.identity()</code> for the key to the Map  then I had issues with using a local method like <code>this::localMethodName</code> to actually work because of typing issues.</p>',<p><code>Functions.identity()</code>,'actually does something to the typing in this case so the method would only work by returning <code>Object</code> and accepting a param of <code>Object</code></p>','<p>To solve this  I ended up ditching <code>Functions.identity()</code> and using <code>s-&gt;s</code> instead.</p>','<p>So my code  in my case to list all directories inside a directory  and for each one use the name of the directory as the key to the map and then call a method with the directory name and return a collection of items  looks like:</p>','Map&lt;String  Collection&lt;ItemType&gt;&gt; items = Arrays.stream(itemFilesDir.listFiles(File::isDirectory)) .map(File::getName) .collect(Collectors.toMap(s-&gt;s  this::retrieveBrandItems)); </code></pre>','<h1>All Versions</h1> <p>','In case you happen to need just a single entry:','There is <code>Collections.','singletonMap(&quot;key&quot;  &quot;value&quot;)</code>.</p> <h1>For Java Version 9 or higher:</h1> <p>','Yes  this is possible now.','In Java 9 a couple of factory methods have been added that simplify the creation of maps :</p> <pre><code>// this works for up to 10 elements: Map&lt;String  String&gt; test1 = Map.of(     &quot;a&quot;  &quot;b&quot;      &quot;c&quot;  &quot;d&quot; );','// this works for any number of elements: import static java.util.','Map.entry;     Map&lt;String  String&gt; test2 = Map.ofEntries(     entry(&quot;a&quot;  &quot;b&quot;)      entry(&quot;c&quot;  &quot;d&quot;) ); </code></pre> <p>','In the example above both <code>test</code> and <code>test2</code> will be the same  just with different ways of expressing the Map.','The <code>Map.of</code>','method is defined for up to ten elements in the map  while the <code>Map.ofEntries</code>','method will have no such limit.</p> <p>','Note that in this case the resulting map will be an immutable map.','If you want the map to be mutable  you could copy it again  e.g. using <code>mutableMap = new HashMap&lt;&gt;(Map.of(&quot;a&quot;  &quot;b&quot;));</code>.','Also note that in this case keys and values must not be <code>null</code>.</p> <p>','(See also <a href= http://openjdk.java.net/jeps/269  rel= noreferrer >JEP 269</a> and the <a href= https://docs.oracle.com/javase/9/docs/api/java/util/Map.html  rel= noreferrer >','Javadoc</a>)</p> <h1>For up to Java Version 8:</h1> <p>','No  you will have to add all the elements manually.','You can use an initializer in an anonymous subclass to make the syntax a little bit shorter:</p> <pre><code>Map&lt;String  String&gt; myMap = new HashMap&lt;String  String&gt;() {{     put(&quot;a&quot;  &quot;b&quot;);     put(&quot;c&quot;  &quot;d&quot;); }}; </code></pre> <p>','However  the anonymous subclass might introduce unwanted behavior in some cases.','This includes for example:</p> <ul> <li>','It generates an additional class which increases memory consumption  disk space consumption and startup-time</li> <li>','In case of a non-static method:','It holds a reference to the object the creating method was called upon.','That means the object of the outer class cannot be garbage collected while the created map object is still referenced  thus blocking additional memory</li> </ul> <p>','Using a function for initialization will also enable you to generate a map in an initializer  but avoids nasty side-effects:</p> <pre><code>Map&lt;String  String&gt; myMap = createMap();','private static Map&lt;String  String&gt; createMap() {     Map&lt;String String&gt; myMap = new HashMap&lt;String String&gt;();     myMap.put(&quot;a&quot;  &quot;b&quot;);     myMap.put(&quot;c&quot;  &quot;d&quot;);     return myMap; } </code></pre>','<p>This is one way.</p> <pre><code>Map&lt;String  String&gt; h = new HashMap&lt;String  String&gt;() {{     put(&quot;a&quot; &quot;b&quot;); }}; </code></pre> <p>','However  you should be careful and make sure that you understand the above code (it creates a new class that inherits from HashMap).','Therefore  you should read more here: <a href= http://www.c2.com/cgi/wiki?DoubleBraceInitialization  rel= noreferrer >http://www.c2.com/cgi/wiki?DoubleBraceInitialization</a>   or simply use Guava:</p> <pre><code>','Map&lt;String  Integer&gt; left = ImmutableMap.of(&quot;a&quot;  1  &quot;b&quot;  2  &quot;c&quot;  3); </code></pre> <p><code>ImmutableMap.of</code> works for up to 5 entries.','Otherwise  use the builder: <a href= https://github.com/google/guava/blob/master/guava/src/com/google/common/collect/ImmutableMap.java  rel= noreferrer >source</a>.</p>','<p>If you allow 3rd party libs  you can use <a href= https://code.google.com/p/guava-libraries/  rel= noreferrer >','Guava</a> s <a href= https://google.github.io/guava/releases/snapshot/api/docs/com/google/common/collect/ImmutableMap.html  rel= noreferrer >ImmutableMap</a> to achieve literal-like brevity:</p>','<pre><code>Map&lt;String  String&gt; test = ImmutableMap.of( k1    v1    k2    v2 ); </code></pre>','<p>This works for up to <a href= ','https://google.github.io/guava/releases/snapshot/api/docs/com/google/common/collect/ImmutableMap.html#of-K-V-K-V-K-V-K-V-K-V-  rel= noreferrer >5 key/value pairs</a>  otherwise you can use its <a href= ','https://google.github.io/guava/releases/snapshot/api/docs/com/google/common/collect/ImmutableMap.html#builder--  rel= noreferrer >builder</a>:</p>','<pre><code>Map&lt;String  String&gt; test = ImmutableMap.&lt;String  String&gt;builder()     .put( k1    v1 )     .put( k2    v2 )     ...     .build(); </code></pre>',<p><br/></p>,'<ul> <li>note that Guava s <a href= https://google.github.io/guava/releases/snapshot/api/docs/com/google/common/collect/ImmutableMap.html  rel= noreferrer >ImmutableMap</a> implementation differs from Java s <a href= https://docs.oracle.com/javase/8/docs/api/java/util/HashMap.html  rel= noreferrer >HashMap</a> implementation (most notably it is immutable and does not permit null keys/values)</li> <li>for more info  see Guava s user guide article on its <a href= ','https://github.com/google/guava/wiki/ImmutableCollectionsExplained  rel= noreferrer >immutable collection types</a></li> </ul>','<p>There is no direct way to do this -','As of 2021  Java has no Map literals (yet - I think they were proposed for Java 8  but didn t make it).</p> <p>','Some people like this:</p> <pre><code>','Map&lt;String String&gt; test = new HashMap&lt;String  String&gt;(){{        put(&quot;test&quot; &quot;test&quot;); put(&quot;test&quot; &quot;test&quot;);}}; </code></pre> <p>','This creates an anonymous subclass of HashMap  whose instance initializer puts these values.','(By the way  a map can t contain twice the same value  your second put will overwrite the first one.','I ll use different values for the next examples.)</p> <p>','The normal way would be this (for a local variable):</p> <pre><code>Map&lt;String String&gt; test = new HashMap&lt;String  String&gt;(); test.put(&quot;test&quot; &quot;test&quot;); test.put(&quot;test1&quot; &quot;test2&quot;); </code></pre> <p>','If your <code>test</code>','map is an instance variable  put the initialization in a constructor or instance initializer:</p> <pre><code>','Map&lt;String String&gt; test = new HashMap&lt;String  String&gt;(); {     test.put(&quot;test&quot; &quot;test&quot;);     test.put(&quot;test1&quot; &quot;test2&quot;); } </code></pre> <p>','map is a class variable  put the initialization in a static initializer:</p> <pre><code>static Map&lt;String String&gt; test = new HashMap&lt;String  String&gt;(); static {     test.put(&quot;test&quot; &quot;test&quot;);     test.put(&quot;test1&quot; &quot;test2&quot;); } </code></pre> <p>','If you want your map to never change  you should after the initialization wrap your map by <code>Collections.',unmodifiableMap(...)</code>.,'You can do this in a static initializer too:</p> <pre><code>static Map&lt;String String&gt; test; {     Map&lt;String String&gt; temp = new HashMap&lt;String  String&gt;();     temp.put(&quot;test&quot; &quot;test&quot;);     temp.put(&quot;test1&quot; &quot;test2&quot;);     test = Collections.unmodifiableMap(temp); } </code></pre> <p>(I m not sure if you can now make <code>test</code>','final ... try it out and report here.)</p> <p>Since Java 9  you also have the Map.of(...) and Map.ofEntries() syntax  as explained in <a href= https://stackoverflow.com/a/6802502/600500 >the answer from yankee</a>.</p>','<pre><code>Map&lt;String String&gt; test = new HashMap&lt;String  String&gt;() {     {         put(key1  value1);         put(key2  value2);     } }; </code></pre>','<p>An alternative  using plain Java 7 classes and varargs: create a class <code>HashMapBuilder</code>','with this method:     </p>','<pre><code>public static HashMap&lt;String  String&gt; build(String... data){','HashMap&lt;String  String&gt; result = new HashMap&lt;String  String&gt;();','if(data.length \% 2 != 0)          throw new IllegalArgumentException( Odd number of arguments );','String key = null;     Integer step = -1;','for(String value : data){         step++;         switch(step \% 2){         case 0:              if(value == null)                 throw new IllegalArgumentException( Null key value );              key = value;             continue;         case 1:                          result.put(key  value);             break;         }     }','return result; } </code></pre>','<p>Use the method like this:</p>','HashMap&lt;String String&gt; data = HashMapBuilder.','build( key1   value1   key2   value2 ); </code></pre>','<h1>tl;dr</h1> <p>Use <code>Map.of…</code> methods in Java 9 and later.</p> <pre><code>','Map&lt; String   String &gt; animalSounds =     Map.of(         &quot;dog&quot;    &quot;bark&quot;     // key   value         &quot;cat&quot;    &quot;meow&quot;     // key   value         &quot;bird&quot;   &quot;chirp&quot;    // key   value     ) ; </code></pre> <h1><code>Map.of</code></h1> <p>Java 9 added a series of <a href= https://docs.oracle.com/javase/9/docs/api/java/util/Map.html#of--  rel= noreferrer ><code>Map.of</code></a>','static methods to do just what you want: <strong>','Instantiate an immutable <code>Map</code>','using literal syntax</strong>.</p> <p>','The map (a collection of entries) is immutable  so you cannot add or remove entries after instantiating.','Also  the key and the value of each entry is immutable  cannot be changed.','<a href= https://docs.oracle.com/javase/9/docs/api/java/util/Map.html#immutable  rel= noreferrer >','See the Javadoc</a> for other rules  such as no NULLs allowed  no duplicate keys allowed  and the iteration order of mappings is arbitrary.</p> <p>','Let s look at these methods  using some sample data for a map of day-of-week to a person who we expect will work on that day.</p> <pre><code>','Person alice = new Person( &quot;Alice&quot; ); Person bob = new Person( &quot;Bob&quot; ); Person carol = new Person( &quot;Carol&quot; ); </code></pre> <h2><code>Map.of()</code></h2> <p><a href= https://docs.oracle.com/javase/9/docs/api/java/util/Map.html#of--  rel= noreferrer ><code>Map.of</code></a> creates an empty <code>Map</code>.','Unmodifiable  so you cannot add entries.','Here is an example of such a map  empty with no entries.</p> <pre><code>Map &lt; DayOfWeek  Person &gt; dailyWorkerEmpty = Map.of(); </code></pre> <blockquote> <p>dailyWorkerEmpty.toString(): {}</p> </blockquote> <h2><code>Map.of( … )</code></h2> <p><code>Map.of( k   v   k   v   …)</code>','are several methods that take 1 to 10 key-value pairs.','Here is an example of two entries.</p> <pre><code>Map &lt; DayOfWeek  Person &gt; weekendWorker =          Map.of(              DayOfWeek.SATURDAY   alice       // key   value             DayOfWeek.SUNDAY   bob           // key   value         ) ; </code></pre> <blockquote> <p>weekendWorker.toString(): {SUNDAY=Person{ name= Bob  }  SATURDAY=Person{ name= Alice  }}</p> </blockquote> <h2><code>Map.ofEntries( … )</code></h2> <p><a href= https://docs.oracle.com/javase/9/docs/api/java/util/Map.html#ofEntries-java.util.Map.Entry...-  rel= noreferrer ><code>Map.ofEntries( Map.Entry   … )</code></a> takes any number of objects implementing the <a href= https://docs.oracle.com/javase/9/docs/api/java/util/Map.Entry.html  rel= noreferrer ><code>Map.Entry</code></a> interface.','Java bundles two classes implementing that interface  one mutable  the other immutable:     <a href= https://docs.oracle.com/javase/9/docs/api/java/util/AbstractMap.SimpleEntry.html  rel= noreferrer ><code>AbstractMap.SimpleEntry</code></a>  <a href= https://docs.oracle.com/javase/9/docs/api/java/util/AbstractMap.SimpleImmutableEntry.html  rel= noreferrer ><code>AbstractMap.SimpleImmutableEntry</code></a>.','But we need not specify a concrete class.','We merely need to call <a href= https://docs.oracle.com/javase/9/docs/api/java/util/Map.html#entry-K-V-  rel= noreferrer ><code>Map.entry( k   v )</code></a>','method  pass our key and our value  and we get back an object of a some class implementing <a href= https://docs.oracle.com/javase/9/docs/api/java/util/Map.Entry.html  rel= noreferrer ><code>Map.Entry</code></a> interface.</p> <pre><code>Map &lt; DayOfWeek  Person &gt; weekdayWorker = Map.ofEntries(         Map.entry( DayOfWeek.','MONDAY   alice )              // Call to `Map.entry` method returns an object implementing `Map.Entry`.','Map.entry( DayOfWeek.TUESDAY   bob )           Map.entry( DayOfWeek.WEDNESDAY   bob )           Map.entry( DayOfWeek.THURSDAY   carol )           Map.entry( DayOfWeek.','FRIDAY   carol ) ); </code></pre> <blockquote> <p>weekdayWorker.toString(): {WEDNESDAY=Person{ name= Bob  }  TUESDAY=Person{ name= Bob  }  THURSDAY=Person{ name= Carol  }  FRIDAY=Person{ name= Carol  }  MONDAY=Person{ name= Alice  }}</p> </blockquote> <h2><code>Map.copyOf</code></h2> <p>Java 10 added the method <a href= https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Map.html#copyOf(java.util.Map)  rel= noreferrer ><code>Map.copyOf</code></a>.','Pass an existing map  get back an immutable copy of that map.</p> <p>','For efficiency  if the passed map is already truly immutable  the <code>copyOf</code>','method returns a reference to the original without manufacturing a new map.</p> <h2>About <code>Collections.unmodifiableMap</code></h2> <p>Tip: Prefer <code>Map.copyOf</code> over <a href= https://docs.oracle.com/en/java/javase/20/docs/api/java.base/java/util/Collections.html#unmodifiableMap(java.util.Map)  rel= noreferrer ><code>Collections.unmodifiableMap</code></a>','if you need/expect a truly immutable map.</p> <p>','The <code>Collections</code>','method produces a <em>view</em> onto the original map  a mere wrapper  not a true copy.','The upside: Being a mere view has the benefit of conserving memory.','The downside: Modifications to the original show through.</p> <p>','If the original map gets modified (<code>put</code>  <code>remove</code>  etc.)  the supposedly-unmodifiable will actually show the modification.','In contrast  the <code>Map.copyOf</code>','does indeed produce a true copy of the passed map if not already truly immutable.</p> <pre class= lang-java prettyprint-override ><code>record Person( String name ) { } Person alice = new Person ( &quot;Alice&quot; ); Person bob = new Person ( &quot;Bob&quot; ); Map &lt; DayOfWeek  Person &gt; weekendWorkerMutable = HashMap.newHashMap ( 2 ); weekendWorkerMutable.put ( DayOfWeek.SATURDAY   bob ); weekendWorkerMutable.put ( DayOfWeek.SUNDAY   bob ); System.out.println ( &quot;weekendWorkerMutable = &quot; + weekendWorkerMutable );','Map &lt; DayOfWeek  Person &gt; weekendWorkerSupposedlyUnmodifiable = Collections.unmodifiableMap ( weekendWorkerMutable ); System.out.println ( &quot;weekendWorkerSupposedlyUnmodifiable = &quot; + weekendWorkerSupposedlyUnmodifiable ); Map &lt; DayOfWeek  Person &gt; trueCopy = Map.copyOf ( weekendWorkerSupposedlyUnmodifiable ); System.out.println ( &quot;trueCopy = &quot; + trueCopy );','weekendWorkerMutable.put ( DayOfWeek.SATURDAY   alice );  // &lt;--- Modify the original.','System.out.println ( &quot; -----','After mutating the original mutable map  ----- &quot; ); System.out.println ( &quot;weekendWorkerSupposedlyUnmodifiable = &quot; + weekendWorkerSupposedlyUnmodifiable ); System.out.println ( &quot;trueCopy = &quot; + trueCopy ); </code></pre> <p>','When run:</p> <ul> <li>','We see that the supposedly unmodifiable is indeed modifiable <em>indirectly</em>  by modifying the original map on which the unmodifiable map is a view.</li> <li>In contrast  the <code>copyOf</code>','method produces a true copy  showing Bob as working the entire weekend even after assigning Alice.</li> </ul> <pre class= lang-none prettyprint-override ><code>weekendWorkerMutable = {SATURDAY=Person[name=Bob]  SUNDAY=Person[name=Bob]} weekendWorkerSupposedlyUnmodifiable = {SATURDAY=Person[name=Bob]  SUNDAY=Person[name=Bob]} trueCopy = {SUNDAY=Person[name=Bob]  SATURDAY=Person[name=Bob]}',-----,'After mutating the original mutable map  -----  weekendWorkerSupposedlyUnmodifiable = {SATURDAY=Person[name=Alice]  SUNDAY=Person[name=Bob]} trueCopy = {SUNDAY=Person[name=Bob]  SATURDAY=Person[name=Bob]}','</code></pre> <h2>Notes</h2> <p>Notice that the iterator order of maps produced via <code>Map.of</code> are <em>not</em> guaranteed.','The entries have an arbitrary order.','Do not write code based on the order seen  as the documentation warns the order is subject to change.</p> <p>','Note that all of these <code>Map.of…</code> methods return a <a href= https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Map.html  rel= noreferrer ><code>Map</code></a> of <strong>an unspecified class</strong>.','The underlying concrete class may even vary from one version of Java to another.','This anonymity enables Java to choose from various implementations  whatever optimally fits your particular data.','For example  if your keys come from an <a href= ','https://docs.oracle.com/javase/tutorial/java/javaOO/enum.html  rel= noreferrer >enum</a>  Java might use an <a href= https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/EnumMap.html  rel= noreferrer ><code>EnumMap</code></a>','under the covers.</p>','<p><strong>JAVA 8</strong></p>','<p>In plain java 8 you also have the possibility of using <code>Streams/Collectors</code> to do the job.</p>','Map&lt;String  String&gt; myMap = Stream.of(          new SimpleEntry&lt;&gt;( key1    value1 )           new SimpleEntry&lt;&gt;( key2    value2 )           new SimpleEntry&lt;&gt;( key3    value3 ))         .collect(toMap(SimpleEntry::getKey  SimpleEntry::getValue)); </code></pre>','<p>This has the advantage of not creating an Anonymous class.</p>','<p>Note that the imports are:</p>','<pre><code>import static java.util.stream.Collectors.toMap; import java.util.AbstractMap.SimpleEntry; </code></pre>','<p>Of course  as noted in other answers  in java 9 onwards you have simpler ways of doing the same.</p>','<p>I would like to give a brief warning to Johnny Willer s answer.</p> <p><code>Collectors.toMap</code> relies on <code>Map.merge</code> and <strong>does not expect null values</strong>  so it will throw a <code>NullPointerException</code>','as it was described in this bug report: <a href= https://bugs.openjdk.java.net/browse/JDK-8148463  rel= noreferrer >',https://bugs.openjdk.java.net/browse/JDK-8148463</a></p>,<p>,'Also  if a key appears several times  the default <code>Collectors.toMap</code> will throw an <code>IllegalStateException</code>.</p> <p>','An alternative way to get a map with null values using a builder syntax on Java 8 is writing a custom collector <strong>backed by a HashMap</strong>','(because it does allow null values):</p> <pre><code>Map&lt;String  String&gt; myMap = Stream.of(          new SimpleEntry&lt;&gt;(&quot;key1&quot;  &quot;value1&quot;)           new SimpleEntry&lt;&gt;(&quot;key2&quot;  (String) null)           new SimpleEntry&lt;&gt;(&quot;key3&quot;  &quot;value3&quot;)           new SimpleEntry&lt;&gt;(&quot;key1&quot;  &quot;value1updated&quot;))         .collect(HashMap::new                  (map  entry) -&gt; map.put(entry.getKey()                                          entry.getValue())                  HashMap::putAll); </code></pre>','<p>We use a simple utility class to initialize Maps in a fluent way:</p> <pre><code>','Map&lt;String  String&gt; map = MapInit     .init(&quot;key1&quot;  &quot;value1&quot;)     .put(&quot;key2&quot;  &quot;value2&quot;)     .put(&quot;key3&quot;  &quot;value3&quot;)     .getMap(); </code></pre> <p>','The utility class isn t limited neither regarding the type of keys and values nor regarding the amount of entries nor regarding the type of the resulting Map.</p> <p>','The utility class looks like the following:</p> <pre><code>public class MapInit&lt;K  V  T extends Map&lt;K  V&gt;&gt; {     private final T map;','private MapInit(final T map) {         this.map = map;     }','public T getMap() {         return this.map;     }','public static &lt;K  V&gt; MapInit&lt;K  V  HashMap&lt;K  V&gt;&gt; init(final K key  final V value) {         return init(HashMap::new  key  value);     }','public static &lt;K  V  T extends Map&lt;K  V&gt;&gt; MapInit&lt;K  V  T&gt; init(final Supplier&lt;T&gt; mapSupplier  final K key  final V value) {         return new MapInit&lt;&gt;(mapSupplier.get()) //                 .put(key  value);     }','public MapInit&lt;K  V  T&gt; put(final K key  final V value) {         this.map.put(key  value);         return this;     } } </code></pre>'}
@attribute sent_avg_cosine numeric
@attribute sent_max_cosine numeric
@attribute sent_total_tokens numeric
@attribute sent_start_islower {False,True}
@attribute question_views numeric
@attribute question_answer_count numeric
@attribute question_size numeric
@attribute answer_contains_code {True}
@attribute answer_age numeric
@attribute answer_size numeric
@attribute answer_score numeric
@attribute isMeaningful string

@data
'-LRB- NN VBN IN -LRB- DT NN SYM `` ADD    NN NN    -LRB- NN NFP NN -RRB- NN NFP NN -RRB-','<p>Based on <a href= http://docs.oracle.com/javase/8/docs/api/java/util/stream/Collectors.html#toMap-java.util.function.Function-java.util.function.Function-  rel= noreferrer ><code>Collectors</code> documentation</a>',0.214657,0.389939,23,False,773068,23,226,True,3865,60,1522,?
'PRP VBZ RB JJ IN NFP NN -RRB-','it s as simple as:</p>',0.563114,0.701755,7,True,773068,23,226,True,3865,60,1522,?
'-LRB- NN NN -RRB-',<pre><code>,0.084822,0.272072,4,False,773068,23,226,True,3865,60,1522,?
'NNP : NNP , NNP : NN SYM NNP -RRB- NNP NNP -LRB- NNP NNP , NNP -LRB- -RRB- -RRB- -RRB- : -LRB- NNP FW -RRB-','Map&lt;String  Choice&gt; result =     choices.stream().collect(Collectors.toMap(Choice::getName                                                Function.identity())); </code></pre>',0.169757,0.418792,26,False,773068,23,226,True,3865,60,1522,?
'NFP -RRB- IN PRP$ NN VBZ -LRB- JJ -RRB- RB SYM JJ -RRB- VBN TO VB JJ IN DT NNS IN DT NN , PRP MD VB PRP IN DT -LRB- NN -RRB-','<p>If your key is <strong>NOT</strong> guaranteed to be unique for all elements in the list  you should convert it to a <code>',0.653061,0.788469,33,False,773068,23,226,True,3603,85,368,?
'NNP : NNP , NNP : NNP : NNP SYM NN -RRB- RB IN DT -LRB- NN -RRB-','Map&lt;String  List&lt;Choice&gt;&gt;</code> instead of a <code>',0.510569,0.603756,18,False,773068,23,226,True,3603,85,368,?
'NNP : NNP , NNP ADD','Map&lt;String  Choice&gt;</code></p>',0.292102,0.444099,6,False,773068,23,226,True,3603,85,368,?
'-LRB- NN NN -RRB- NNP : NNP , NNP : NNP : NNP : NN SYM NNP -RRB- FW NNP FW -RRB- -RRB- : -LRB- ADD FW -RRB-','<pre><code>Map&lt;String  List&lt;Choice&gt;&gt; result =  choices.stream().collect(Collectors.groupingBy(Choice::getName)); </code></pre>',0.187519,0.397211,28,False,773068,23,226,True,3603,85,368,?
'-LRB- NN NN -LRB- NN -LRB- -RRB- NFP NN -RRB- IN DT NN CC -LRB- NN -RRB- NN -LRB- , NN -RRB-','<p>Use <code>getName()</code> as the key and <code>Choice</code>',0.303289,0.435095,22,False,773068,23,226,True,3414,63,182,?
'PRP IN DT NN IN DT NN NN -RRB-','itself as the value of the map:</p>',0.732103,0.857823,9,True,773068,23,226,True,3414,63,182,?
'-LRB- NN NN -RRB-',<pre><code>,0.084822,0.272072,4,False,773068,23,226,True,3414,63,182,?
'NNP : NNP , NNP : NN SYM NNP -RRB- FW NNP -LRB- NNP NNP , NNP HYPH NNP : NNP -RRB- -RRB- : -LRB- NNP NN -RRB-','Map&lt;String  Choice&gt; result =     choices.stream().collect(Collectors.toMap(Choice::getName  c -&gt; c)); </code></pre>',0.271755,0.495922,28,False,773068,23,226,True,3414,63,182,?
'-LRB- NN JJS IN DT NNS VBN VBP DT NN WRB DT -LRB- JJ -RRB- NN VBZ NN NNS SYM JJ -RRB-','<p>Most of the answers listed miss a case when the <strong>list has duplicate items</strong>.',0.605034,0.682659,22,False,773068,23,226,True,2148,109,37,?
'IN DT NN , PRP$ NN MD VB -LRB- NN -RRB- NNP -LRB- , NN -RRB-','In that case  their answer will throw <code>IllegalStateException</code>.',0.593197,0.660104,16,False,773068,23,226,True,2148,109,37,?
'VB IN DT JJ NN -LRB- JJ -RRB- TO VB NN NNS , JJ -RRB-','Refer to the below code <strong>to handle list duplicates</strong>',0.574374,0.675574,15,False,773068,23,226,True,2148,109,37,?
'RB RB NNP -RRB- -LRB- NNP NNP NNP : NNP , NNP : FW FW : NNP : NNS -RRB- -LRB- NN NN -LRB- -RRB- NN -LRB- NN -LRB- NN SYM NN , NN HYPH NN : NN , -LRB- FW , NN -RRB- , NN : NN -RRB- -RRB- : NN , NN NN -RRB-','as well:</p> <pre><code>public Map&lt;String  Choice&gt; convertListToMap(List&lt;Choice&gt; choices) {     return choices.stream()         .collect(Collectors.toMap(Choice::getName  choice -&gt; choice              (oldValue  newValue) -&gt; newValue));   } </code></pre>',0.26545,0.483912,56,True,773068,23,226,True,2148,109,37,?
'-LRB- NN RB VBZ DT NN IN NN PRP VBP RB VB TO VB NNP NN -LRB- -RRB- . -RRB-','<p>Here s another one in case you don t want to use Collectors.toMap()</p>',0.560206,0.705319,18,False,773068,23,226,True,2997,79,32,?
'-LRB- NN -RRB- -LRB- NN -RRB-',<pre><code>,0.084822,0.272072,6,False,773068,23,226,True,2997,79,32,?
'NNP : NNP , NNP : NN SYM NN -LRB- -RRB- NN -LRB- NNP : NNP , NNP : : : JJ , -LRB- NN , NN -RRB- HYPH NN : NN -LRB- NNP -LRB- -RRB- , NN -RRB- , -LRB- NN , CD -RRB- HYPH NN : NN -RRB- : -LRB- NN NN -RRB-','Map&lt;String  Choice&gt; result =    choices.stream().collect(HashMap&lt;String  Choice&gt;::new                              (m  c) -&gt; m.put(c.getName()  c)                             (m  u) -&gt; {}); </code></pre>',0.204212,0.450497,55,False,773068,23,226,True,2997,79,32,?
'-LRB- NN -RRB- -LRB- NN -RRB-','<blockquote>   <p>',0.148422,0.365443,6,False,773068,23,226,True,2645,55,25,?
'CD JJR NN IN JJ NN .','One more option in simple way</p>',0.593675,0.696617,7,False,773068,23,226,True,2645,55,25,?
'-LRB- NN -RRB-',</blockquote>,0.103402,0.274135,3,False,773068,23,226,True,2645,55,25,?
'-LRB- NN -RRB- -LRB- NN -RRB- NNP : NNP , NNP : NN SYM JJ NNP : NNP : -LRB- -RRB- : NNP NNP : FW -LRB- NNP -LRB- -RRB- , NNP -RRB- -RRB- : -LRB- NNP FW -RRB-','<pre><code>Map&lt;String Choice&gt; map = new HashMap&lt;&gt;(); choices.forEach(e-&gt;map.put(e.getName() e)); </code></pre>',0.183994,0.414214,39,False,773068,23,226,True,2645,55,25,?
'NN IN NN , IN PRP VBP VB NN NNS IN NN -RRB-','<p>For example  if you want convert object fields to map:</p>',0.527244,0.676646,13,False,773068,23,226,True,2448,154,23,?
'-LRB- NN NN NN : -LRB- NN -RRB-','<p>Example object:</p>',0.133794,0.354183,8,False,773068,23,226,True,2448,154,23,?
'-LRB- NN -RRB- -LRB- NN NN JJ NN NN : JJ NN NN :','<pre><code>class Item{         private String code;         private String name;',0.431223,0.565758,14,False,773068,23,226,True,2448,154,23,?
'JJ NN -LRB- NN NN , NN NN -RRB- NFP DT NN SYM NN : DT NN SYM NN : NFP','public Item(String code  String name) {             this.code = code;             this.name = name;         }',0.341331,0.535544,21,True,773068,23,226,True,2448,154,23,?
', NNS CC NNS : NFP NN NN -RRB-','//getters and setters     } </code></pre>',0.317455,0.466276,9,False,773068,23,226,True,2448,154,23,?
'-LRB- NN CC NN VB NN IN NNP . -RRB-','<p>And operation convert List To Map:</p>',0.248459,0.389402,10,False,773068,23,226,True,2448,154,23,?
'-LRB- NN -RRB- -LRB- NN -RRB- : : NNP : NN SYM JJ NN : NN : -LRB- -RRB- : NN -LRB- JJ NN -LRB- `` FW    , `` NN    -RRB- -RRB- : NN -LRB- JJ NN -LRB- `` FW    , `` NN    -RRB- -RRB- :','<pre><code>List&lt;Item&gt; list = new ArrayList&lt;&gt;(); list.add(new Item( code1    name1 )); list.add(new Item( code2    name2 ));',0.194771,0.39754,50,False,773068,23,226,True,2448,154,23,?
'NNP : NNP , NNP : NN SYM NN -LRB- -RRB- NN -LRB- NN -LRB- NN NN , NN : : NN -RRB- -RRB- : NFP NN NN -RRB-','Map&lt;String String&gt; map = list.stream()      .collect(Collectors.toMap(Item::getCode  Item::getName)); </code></pre>',0.164342,0.413056,29,False,773068,23,226,True,2448,154,23,?
'NFP -RRB- IN PRP VBP RB VB VBG JJ NN NNS , NNP POS -LRB- DT NN SYM `` ADD   ','<p>If you don t mind using 3rd party libraries  AOL s <a href= https://github.com/aol/cyclops-react >cyclops-react</a>',0.422597,0.553597,19,False,773068,23,226,True,3052,101,13,?
'NN -LRB- NN PRP VBP DT NN -RRB- VBZ NNS IN DT -LRB- DT NN SYM   ','lib (disclosure I am a contributor) has extensions for all <a href= ',0.546044,0.676563,17,True,773068,23,226,True,3052,101,13,?
'NNP    -RRB- NNP NNP , NN NNS , VBG -LRB- DT NN SYM `` ADD    -RRB- NNP CC -LRB- DT NN SYM `` ADD    ADD','https://medium.com/@johnmcclean/extending-jdk-8-collections-8ae8d43dd75e#.j5lxtrqze >JDK Collection</a> types  including <a href= http://static.javadoc.io/com.aol.simplereact/cyclops-react/1.0.0-RC1/com/aol/cyclops/data/collections/extensions/standard/ListX.html >List</a> and <a href= http://static.javadoc.io/com.aol.simplereact/cyclops-react/1.0.0-RC1/com/aol/cyclops/data/collections/extensions/standard/MapX.html >Map</a>.</p>',0.172565,0.348109,28,True,773068,23,226,True,3052,101,13,?
'-LRB- NN -RRB- -LRB- NN -RRB-',<pre><code>,0.084822,0.272072,6,False,773068,23,226,True,3052,101,13,?
'NNP : NNP : NNS : NNP : NNP , NNP : NN SYM NNP NNP NNP : NNP -RRB- , FW NN : NN -RRB- : -LRB- NNP NN -RRB-','ListX&lt;Choices&gt; choices; Map&lt;String  Choice&gt; map = choices.toMap(c-&gt; c.getName() c-&gt;c); </code></pre>',0.293144,0.476725,31,False,773068,23,226,True,3052,101,13,?
'NFP -RRB- PRP MD VB DT NN IN DT NNS VBG DT NN CC RB VB PRP IN DT NN NN -RRB-','<p>You can create a Stream of the indices using an IntStream and then convert them to a Map :</p>',0.642788,0.7183,22,False,773068,23,226,True,2582,69,12,?
'-LRB- NN -RRB- -LRB- NN -RRB- NNP : NN , NNP : NN SYM ADD NN -LRB- -RRB- -RRB- . VBN -LRB- -RRB- NN -LRB- NN -LRB- NN HYPH NN : FW , NN HYPH NN : ADD LS -RRB- -RRB- -RRB- : NFP NN NN -RRB-','<pre><code>Map&lt;Integer Item&gt; map =  IntStream.range(0 items.size())          .boxed()          .collect(Collectors.toMap (i -&gt; i  i -&gt; items.get(i))); </code></pre>',0.093354,0.37029,47,False,773068,23,226,True,2582,69,12,?
'NN PRP VBD VBG TO VB DT CC VBD IN , VBG DT NNS RB , WRB VBG -LRB- NN -RRB- NNS . NN -LRB- -RRB- -LRB- NN -RRB- IN DT NN IN DT NN , RB PRP VBD NNS IN VBG DT JJ NN IN -LRB- ADD NN -RRB- TO RB VB IN IN NN NNS . NN','<p>I was trying to do this and found that  using the answers above  when using <code>Functions.identity()</code> for the key to the Map  then I had issues with using a local method like <code>this::localMethodName</code> to actually work because of typing issues.</p>',0.720835,0.796992,59,False,773068,23,226,True,3100,230,11,?
'-LRB- NN -LRB- NN NN -LRB- -RRB- NFP NN -RRB-',<p><code>Functions.identity()</code>,0.065124,0.246428,10,False,773068,23,226,True,3100,230,11,?
'RB VBZ NN IN DT NN IN DT NN IN DT NN MD RB VB IN VBG -LRB- NN -RRB- NN -LRB- , NN -RRB- CC VBG DT NN IN -LRB- NN NFP NN -RRB-','actually does something to the typing in this case so the method would only work by returning <code>Object</code> and accepting a param of <code>Object</code></p>',0.729626,0.794518,35,True,773068,23,226,True,3100,230,11,?
'NN TO VB DT , PRP VBD RP VBG -LRB- NN NNS NN -LRB- -RRB- , NN -RRB- CC VBG -LRB- NN NN -RRB- RB NFP','<p>To solve this  I ended up ditching <code>Functions.identity()</code> and using <code>s-&gt;s</code> instead.</p>',0.301759,0.433314,26,False,773068,23,226,True,3100,230,11,?
'NN RB PRP$ NN , IN PRP$ NN TO VB DT NNS IN DT NN , CC IN DT NN VB DT NN IN DT NN IN DT NN IN DT NN CC RB VB DT NN IN DT NN NN CC VB DT NN IN NNS , VBZ IN : -LRB- NN -RRB-','<p>So my code  in my case to list all directories inside a directory  and for each one use the name of the directory as the key to the map and then call a method with the directory name and return a collection of items  looks like:</p>',0.836147,0.919655,54,False,773068,23,226,True,3100,230,11,?
'-LRB- NN NN -RRB-',<pre><code>,0.084822,0.272072,4,False,773068,23,226,True,3100,230,11,?
'NNP : NNP , NNP : NNP : NN : NNS SYM NN NN -LRB- NN : NN -RRB- -RRB- NN -LRB- NN : : NN -RRB- ADD -LRB- NN NN FW , DT NN -RRB- -RRB- : NFP NN NN -RRB-','Map&lt;String  Collection&lt;ItemType&gt;&gt; items = Arrays.stream(itemFilesDir.listFiles(File::isDirectory)) .map(File::getName) .collect(Collectors.toMap(s-&gt;s  this::retrieveBrandItems)); </code></pre>',0.139181,0.402928,42,False,773068,23,226,True,3100,230,11,?
'-LRB- LS -RRB- DT NNS -LRB- NN -RRB- -LRB- NN -RRB-','<h1>All Versions</h1> <p>',0.111041,0.319062,11,False,1972666,22,112,True,4729,669,2157,?
'IN NN PRP VBP TO VB RB DT JJ NN :','In case you happen to need just a single entry:',0.659495,0.755528,11,False,1972666,22,112,True,4729,669,2157,?
'EX VBZ -LRB- NN -RRB- NNS .','There is <code>Collections.',0.501874,0.582992,7,False,1972666,22,112,True,4729,669,2157,?
'NNP NN : NN : , NN : NN : -RRB- , NN -RRB- -RRB- -LRB- LS -RRB- IN NNP NN CD CC JJR NN -RRB- -LRB- NN -RRB-','singletonMap(&quot;key&quot;  &quot;value&quot;)</code>.</p> <h1>For Java Version 9 or higher:</h1> <p>',0.188947,0.372812,29,True,1972666,22,112,True,4729,669,2157,?
'UH , DT VBZ JJ RB .','Yes  this is possible now.',0.697281,0.832498,7,False,1972666,22,112,True,4729,669,2157,?
'IN NNP CD DT NN IN NN NNS VBP VBN VBN WDT VBP DT NN IN NNS SYM -LRB- NN -RRB- -LRB- NN , DT VBZ IN RB IN CD NNS : NNP : NNP , NNP : NN SYM NN -LRB- NN : NN : , NN : NN : , NN : NN : , NN : NN : -RRB- :','In Java 9 a couple of factory methods have been added that simplify the creation of maps :</p> <pre><code>// this works for up to 10 elements: Map&lt;String  String&gt; test1 = Map.of(     &quot;a&quot;  &quot;b&quot;      &quot;c&quot;  &quot;d&quot; );',0.484139,0.620875,63,False,1972666,22,112,True,4729,669,2157,?
'NFP DT VBZ IN DT NN IN NNS : VB JJ NN .','// this works for any number of elements: import static java.util.',0.763145,0.863827,13,False,1972666,22,112,True,4729,669,2157,?
'NNP : NNP : NNP , NNP : NN SYM NN -LRB- NN -LRB- NN : NN : , NN : NN : -RRB- , NN -LRB- NN : NN : , NN : NN : -RRB- -RRB- : ADD NN -RRB- -LRB- NN -RRB-','Map.entry;     Map&lt;String  String&gt; test2 = Map.ofEntries(     entry(&quot;a&quot;  &quot;b&quot;)      entry(&quot;c&quot;  &quot;d&quot;) ); </code></pre> <p>',0.195313,0.405904,45,False,1972666,22,112,True,4729,669,2157,?
'IN DT NN IN DT -LRB- NN NN -RRB- CC -LRB- NN NN -RRB- MD VB DT JJ , RB IN JJ NNS IN VBG DT NN .','In the example above both <code>test</code> and <code>test2</code> will be the same  just with different ways of expressing the Map.',0.69279,0.779963,28,False,1972666,22,112,True,4729,669,2157,?
'DT -LRB- NN NNP SYM NN -RRB-','The <code>Map.of</code>',0.208799,0.337489,7,False,1972666,22,112,True,4729,669,2157,?
'NN VBZ VBN IN IN IN CD NNS IN DT NN , IN DT -LRB- NN -RRB- NNP -LRB- , NN -RRB-','method is defined for up to ten elements in the map  while the <code>Map.ofEntries</code>',0.750519,0.835115,22,True,1972666,22,112,True,4729,669,2157,?
'NN MD VB DT JJ NN . -LRB- NN -RRB-','method will have no such limit.</p> <p>',0.406005,0.53988,10,True,1972666,22,112,True,4729,669,2157,?
'VB IN IN DT NN DT VBG NN MD VB DT JJ NN .','Note that in this case the resulting map will be an immutable map.',0.797897,0.900113,14,False,1972666,22,112,True,4729,669,2157,?
'IN PRP VBP DT NN TO VB JJ , PRP MD VB PRP RB , FW VBG -LRB- NN NN SYM JJ NNP : NN : -LRB- NN IN -LRB- NN : NN : , NN : NN : -RRB- -RRB- NFP NN NFP','If you want the map to be mutable  you could copy it again  e.g. using <code>mutableMap = new HashMap&lt;&gt;(Map.of(&quot;a&quot;  &quot;b&quot;));</code>.',0.692014,0.791761,44,False,1972666,22,112,True,4729,669,2157,?
'RB VB IN IN DT NN NNS CC NNS MD RB VB -LRB- NN , NN -RRB- -LRB- NN -RRB-','Also note that in this case keys and values must not be <code>null</code>.</p> <p>',0.541223,0.682661,20,False,1972666,22,112,True,4729,669,2157,?
'-LRB- VB RB -LRB- DT NN SYM `` ADD    NN `` NN    SYM CD -RRB- CC DT -LRB- DT NN SYM `` ADD    NN `` NN    -RRB-','(See also <a href= http://openjdk.java.net/jeps/269  rel= noreferrer >JEP 269</a> and the <a href= https://docs.oracle.com/javase/9/docs/api/java/util/Map.html  rel= noreferrer >',0.223224,0.386727,31,False,1972666,22,112,True,4729,669,2157,?
'NNP NNP -RRB- -RRB- -LRB- LS -RRB- IN RB IN NNP NNP CD -RRB- -LRB- NN -RRB-','Javadoc</a>)</p> <h1>For up to Java Version 8:</h1> <p>',0.21852,0.367967,17,False,1972666,22,112,True,4729,669,2157,?
'UH , PRP MD VB TO VB PDT DT NNS RB .','No  you will have to add all the elements manually.',0.750379,0.895955,12,False,1972666,22,112,True,4729,669,2157,?
'PRP MD VB DT NN IN DT JJ NN TO VB DT NN DT JJ NN JJR NN -RRB- -LRB- NN NN -RRB- : NN , NN : NN SYM JJ NNP : NN , NN : -LRB- -RRB- NFP VB -LRB- NN : NN : , NN : NN : -RRB- : VB -LRB- NN : NN : , NN : NN : -RRB- : NN : ADD NN -RRB- -LRB- NN','You can use an initializer in an anonymous subclass to make the syntax a little bit shorter:</p> <pre><code>Map&lt;String  String&gt; myMap = new HashMap&lt;String  String&gt;() {{     put(&quot;a&quot;  &quot;b&quot;);     put(&quot;c&quot;  &quot;d&quot;); }}; </code></pre> <p>',0.469593,0.576774,73,False,1972666,22,112,True,4729,669,2157,?
'RB , DT JJ NN MD VB JJ NN IN DT NNS .','However  the anonymous subclass might introduce unwanted behavior in some cases.',0.797403,0.905812,13,False,1972666,22,112,True,4729,669,2157,?
'DT VBZ IN NN NN -RRB- -LRB- FW -RRB- -LRB- FW -RRB-','This includes for example:</p> <ul> <li>',0.205911,0.375051,12,False,1972666,22,112,True,4729,669,2157,?
'PRP VBZ DT JJ NN WDT VBZ NN NN , NN NN NN CC NN HYPH NN -LRB- NNP -RRB- -LRB- NNP -RRB-','It generates an additional class which increases memory consumption  disk space consumption and startup-time</li> <li>',0.660162,0.754206,23,False,1972666,22,112,True,4729,669,2157,?
'IN NN IN DT JJ NN :','In case of a non-static method:',0.61021,0.788646,7,False,1972666,22,112,True,4729,669,2157,?
'PRP VBZ DT NN IN DT NN DT NN NN VBD VBN IN .','It holds a reference to the object the creating method was called upon.',0.801492,0.913867,14,False,1972666,22,112,True,4729,669,2157,?
'DT VBZ DT NN IN DT JJ NN MD RB VB NN VBN IN DT VBN NN NN VBZ RB VBN , RB VBG JJ NN -LRB- NNP -RRB- NNP -RRB- -LRB- NN','That means the object of the outer class cannot be garbage collected while the created map object is still referenced  thus blocking additional memory</li> </ul> <p>',0.707563,0.773278,32,False,1972666,22,112,True,4729,669,2157,?
'VBG DT NN IN NN MD RB VB PRP TO VB DT NN IN DT NN , CC VBZ JJ NN HYPH NNS , NN -LRB- NN -LRB- NN -RRB- NNP : NN , NNP : NN SYM NN -RRB- :','Using a function for initialization will also enable you to generate a map in an initializer  but avoids nasty side-effects:</p> <pre><code>Map&lt;String  String&gt; myMap = createMap();',0.727977,0.841474,41,False,1972666,22,112,True,4729,669,2157,?
'JJ NN NNP : NNP , NNP : NNP -LRB- -RRB- -LRB- NNP : NNP , NNP : NNP SYM JJ NNP : NNP , NNP : -LRB- -RRB- : NNP -LRB- NN : NN : , NN : NNP : -RRB- : NNP -LRB- NN : NN : , NN : NN : -RRB- : NN NN : SYM ADD NN -RRB-','private static Map&lt;String  String&gt; createMap() {     Map&lt;String String&gt; myMap = new HashMap&lt;String String&gt;();     myMap.put(&quot;a&quot;  &quot;b&quot;);     myMap.put(&quot;c&quot;  &quot;d&quot;);     return myMap; } </code></pre>',0.249705,0.434173,63,True,1972666,22,112,True,4729,669,2157,?
'NFP -RRB- DT VBZ CD NN -LRB- NN -LRB- NN NN -RRB- NNP : NNP , NNP : NN SYM JJ NNP : NNP , NNP : -LRB- -RRB- , VBN -LRB- NN : NN : , NN : NN : -RRB- : NN : ADD NN -RRB- -LRB- NN -RRB-','<p>This is one way.</p> <pre><code>Map&lt;String  String&gt; h = new HashMap&lt;String  String&gt;() {{     put(&quot;a&quot; &quot;b&quot;); }}; </code></pre> <p>',0.253663,0.478673,51,False,1972666,22,112,True,4729,175,1164,?
'RB , PRP MD VB JJ CC VB JJ IN PRP VBP DT JJ NN -LRB- PRP VBZ DT JJ NN WDT VBZ IN NNP -RRB- .','However  you should be careful and make sure that you understand the above code (it creates a new class that inherits from HashMap).',0.813039,0.901766,27,False,1972666,22,112,True,4729,175,1164,?
'RB , PRP MD VB JJR RB : -LRB- DT NN SYM `` ADD    NN SYM `` NN    ADD , CC RB VB NNP -LRB- NN -LRB- NN -RRB-','Therefore  you should read more here: <a href= http://www.c2.com/cgi/wiki?DoubleBraceInitialization  rel= noreferrer >http://www.c2.com/cgi/wiki?DoubleBraceInitialization</a>   or simply use Guava:</p> <pre><code>',0.375553,0.489105,31,False,1972666,22,112,True,4729,175,1164,?
'NNP : NNP , NNP : NN SYM JJ NNP -LRB- NN : NN : , CD , NN : NN : , CD , NN : NN : , CD -RRB- : NFP NN NN -RRB- -LRB- NN NN -RRB- VBZ IN RB IN CD NNS .','Map&lt;String  Integer&gt; left = ImmutableMap.of(&quot;a&quot;  1  &quot;b&quot;  2  &quot;c&quot;  3); </code></pre> <p><code>ImmutableMap.of</code> works for up to 5 entries.',0.353807,0.510948,48,False,1972666,22,112,True,4729,175,1164,?
'RB , VB DT NN : -LRB- DT NN SYM `` ADD    NN `` NN    ADD','Otherwise  use the builder: <a href= https://github.com/google/guava/blob/master/guava/src/com/google/common/collect/ImmutableMap.java  rel= noreferrer >source</a>.</p>',0.172118,0.324297,18,False,1972666,22,112,True,4729,175,1164,?
'NFP -RRB- IN PRP VBP JJ NN NNS , PRP MD VB -LRB- DT NN SYM `` ADD    NN `` NN    -RRB-','<p>If you allow 3rd party libs  you can use <a href= https://code.google.com/p/guava-libraries/  rel= noreferrer >',0.424538,0.590869,24,False,1972666,22,112,True,4023,283,371,?
'NNP -LRB- DT NN SYM `` ADD    NN `` NN    -RRB- JJ NNP    TO VB JJ HYPH IN NN NN -RRB-','Guava</a> s <a href= https://google.github.io/guava/releases/snapshot/api/docs/com/google/common/collect/ImmutableMap.html  rel= noreferrer >ImmutableMap</a> to achieve literal-like brevity:</p>',0.191331,0.343719,24,False,1972666,22,112,True,4023,283,371,?
'-LRB- NN -RRB- -LRB- NN -RRB- NNP : NNP , NNP : NN SYM JJ NNP -LRB- `` NNP    , `` NNP    , `` FW    , `` NNP    -RRB- : SYM NN NFP NN -RRB-','<pre><code>Map&lt;String  String&gt; test = ImmutableMap.of( k1    v1    k2    v2 ); </code></pre>',0.312908,0.5453,39,False,1972666,22,112,True,4023,283,371,?
'NFP -RRB- DT VBZ IN RP IN -LRB- DT NN SYM   ','<p>This works for up to <a href= ',0.508491,0.645026,12,False,1972666,22,112,True,4023,283,371,?
'ADD `` NN SYM `` NN    -RRB- CD NN , NN NNS , NN , RB PRP MD VB PRP$ -LRB- DT NN SYM   ','https://google.github.io/guava/releases/snapshot/api/docs/com/google/common/collect/ImmutableMap.html#of-K-V-K-V-K-V-K-V-K-V-  rel= noreferrer >5 key/value pairs</a>  otherwise you can use its <a href= ',0.615712,0.749353,26,True,1972666,22,112,True,4023,283,371,?
'ADD `` NN NN `` FW -RRB-','https://google.github.io/guava/releases/snapshot/api/docs/com/google/common/collect/ImmutableMap.html#builder--  rel= noreferrer >builder</a>:</p>',0.082406,0.299729,7,True,1972666,22,112,True,4023,283,371,?
'-LRB- NN NN -RRB- NNP : NNP , NNP : NN SYM NNP : NN , NN : NN -LRB- -RRB- . VB -LRB- `` NNP    , `` NN CD    -RRB- . VBN -LRB- `` NNP    , `` NN CD    -RRB- , . NN -LRB- -RRB- : NFP NNP NN -RRB-','<pre><code>Map&lt;String  String&gt; test = ImmutableMap.&lt;String  String&gt;builder()     .put( k1    v1 )     .put( k2    v2 )     ...     .build(); </code></pre>',0.225002,0.422575,55,False,1972666,22,112,True,4023,283,371,?
'-LRB- NN -RRB-',<p><br/></p>,0.084822,0.272072,3,False,1972666,22,112,True,4023,283,371,?
'-LRB- NN -RRB- -LRB- SYM VB IN NNP POS -LRB- DT NN SYM `` ADD    NN `` NN    -RRB- JJ NN NN VBZ IN NNP POS -LRB- DT NN SYM `` ADD    NN `` NN    -RRB- NN NN NN -LRB- RBS RB PRP VBZ JJ CC VBZ RB VB JJ NNS , NNS -RRB- -LRB- NNP -RRB- -LRB- LS -RRB- IN JJR NN , VB NNP POS NN NN NN IN PRP$ -LRB- DT NN SYM   ','<ul> <li>note that Guava s <a href= https://google.github.io/guava/releases/snapshot/api/docs/com/google/common/collect/ImmutableMap.html  rel= noreferrer >ImmutableMap</a> implementation differs from Java s <a href= https://docs.oracle.com/javase/8/docs/api/java/util/HashMap.html  rel= noreferrer >HashMap</a> implementation (most notably it is immutable and does not permit null keys/values)</li> <li>for more info  see Guava s user guide article on its <a href= ',0.351254,0.474499,78,False,1972666,22,112,True,4023,283,371,?
'ADD `` NN    NN `` -RRB- JJ NN FW FW -RRB- -LRB- FW -RRB-','https://github.com/google/guava/wiki/ImmutableCollectionsExplained  rel= noreferrer >immutable collection types</a></li> </ul>',0.129715,0.278411,15,True,1972666,22,112,True,4023,283,371,?
'NN EX VBZ DT JJ NN TO VB DT ,','<p>There is no direct way to do this -',0.589535,0.757271,10,False,1972666,22,112,True,4729,557,122,?
'IN IN CD , NNP VBZ DT NN NNS -LRB- CC , PRP VBP PRP VBD VBN IN NNP CD , CC VBD RB VB PRP -RRB- -RRB- -LRB- NN','As of 2021  Java has no Map literals (yet - I think they were proposed for Java 8  but didn t make it).</p> <p>',0.673766,0.770228,29,False,1972666,22,112,True,4729,557,122,?
'DT NNS IN DT NN -RRB- -LRB- NN -LRB- NN -RRB-','Some people like this:</p> <pre><code>',0.240059,0.347871,11,False,1972666,22,112,True,4729,557,122,?
'NNP : NNP , NNP : NN SYM JJ NNP : NN , NNP : -LRB- -RRB- : VB -LRB- NN : NN : , NN : NN : -RRB- : VB -LRB- NN : NN : , NN : NN : -RRB- SYM : -LRB- NN NN -RRB- -LRB- NN -RRB-','Map&lt;String String&gt; test = new HashMap&lt;String  String&gt;(){{        put(&quot;test&quot; &quot;test&quot;); put(&quot;test&quot; &quot;test&quot;);}}; </code></pre> <p>',0.248,0.452306,52,False,1972666,22,112,True,4729,557,122,?
'DT VBZ DT JJ NN IN NNP , WP$ NN NN VBZ DT NNS .','This creates an anonymous subclass of HashMap  whose instance initializer puts these values.',0.79777,0.92251,15,False,1972666,22,112,True,4729,557,122,?
'-LRB- IN DT NN , DT NN MD RB VB RB DT JJ NN , PRP$ JJ NN MD VB DT JJ NN .','(By the way  a map can t contain twice the same value  your second put will overwrite the first one.',0.78557,0.870894,23,False,1972666,22,112,True,4729,557,122,?
'PRP MD VB JJ NNS IN DT JJ NNS . -RRB- . -LRB- NN -RRB-','I ll use different values for the next examples.)</p> <p>',0.485825,0.608433,14,False,1972666,22,112,True,4729,557,122,?
'DT JJ NN MD VB DT -LRB- IN DT JJ NN -RRB- : SYM NN -LRB- NN -LRB- NN -RRB- NNP : NNP , NNP : NN SYM JJ NNP : NNP , NNP : -LRB- -RRB- : NN VBN -LRB- NN : NN : , NN : NN : -RRB- : NN VBN -LRB- NN : NN : , NN : NN : -RRB- : NFP NN NN -RRB- -LRB- NN -RRB-','The normal way would be this (for a local variable):</p> <pre><code>Map&lt;String String&gt; test = new HashMap&lt;String  String&gt;(); test.put(&quot;test&quot; &quot;test&quot;); test.put(&quot;test1&quot; &quot;test2&quot;); </code></pre> <p>',0.426507,0.596393,73,False,1972666,22,112,True,4729,557,122,?
'IN PRP$ -LRB- NN NFP NN -RRB-','If your <code>test</code>',0.236731,0.38913,7,False,1972666,22,112,True,4729,557,122,?
'NN VBZ DT NN JJ , VB DT NN IN DT NN CC NN NN NN -RRB- -LRB- NN NN -RRB-','map is an instance variable  put the initialization in a constructor or instance initializer:</p> <pre><code>',0.738989,0.834064,21,True,1972666,22,112,True,4729,557,122,?
'NNP : NNP , NNP : NN SYM JJ NNP : NNP , NNP : -LRB- -RRB- : SYM NN -LRB- NN : NN : , NN : NN : -RRB- : NN VBN -LRB- NN : NN : , NN : NN : -RRB- : NN ADD NN -RRB- -LRB- NN -RRB-','Map&lt;String String&gt; test = new HashMap&lt;String  String&gt;(); {     test.put(&quot;test&quot; &quot;test&quot;);     test.put(&quot;test1&quot; &quot;test2&quot;); } </code></pre> <p>',0.261466,0.464199,53,False,1972666,22,112,True,4729,557,122,?
'IN PRP$ -LRB- NN NFP NN -RRB-','If your <code>test</code>',0.236731,0.38913,7,False,1972666,22,112,True,4729,557,122,?
'NN VBZ DT NN NN , VB DT NN IN DT JJ NN -LRB- NN -RRB- -LRB- NN -LRB- NN NNP : NNP , NNP : NN SYM JJ NNP : NNP , NNP : -LRB- -RRB- : NN , NN -LRB- NN : NN : , NN : NN : -RRB- : NN VBN -LRB- NN : NN : , NN : NN : -RRB- : NN ADD NN -RRB- -LRB- NN -RRB-','map is a class variable  put the initialization in a static initializer:</p> <pre><code>static Map&lt;String String&gt; test = new HashMap&lt;String  String&gt;(); static {     test.put(&quot;test&quot; &quot;test&quot;);     test.put(&quot;test1&quot; &quot;test2&quot;); } </code></pre> <p>',0.500204,0.621109,74,True,1972666,22,112,True,4729,557,122,?
'IN PRP VBP PRP$ NN TO RB VB , PRP MD IN DT NN VB PRP$ NN IN -LRB- NN NN','If you want your map to never change  you should after the initialization wrap your map by <code>Collections.',0.712105,0.841432,21,False,1972666,22,112,True,4729,557,122,?
'JJ NN -LRB- , -RRB- SYM NN NFP',unmodifiableMap(...)</code>.,0.344023,0.477937,8,True,1972666,22,112,True,4729,557,122,?
'PRP MD VB DT IN DT JJ NN NN NN -RRB- -LRB- NNP NNP NNP : NNP , NNP : NN : -LRB- NNP : NNP , NNP : NN SYM JJ NNP : NNP , NNP : -LRB- -RRB- : NNP -LRB- NN : NNP : , NN : NNP : -RRB- : NN -LRB- NN : NN : , NN : NN : -RRB- : NN SYM NNP -RRB- : FW FW NN -RRB- -LRB- NN NFP PRP VBP RB JJ IN PRP MD RB VB -LRB- NN SYM NN -RRB-','You can do this in a static initializer too:</p> <pre><code>static Map&lt;String String&gt; test; {     Map&lt;String String&gt; temp = new HashMap&lt;String  String&gt;();     temp.put(&quot;test&quot; &quot;test&quot;);     temp.put(&quot;test1&quot; &quot;test2&quot;);     test = Collections.unmodifiableMap(temp); } </code></pre> <p>(I m not sure if you can now make <code>test</code>',0.46929,0.622323,92,False,1972666,22,112,True,4729,557,122,?
'JJ , VB PRP RP CC VB RB . -RRB- SYM NN -LRB- NN IN NNP CD , PRP RB VBP DT NN -LRB- , -RRB- CC NNS -LRB- -RRB- NN , IN VBN IN -LRB- DT NN SYM `` ADD    -RRB- DT NN IN ADD','final ... try it out and report here.)</p> <p>Since Java 9  you also have the Map.of(...) and Map.ofEntries() syntax  as explained in <a href= https://stackoverflow.com/a/6802502/600500 >the answer from yankee</a>.</p>',0.586888,0.711505,47,True,1972666,22,112,True,4729,557,122,?
'-LRB- NN -RRB- -LRB- NN -RRB- NNP : NNP , NNP : NN SYM JJ NNP : NNP , NNP : -LRB- -RRB- , HYPH VBN -LRB- NN , NN -RRB- : VB -LRB- NN , NN -RRB- : SYM NN : ADD NN -RRB-','<pre><code>Map&lt;String String&gt; test = new HashMap&lt;String  String&gt;() {     {         put(key1  value1);         put(key2  value2);     } }; </code></pre>',0.257615,0.460483,45,False,1972666,22,112,True,4729,45,65,?
'VB DT NN , VBG JJ NNP CD NNS CC NNS : VB DT NN -LRB- NN NNP -LRB- , NN -RRB-','<p>An alternative  using plain Java 7 classes and varargs: create a class <code>HashMapBuilder</code>',0.443503,0.550712,22,False,1972666,22,112,True,4017,205,46,?
'IN DT NN : NN','with this method:     </p>',0.26609,0.382774,5,True,1972666,22,112,True,4017,205,46,?
'-LRB- NN NN NN NN : NN , FW : NN NN , NNS -RRB- -RRB-','<pre><code>public static HashMap&lt;String  String&gt; build(String... data){',0.42511,0.583348,16,False,1972666,22,112,True,4017,205,46,?
'NNP : NNP , NNP : NN SYM JJ NNP : NNP , NNP : -LRB- -RRB- :','HashMap&lt;String  String&gt; result = new HashMap&lt;String  String&gt;();',0.319245,0.503194,18,False,1972666,22,112,True,4017,205,46,?
'IN -LRB- NNP NN CD SYM LS -RRB- VB JJ NN -LRB- `` JJ NN IN NNS    -RRB- :','if(data.length \% 2 != 0)          throw new IllegalArgumentException( Odd number of arguments );',0.271879,0.486842,20,True,1972666,22,112,True,4017,205,46,?
'NN NN SYM NN : NN NN SYM SYM CD :','String key = null;     Integer step = -1;',0.33612,0.507143,11,False,1972666,22,112,True,4017,205,46,?
'IN -LRB- NN NN : NNS -RRB- NFP NN SYM : NN -LRB- NN NN CD -RRB- : NN CD : IN -LRB- NN SYM NN -RRB- VB JJ NN -LRB- `` JJ JJ NN    -RRB- : NN SYM NN : VB : NN CD : NN VBN -LRB- JJ , NN -RRB- : NN : SYM -RRB-','for(String value : data){         step++;         switch(step \% 2){         case 0:              if(value == null)                 throw new IllegalArgumentException( Null key value );              key = value;             continue;         case 1:                          result.put(key  value);             break;         }     }',0.284025,0.526247,59,True,1972666,22,112,True,4017,205,46,?
'NN NN : NN , FW NN -RRB-','return result; } </code></pre>',0.301807,0.43707,8,True,1972666,22,112,True,4017,205,46,?
'-LRB- NN VB DT NN IN DT : NFP -RRB-','<p>Use the method like this:</p>',0.327286,0.4705,10,False,1972666,22,112,True,4017,205,46,?
'-LRB- NN NN -RRB-',<pre><code>,0.084822,0.272072,4,False,1972666,22,112,True,4017,205,46,?
'NNP : NNP , NNP : NN SYM NNP .','HashMap&lt;String String&gt; data = HashMapBuilder.',0.531001,0.647324,10,False,1972666,22,112,True,4017,205,46,?
'VB `` NN    , `` NN    , `` NN    , `` NN    -RRB- : NFP NNP NN -RRB-','build( key1   value1   key2   value2 ); </code></pre>',0.129074,0.32851,22,True,1972666,22,112,True,4017,205,46,?
'NNP : NN -RRB- -LRB- NN NN -LRB- NN NN -RRB- NNS IN NNP CD CC RBR -RRB- -LRB- NN -LRB- NN -RRB-','<h1>tl;dr</h1> <p>Use <code>Map.of…</code> methods in Java 9 and later.</p> <pre><code>',0.179282,0.348353,23,False,1972666,22,112,True,1661,1605,26,?
'UH : NN , NN NN : NN SYM NN -LRB- NN : NN : , NN : NN : , , NN , NN NN : NN : , NN : NN : , , NN , NN NN : NN : , NN : NN : NFP NN , NN -RRB- : ADD NN -LRB- ADD -RRB- -LRB- NN NNP CD VBD DT NN IN -LRB- DT NN SYM `` ADD    NN NN    , NNP -RRB-','Map&lt; String   String &gt; animalSounds =     Map.of(         &quot;dog&quot;    &quot;bark&quot;     // key   value         &quot;cat&quot;    &quot;meow&quot;     // key   value         &quot;bird&quot;   &quot;chirp&quot;    // key   value     ) ; </code></pre> <h1><code>Map.of</code></h1> <p>Java 9 added a series of <a href= https://docs.oracle.com/javase/9/docs/api/java/util/Map.html#of--  rel= noreferrer ><code>Map.of</code></a>',0.273799,0.451702,80,False,1972666,22,112,True,1661,1605,26,?
'JJ NNS TO VB RB WP PRP VBP : -LRB- JJ -RRB-','static methods to do just what you want: <strong>',0.500127,0.683782,12,True,1972666,22,112,True,1661,1605,26,?
'VB DT JJ -LRB- NN -RRB- NN -LRB- , NN -RRB-','Instantiate an immutable <code>Map</code>',0.324559,0.527878,11,False,1972666,22,112,True,1661,1605,26,?
'VBG JJ NN NFP -LRB- NN -RRB-','using literal syntax</strong>.</p> <p>',0.220902,0.416176,7,True,1972666,22,112,True,1661,1605,26,?
'DT NN -LRB- DT NN IN NNS -RRB- VBZ JJ , RB PRP MD RB VB CC VB NNS IN VBG .','The map (a collection of entries) is immutable  so you cannot add or remove entries after instantiating.',0.812086,0.907022,21,False,1972666,22,112,True,1661,1605,26,?
'RB , DT NN CC DT NN IN DT NN VBZ JJ , MD RB VB VBN .','Also  the key and the value of each entry is immutable  cannot be changed.',0.847723,0.927274,17,False,1972666,22,112,True,1661,1605,26,?
'-LRB- DT NN SYM `` ADD    NN `` NN    -RRB-','<a href= https://docs.oracle.com/javase/9/docs/api/java/util/Map.html#immutable  rel= noreferrer >',0.115145,0.264564,12,False,1972666,22,112,True,1661,1605,26,?
'VB DT NN , LS -RRB- IN JJ NNS , JJ IN DT NNS VBN , DT NN NNS VBN , CC DT NN NN IN NNS VBZ JJ . -LRB- NN -RRB-','See the Javadoc</a> for other rules  such as no NULLs allowed  no duplicate keys allowed  and the iteration order of mappings is arbitrary.</p> <p>',0.755389,0.848753,33,False,1972666,22,112,True,1661,1605,26,?
'VB PRP VB IN DT NNS , VBG DT NN NNS IN DT NN IN NN HYPH IN HYPH NN IN DT NN WP PRP VBP MD VB IN DT NN -LRB- NN -LRB- NN -RRB- -LRB- NN -RRB-','Let s look at these methods  using some sample data for a map of day-of-week to a person who we expect will work on that day.</p> <pre><code>',0.786534,0.866627,38,False,1972666,22,112,True,1661,1605,26,?
'NN NN SYM JJ NN -LRB- NNP : NNP : -RRB- : NN NNP SYM JJ NN -LRB- NNP : NNP : -RRB- : NN NNP SYM JJ NN -LRB- NNP : NNP : -RRB- : ADD NNP -RRB- -LRB- ADD -RRB- -LRB- NN CD -RRB- -LRB- NN , SYM NN SYM `` ADD    NN NN    , NNP NN VBZ DT JJ -LRB- NN NN NFP','Person alice = new Person( &quot;Alice&quot; ); Person bob = new Person( &quot;Bob&quot; ); Person carol = new Person( &quot;Carol&quot; ); </code></pre> <h2><code>Map.of()</code></h2> <p><a href= https://docs.oracle.com/javase/9/docs/api/java/util/Map.html#of--  rel= noreferrer ><code>Map.of</code></a> creates an empty <code>Map</code>.',0.141076,0.347766,68,False,1972666,22,112,True,1661,1605,26,?
'JJ , RB PRP MD RB VB NNS .','Unmodifiable  so you cannot add entries.',0.621339,0.844377,8,False,1972666,22,112,True,1661,1605,26,?
'RB VBZ DT NN IN PDT DT NN , JJ IN DT NNS -LRB- NN -LRB- NNP NN NNP FW : NNP , NN NN : NNP SYM NNP -RRB- : -LRB- NNP FW -LRB- FW -RRB- -LRB- NNP -LRB- -RRB- : NN -LRB- NN -RRB- SYM NN -RRB- NNP -LRB- NFP -RRB- -LRB- CD -RRB- -LRB- NN NN -RRB- NNP -LRB- NN , NN , NN , NN , : -RRB- SYM NN -RRB-','Here is an example of such a map  empty with no entries.</p> <pre><code>Map &lt; DayOfWeek  Person &gt; dailyWorkerEmpty = Map.of(); </code></pre> <blockquote> <p>dailyWorkerEmpty.toString(): {}</p> </blockquote> <h2><code>Map.of( … )</code></h2> <p><code>Map.of( k   v   k   v   …)</code>',0.234743,0.464569,75,False,1972666,22,112,True,1661,1605,26,?
'VBP JJ NNS WDT VBP CD IN CD NN HYPH NN NNS .','are several methods that take 1 to 10 key-value pairs.',0.669646,0.752152,13,True,1972666,22,112,True,1661,1605,26,?
'RB VBZ DT NN IN CD NNS -LRB- NN -LRB- NNP NNP FW : NNP , NN NN : NNP SYM NNP -LRB- NNP FW , NNP , SYM NN , NN NNP NNP , NNP , NN , NN -RRB- : NFP NNP FW -LRB- ADD -RRB- -LRB- NN -LRB- -RRB- : NFP NNP SYM NN NN NFP NNP    CD , NNP SYM NNP NN NFP NNP    NNP -LRB- FW -RRB- -LRB- CD , NN NNP -LRB- NFP -RRB- -LRB- CD -RRB- -LRB- NN , NN NN SYM `` ADD `` NN SYM `` NN    , NN -RRB- NNP -LRB- NN NN , NFP -RRB- SYM NN NN VBZ DT NN IN NNS VBG DT -LRB- DT NN SYM `` ADD    NN SYM `` NN    , ADD NN SYM -RRB- NN .','Here is an example of two entries.</p> <pre><code>Map &lt; DayOfWeek  Person &gt; weekendWorker =          Map.of(              DayOfWeek.SATURDAY   alice       // key   value             DayOfWeek.SUNDAY   bob           // key   value         ) ; </code></pre> <blockquote> <p>weekendWorker.toString(): {SUNDAY=Person{ name= Bob  }  SATURDAY=Person{ name= Alice  }}</p> </blockquote> <h2><code>Map.ofEntries( … )</code></h2> <p><a href= https://docs.oracle.com/javase/9/docs/api/java/util/Map.html#ofEntries-java.util.Map.Entry...-  rel= noreferrer ><code>Map.ofEntries( Map.Entry   … )</code></a> takes any number of objects implementing the <a href= https://docs.oracle.com/javase/9/docs/api/java/util/Map.Entry.html  rel= noreferrer ><code>Map.Entry</code></a> interface.',0.303736,0.480478,138,False,1972666,22,112,True,1661,1605,26,?
'NNP VBZ CD NNS VBG DT NN , CD JJ , DT JJ JJ : -LRB- DT NN SYM `` ADD    FW SYM `` NN    , NNP NN NNP , -LRB- -LRB- NN SYM `` ADD    FW SYM `` NN    , NNP , NN -RRB- NFP','Java bundles two classes implementing that interface  one mutable  the other immutable:     <a href= https://docs.oracle.com/javase/9/docs/api/java/util/AbstractMap.SimpleEntry.html  rel= noreferrer ><code>AbstractMap.SimpleEntry</code></a>  <a href= https://docs.oracle.com/javase/9/docs/api/java/util/AbstractMap.SimpleImmutableEntry.html  rel= noreferrer ><code>AbstractMap.SimpleImmutableEntry</code></a>.',0.372117,0.502979,50,False,1972666,22,112,True,1661,1605,26,?
'CC PRP VBP RB VB DT JJ NN .','But we need not specify a concrete class.',0.674349,0.833158,9,False,1972666,22,112,True,1661,1605,26,?
'PRP RB VBP TO VB -LRB- DT NN SYM `` ADD    FW SYM `` NN    , NN -RRB- NNP -LRB- NN , NN -RRB- NN NN','We merely need to call <a href= https://docs.oracle.com/javase/9/docs/api/java/util/Map.html#entry-K-V-  rel= noreferrer ><code>Map.entry( k   v )</code></a>',0.233025,0.444121,28,False,1972666,22,112,True,1661,1605,26,?
'NN , VB PRP$ NN CC PRP$ NN , CC PRP VBP RB DT NN IN DT DT NN NN -LRB- DT NN SYM `` ADD    FW SYM `` NN    -LRB- ADD -RRB- -RRB- NN -RRB- -LRB- NNP NN NNP NN : NNP , NN NN : NN SYM NN -LRB- NNP -LRB- NNP .','method  pass our key and our value  and we get back an object of a some class implementing <a href= https://docs.oracle.com/javase/9/docs/api/java/util/Map.Entry.html  rel= noreferrer ><code>Map.Entry</code></a> interface.</p> <pre><code>Map &lt; DayOfWeek  Person &gt; weekdayWorker = Map.ofEntries(         Map.entry( DayOfWeek.',0.474245,0.599518,57,True,1972666,22,112,True,1661,1605,26,?
'NNP , NN -RRB- , SYM NN IN `` NN    NN VBZ DT NN VBG `` NN NN    .','MONDAY   alice )              // Call to `Map.entry` method returns an object implementing `Map.Entry`.',0.531405,0.59825,21,False,1972666,22,112,True,1661,1605,26,?
'NNP -LRB- NNP NNP , NNP -RRB- , NNP -LRB- NNP NNP , NNP -RRB- , NNP -LRB- NNP FW , NNP -RRB- , NNP -LRB- NNP .','Map.entry( DayOfWeek.TUESDAY   bob )           Map.entry( DayOfWeek.WEDNESDAY   bob )           Map.entry( DayOfWeek.THURSDAY   carol )           Map.entry( DayOfWeek.',0.251673,0.4404,28,False,1972666,22,112,True,1661,1605,26,?
'NNP , NNP -RRB- -RRB- : -LRB- NNP FW -LRB- NNP -RRB- -LRB- NNP -LRB- -RRB- : NFP NNP NNP NN NFP NNP    NN , NNP SYM NNP NN NFP NNP    -RRB- , NNP SYM NNP NN NFP NNP       , NNP SYM NNP NN NFP NNP       , NNP SYM NNP NN NFP NNP    FW -LRB- ADD -RRB- -LRB- ADD -RRB- -LRB- NN -RRB- NNP CD VBD DT NN -LRB- DT NN SYM `` ADD    FW SYM `` FW    -LRB- ADD -RRB- NFP','FRIDAY   carol ) ); </code></pre> <blockquote> <p>weekdayWorker.toString(): {WEDNESDAY=Person{ name= Bob  }  TUESDAY=Person{ name= Bob  }  THURSDAY=Person{ name= Carol  }  FRIDAY=Person{ name= Carol  }  MONDAY=Person{ name= Alice  }}</p> </blockquote> <h2><code>Map.copyOf</code></h2> <p>Java 10 added the method <a href= https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Map.html#copyOf(java.util.Map)  rel= noreferrer ><code>Map.copyOf</code></a>.',0.178584,0.395314,91,False,1972666,22,112,True,1661,1605,26,?
'VB DT VBG NN , VB RB DT JJ NN IN DT NN . -LRB- NN -RRB-','Pass an existing map  get back an immutable copy of that map.</p> <p>',0.621128,0.769194,17,False,1972666,22,112,True,1661,1605,26,?
'IN NN , IN DT VBN NN VBZ RB RB JJ , DT -LRB- NN -LRB- , NN -RRB-','For efficiency  if the passed map is already truly immutable  the <code>copyOf</code>',0.700928,0.78202,19,False,1972666,22,112,True,1661,1605,26,?
'NN VBZ DT NN IN DT NN IN VBG DT JJ NN . -LRB- NNP -LRB- NNP -RRB- -LRB- NN : VB -LRB- NN -RRB- IN -LRB- NN NN SYM `` ADD    FW SYM `` FW    -LRB- ADD -RRB-','method returns a reference to the original without manufacturing a new map.</p> <h2>About <code>Collections.unmodifiableMap</code></h2> <p>Tip: Prefer <code>Map.copyOf</code> over <a href= https://docs.oracle.com/en/java/javase/20/docs/api/java.base/java/util/Collections.html#unmodifiableMap(java.util.Map)  rel= noreferrer ><code>Collections.unmodifiableMap</code></a>',0.261718,0.409647,41,True,1972666,22,112,True,1661,1605,26,?
'IN PRP VBP , VB DT RB JJ NN . -LRB- NN -RRB-','if you need/expect a truly immutable map.</p> <p>',0.405374,0.565966,13,True,1972666,22,112,True,1661,1605,26,?
'DT -LRB- NN -RRB- NNS -LRB- , NN -RRB-','The <code>Collections</code>',0.208799,0.337489,9,False,1972666,22,112,True,1661,1605,26,?
'NN VBZ DT -LRB- NN , PRP -RRB- IN DT JJ NN , DT JJ NN , RB DT JJ NN .','method produces a <em>view</em> onto the original map  a mere wrapper  not a true copy.',0.70103,0.826166,22,True,1972666,22,112,True,1661,1605,26,?
'DT NN : VBG DT JJ NN VBZ DT NN IN VBG NN .','The upside: Being a mere view has the benefit of conserving memory.',0.749228,0.893051,14,False,1972666,22,112,True,1661,1605,26,?
'DT NN : NNS IN DT JJ NN IN SYM -LRB- NN -RRB-','The downside: Modifications to the original show through.</p> <p>',0.499541,0.584041,13,False,1972666,22,112,True,1661,1605,26,?
'IN DT JJ NN VBZ VBN -LRB- -LRB- NN NN , -LRB- NN -LRB- , NN , FW -RRB- , DT RB HYPH JJ MD RB VB DT NN .','If the original map gets modified (<code>put</code>  <code>remove</code>  etc.)  the supposedly-unmodifiable will actually show the modification.',0.603741,0.691669,30,False,1972666,22,112,True,1661,1605,26,?
'IN NN , DT -LRB- NN NNP NFP NN -RRB-','In contrast  the <code>Map.copyOf</code>',0.42229,0.520947,10,False,1972666,22,112,True,1661,1605,26,?
'VBZ RB VB DT JJ NN IN DT VBN NN IN RB RB RB JJ -LRB- NN -LRB- NN NN SYM `` FW HYPH FW FW HYPH NN    , NN NN -LRB- NN NN -RRB- , NN NN NN SYM JJ NN -LRB- NNP : NNP : -RRB- : NN NNP SYM JJ NN -LRB- NNP : NNP : -RRB- : NNP NNP : NNP , NN NN : NNP SYM NNP -LRB- CD -RRB- : NNP -LRB- NNP , NNP -RRB- : NNP -LRB- NNP , NNP -RRB- : ADD -LRB- FW : NNP SYM FW : SYM NNP -RRB- :','does indeed produce a true copy of the passed map if not already truly immutable.</p> <pre class= lang-java prettyprint-override ><code>record Person( String name ) { } Person alice = new Person ( &quot;Alice&quot; ); Person bob = new Person ( &quot;Bob&quot; ); Map &lt; DayOfWeek  Person &gt; weekendWorkerMutable = HashMap.newHashMap ( 2 ); weekendWorkerMutable.put ( DayOfWeek.SATURDAY   bob ); weekendWorkerMutable.put ( DayOfWeek.SUNDAY   bob ); System.out.println ( &quot;weekendWorkerMutable = &quot; + weekendWorkerMutable );',0.228237,0.461049,103,True,1972666,22,112,True,1661,1605,26,?
'NNP NNP : NNP , NN NNP : NNP SYM NNP -LRB- NNP -RRB- : ADD -LRB- FW : NNP SYM FW : SYM NNP -RRB- : NN NN : NNP , NN NN : NNP SYM NNP -LRB- NN NNP -RRB- : ADD -LRB- FW : NN SYM FW : SYM NN -RRB- :','Map &lt; DayOfWeek  Person &gt; weekendWorkerSupposedlyUnmodifiable = Collections.unmodifiableMap ( weekendWorkerMutable ); System.out.println ( &quot;weekendWorkerSupposedlyUnmodifiable = &quot; + weekendWorkerSupposedlyUnmodifiable ); Map &lt; DayOfWeek  Person &gt; trueCopy = Map.copyOf ( weekendWorkerSupposedlyUnmodifiable ); System.out.println ( &quot;trueCopy = &quot; + trueCopy );',0.023221,0.247353,55,False,1972666,22,112,True,1661,1605,26,?
'NNP -LRB- NNP , NNP -RRB- : HYPH NN , VB DT NN .','weekendWorkerMutable.put ( DayOfWeek.SATURDAY   alice );  // &lt;--- Modify the original.',0.336367,0.501744,14,True,1972666,22,112,True,1661,1605,26,?
'LS -LRB- NN : SYM','System.out.println ( &quot; -----',-0.015292,0.191935,5,False,1972666,22,112,True,1661,1605,26,?
'IN VBG DT JJ JJ NN , NN : -RRB- : FW -LRB- FW : NNP SYM FW : SYM NN NNP -RRB- : ADD -LRB- NN : NN SYM FW : SYM NN -RRB- : ADD NN -RRB- -LRB- NN -RRB-','After mutating the original mutable map  ----- &quot; ); System.out.println ( &quot;weekendWorkerSupposedlyUnmodifiable = &quot; + weekendWorkerSupposedlyUnmodifiable ); System.out.println ( &quot;trueCopy = &quot; + trueCopy ); </code></pre> <p>',0.108743,0.332803,42,False,1972666,22,112,True,1661,1605,26,?
'WRB NNP -LRB- NNP -RRB- -LRB- NNP -RRB-','When run:</p> <ul> <li>',0.083605,0.283491,8,False,1972666,22,112,True,1661,1605,26,?
'PRP VBP IN DT RB JJ VBZ RB JJ -LRB- UH RB , FW , IN VBG DT JJ NN IN WDT DT JJ NN VBZ DT NN -LRB- NNP -RRB- -LRB- FW -RRB- IN NN , DT -LRB- NN NFP NN -RRB-','We see that the supposedly unmodifiable is indeed modifiable <em>indirectly</em>  by modifying the original map on which the unmodifiable map is a view.</li> <li>In contrast  the <code>copyOf</code>',0.618638,0.69231,43,False,1972666,22,112,True,1661,1605,26,?
'NN VBZ DT JJ NN , VBG NNP IN VBG DT JJ NN RB IN VBG NNP -LRB- NNP -RRB- -LRB- NNP -LRB- FW NN SYM `` FW HYPH NN FW HYPH NN    , NNP SYM -LRB- NNP NNP NN NNP -RRB- , NNP SYM NN NN SYM NNP -RRB- SYM NNP SYM -LRB- NNP NNP NN NNP -RRB- , NNP SYM NN NN SYM NNP -RRB- SYM NN SYM -LRB- NNP NNP NN NNP -RRB- , NNP SYM NN NN SYM NNP -RRB- -RRB-','method produces a true copy  showing Bob as working the entire weekend even after assigning Alice.</li> </ul> <pre class= lang-none prettyprint-override ><code>weekendWorkerMutable = {SATURDAY=Person[name=Bob]  SUNDAY=Person[name=Bob]} weekendWorkerSupposedlyUnmodifiable = {SATURDAY=Person[name=Bob]  SUNDAY=Person[name=Bob]} trueCopy = {SUNDAY=Person[name=Bob]  SATURDAY=Person[name=Bob]}',0.213967,0.417262,86,True,1972666,22,112,True,1661,1605,26,?
NFP,-----,0.122739,0.169539,1,False,1972666,22,112,True,1661,1605,26,?
'IN VBG DT JJ JJ NN , NNP SYM -LRB- NNP NNP NN NNP -RRB- , NNP SYM NN NN SYM NNP -RRB- : NNP SYM -LRB- NNP NNP NN NNP -RRB- , NNP NNP NN NNP -RRB- -RRB-','After mutating the original mutable map  -----  weekendWorkerSupposedlyUnmodifiable = {SATURDAY=Person[name=Alice]  SUNDAY=Person[name=Bob]} trueCopy = {SUNDAY=Person[name=Bob]  SATURDAY=Person[name=Bob]}',0.165758,0.357932,39,False,1972666,22,112,True,1661,1605,26,?
'-LRB- NN NN -LRB- NN -LRB- NN -RRB- -LRB- NN NN IN DT NN NN IN NNS VBN IN -LRB- NN NN NFP NN -RRB- VBP -LRB- LS PRP -RRB- VBN .','</code></pre> <h2>Notes</h2> <p>Notice that the iterator order of maps produced via <code>Map.of</code> are <em>not</em> guaranteed.',0.292399,0.431317,32,False,1972666,22,112,True,1661,1605,26,?
'DT NNS VBP DT JJ NN .','The entries have an arbitrary order.',0.729832,0.88415,7,False,1972666,22,112,True,1661,1605,26,?
'VB RB VB NN VBN IN DT NN VBN , IN DT NN VBZ DT NN VBZ JJ IN NN . -LRB- NN','Do not write code based on the order seen  as the documentation warns the order is subject to change.</p> <p>',0.761574,0.838519,23,False,1972666,22,112,True,1661,1605,26,?
'VB IN DT IN DT -LRB- NN -RRB- NN NN NN -RRB- NNS VBP DT -LRB- NN NN SYM `` ADD    FW SYM `` NN    , NNP IN -LRB- JJ SYM JJ NN , JJ -RRB-','Note that all of these <code>Map.of…</code> methods return a <a href= https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Map.html  rel= noreferrer ><code>Map</code></a> of <strong>an unspecified class</strong>.',0.309194,0.426732,38,False,1972666,22,112,True,1661,1605,26,?
'DT JJ JJ NN MD RB VB IN CD NN IN NNP IN DT .','The underlying concrete class may even vary from one version of Java to another.',0.819291,0.920889,15,False,1972666,22,112,True,1661,1605,26,?
'DT NN VBZ NNP TO VB IN JJ NNS , WP RB VBZ PRP$ JJ NNS .','This anonymity enables Java to choose from various implementations  whatever optimally fits your particular data.',0.788504,0.863591,17,False,1972666,22,112,True,1661,1605,26,?
'IN NN , IN PRP$ NNS VBP IN DT -LRB- DT NN SYM   ','For example  if your keys come from an <a href= ',0.676222,0.805471,14,False,1972666,22,112,True,1661,1605,26,?
'ADD `` FW SYM `` NN    NNP HYPH NN , NNP MD VB DT -LRB- DT NN SYM `` ADD    FW SYM `` NN    -LRB- ADD -RRB-','https://docs.oracle.com/javase/tutorial/java/javaOO/enum.html  rel= noreferrer >enum</a>  Java might use an <a href= https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/EnumMap.html  rel= noreferrer ><code>EnumMap</code></a>',0.179469,0.312942,30,True,1972666,22,112,True,1661,1605,26,?
'IN DT NNS . -RRB-','under the covers.</p>',0.489292,0.584089,5,True,1972666,22,112,True,1661,1605,26,?
'GW GW ADD','<p><strong>JAVA 8</strong></p>',0.159859,0.300408,3,False,1972666,22,112,True,1556,170,16,?
'NN IN JJ NN CD PRP RB VBP DT NN IN VBG -LRB- NN NNS , NNS -LRB- , NN -RRB- TO VB DT NN . -RRB-','<p>In plain java 8 you also have the possibility of using <code>Streams/Collectors</code> to do the job.</p>',0.502203,0.575299,27,False,1972666,22,112,True,1556,170,16,?
'-LRB- NN NN -RRB-',<pre><code>,0.084822,0.272072,4,False,1972666,22,112,True,1556,170,16,?
'NNP : NNP , NNP : NNP SYM NNP JJ NNP : NN : -LRB- `` NN    , `` NN    -RRB- , JJ NN : NN : -LRB- `` NN    , `` NN    -RRB- , JJ NN : NN : -LRB- `` NN    , `` FW    -RRB- -RRB- NN -LRB- NN -LRB- NNP FW , NN : : NN -RRB- -RRB- : -LRB- NN NN -RRB-','Map&lt;String  String&gt; myMap = Stream.of(          new SimpleEntry&lt;&gt;( key1    value1 )           new SimpleEntry&lt;&gt;( key2    value2 )           new SimpleEntry&lt;&gt;( key3    value3 ))         .collect(toMap(SimpleEntry::getKey  SimpleEntry::getValue)); </code></pre>',0.272313,0.522024,72,False,1972666,22,112,True,1556,170,16,?
'NFP -RRB- DT VBZ DT NN IN RB VBG DT JJ NN -LRB- NN -RRB-','<p>This has the advantage of not creating an Anonymous class.</p>',0.618211,0.705915,15,False,1972666,22,112,True,1556,170,16,?
'-LRB- NN VB IN DT NNS VBP : -LRB- NN -RRB-','<p>Note that the imports are:</p>',0.380102,0.502905,11,False,1972666,22,112,True,1556,170,16,?
'-LRB- NN NN NN ADD : NN ADD : -LRB- GW NN -RRB-','<pre><code>import static java.util.stream.Collectors.toMap; import java.util.AbstractMap.SimpleEntry; </code></pre>',0.440179,0.541005,13,False,1972666,22,112,True,1556,170,16,?
'NN IN NN , IN VBN IN JJ NNS , IN NNP CD RB PRP VBP JJR NNS IN VBG DT JJ -LRB- NN -RRB-','<p>Of course  as noted in other answers  in java 9 onwards you have simpler ways of doing the same.</p>',0.706959,0.838174,25,False,1972666,22,112,True,1556,170,16,?
'NN PRP MD VB TO VB DT JJ NN IN NNP NNP POS NN , -LRB- ADD -RRB- VBZ IN -LRB- NN , NN -RRB- CC -LRB- JJ -RRB- VBZ RB VB JJ NNS SYM NN , RB PRP MD VB DT -LRB- NN -RRB- NN -LRB- , NN -RRB-','<p>I would like to give a brief warning to Johnny Willer s answer.</p> <p><code>Collectors.toMap</code> relies on <code>Map.merge</code> and <strong>does not expect null values</strong>  so it will throw a <code>NullPointerException</code>',0.443511,0.563925,49,False,1972666,22,112,True,1233,252,7,?
'IN PRP VBD VBN IN DT NN NN : -LRB- DT NN SYM `` ADD    NN SYM `` NN    -RRB-','as it was described in this bug report: <a href= https://bugs.openjdk.java.net/browse/JDK-8148463  rel= noreferrer >',0.515335,0.679627,22,True,1972666,22,112,True,1233,252,7,?
ADD,https://bugs.openjdk.java.net/browse/JDK-8148463</a></p>,0.02605,0.191502,1,True,1972666,22,112,True,1233,252,7,?
'-LRB- NN',<p>,0.127045,0.374889,2,False,1972666,22,112,True,1233,252,7,?
'RB , IN DT NN VBZ JJ NNS , DT NN -LRB- NN , NN -RRB- MD VB DT -LRB- NN -RRB- -LRB- NN','Also  if a key appears several times  the default <code>Collectors.toMap</code> will throw an <code>IllegalStateException</code>.</p> <p>',0.491597,0.606644,24,False,1972666,22,112,True,1233,252,7,?
'DT JJ NN TO VB DT NN IN JJ NNS VBG DT NN NN IN NNP CD VBZ VBG DT JJ NN -LRB- JJ -RRB- VBN IN DT NN -LRB- , JJ -RRB-','An alternative way to get a map with null values using a builder syntax on Java 8 is writing a custom collector <strong>backed by a HashMap</strong>',0.724643,0.842371,33,False,1972666,22,112,True,1233,252,7,?
'-LRB- IN PRP VBZ VB JJ NNS -RRB- : NFP NN -LRB- NN NN NN : NNP , NNP : NNP SYM NNP -LRB- JJ NNP : NNP : -LRB- NN : NNP : , NN : NNP : -RRB- , JJ NNP : NNP : -LRB- NN : NNP : , -LRB- NNP -RRB- NN -RRB- , JJ NNP : NN : -LRB- NN : NNP : , NN : NNP : -RRB- , JJ NNP : NN : -LRB- NN : NN : , NN : NN -RRB- -RRB- NN -LRB- NN -RRB- , -LRB- NN , NN -RRB- , NN : NN NN -LRB- -RRB- , NN -RRB- -RRB- , NNP FW -RRB- : -LRB- NN NN -RRB-','(because it does allow null values):</p> <pre><code>Map&lt;String  String&gt; myMap = Stream.of(          new SimpleEntry&lt;&gt;(&quot;key1&quot;  &quot;value1&quot;)           new SimpleEntry&lt;&gt;(&quot;key2&quot;  (String) null)           new SimpleEntry&lt;&gt;(&quot;key3&quot;  &quot;value3&quot;)           new SimpleEntry&lt;&gt;(&quot;key1&quot;  &quot;value1updated&quot;))         .collect(HashMap::new                  (map  entry) -&gt; map.put(entry.getKey()                                          entry.getValue())                  HashMap::putAll); </code></pre>',0.26228,0.472546,121,False,1972666,22,112,True,1233,252,7,?
'NN PRP VBP DT JJ NN NN TO VB NNS IN DT JJ NN NN -RRB- -LRB- NN NN -RRB-','<p>We use a simple utility class to initialize Maps in a fluent way:</p> <pre><code>',0.545114,0.635616,20,False,1972666,22,112,True,979,315,3,?
'UH : NNP , NNP : NN SYM NNP ADD NN : NN : , NN : NN : -RRB- . VB -LRB- NN : NN : , NN : NN : -RRB- . VB -LRB- NN : NN NN : , NN : NN : -RRB- . NNP -LRB- -RRB- : -LRB- NN NN -RRB- -LRB- NN -RRB-','Map&lt;String  String&gt; map = MapInit     .init(&quot;key1&quot;  &quot;value1&quot;)     .put(&quot;key2&quot;  &quot;value2&quot;)     .put(&quot;key3&quot;  &quot;value3&quot;)     .getMap(); </code></pre> <p>',0.175925,0.385879,59,False,1972666,22,112,True,979,315,3,?
'DT NN NN VBZ RB VBN CC VBG DT NN IN NNS CC NNS CC VBG DT NN IN NNS CC VBG DT NN IN DT VBG NN NFP -LRB- NN -RRB-','The utility class isn t limited neither regarding the type of keys and values nor regarding the amount of entries nor regarding the type of the resulting Map.</p> <p>',0.785432,0.908278,31,False,1972666,22,112,True,979,315,3,?
'DT NN NN VBZ IN DT VBG : -LRB- NN -RRB- -LRB- NN NN NN NN NNP : NNP , NNP , NNP VBZ NNP : NNP , NNP : NNP : SYM JJ JJ NN NN :','The utility class looks like the following:</p> <pre><code>public class MapInit&lt;K  V  T extends Map&lt;K  V&gt;&gt; {     private final T map;',0.586908,0.708262,38,False,1972666,22,112,True,979,315,3,?
'JJ NNP -LRB- JJ NN NN -RRB- NFP DT NN SYM NN : NFP','private MapInit(final T map) {         this.map = map;     }',0.224919,0.415836,14,True,1972666,22,112,True,979,315,3,?
'JJ NN NN -LRB- -RRB- NFP NN NNP : NFP','public T getMap() {         return this.map;     }',0.148723,0.383875,10,True,1972666,22,112,True,979,315,3,?
'JJ NN NN : NNP , NNP : NNP : NNP , NNP , NNP : NNP , NNP : NNP : JJ JJ NN NN , JJ NN NN -RRB- , NN NN NN : : JJ , NN , NN -RRB- : NFP','public static &lt;K  V&gt; MapInit&lt;K  V  HashMap&lt;K  V&gt;&gt; init(final K key  final V value) {         return init(HashMap::new  key  value);     }',0.485775,0.624965,45,True,1972666,22,112,True,979,315,3,?
'JJ NN NN : NNP , NNP , NNP VBZ NNP : NNP , NNP : NNP : NNP : NNP , NNP , NNP : NNP JJ NNP : NNP : NN , JJ NN NN , JJ NN NN -RRB- -LRB- NN JJ NNP : NNP : -LRB- NNP -LRB- -RRB- -RRB- , . VBN -LRB- JJ , NN -RRB- : NFP','public static &lt;K  V  T extends Map&lt;K  V&gt;&gt; MapInit&lt;K  V  T&gt; init(final Supplier&lt;T&gt; mapSupplier  final K key  final V value) {         return new MapInit&lt;&gt;(mapSupplier.get()) //                 .put(key  value);     }',0.396,0.569226,64,True,1972666,22,112,True,979,315,3,?
'JJ NNP : NNP , NNP , NNP : VBN -LRB- JJ NN NN , JJ NN NN -RRB- -LRB- ADD NN , NN -RRB- : VB DT , SYM : ADD NN -RRB-','public MapInit&lt;K  V  T&gt; put(final K key  final V value) {         this.map.put(key  value);         return this;     } } </code></pre>',0.452234,0.615932,34,True,1972666,22,112,True,979,315,3,?
