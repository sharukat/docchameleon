,question,contexts,context_relevancy
0,Loading and displaying local Images in Java Applet,"['It\'s likely the image can\'t be accessed from its current context, remember, applets normally run in a very tight security sandbox which prevents them from accessing files on the local/client file system.\n\nYou either need to load the images from the server the applet is been loaded from (using getDocument/CodeBase or a relative URL), or based on your example, as embedded an resource, for example\n\ntileset_terrain = ImageIO.read(getClass().getResource(""/res/tileset_terrain.png""));\nThis assumes that the image is included within the Jar file under the /res directory.\n\nIf the image resides on the server from which the applet is been load, you could also use\n\ntry {\n    URL url = new URL(getCodeBase(), ""res/tileset_terrain.png"");\n    img = ImageIO.read(url);\n} catch (IOException e) {\n    e.printStackTrace();\n}\nTake a look at Reading/Loading images and What Applets Can and Cannot Do for more details.']",1.0
1,Classloader in Applet: Cant access files,"['Classloader hierarchy\nWhenever a new JVM is started the bootstrap classloader is responsible to load key Java classes (from java.lang package) and other runtime classes to the memory first. The bootstrap classloader is a parent of all other classloaders. Consequently, it is the only one without a parent.\n\nNext comes the extension classloader. It has the bootstrap classloader as parent and is responsible for loading classes from all .jar files kept in the java.ext.dirs path‚Äìthese are available regardless of the JVM‚Äôs classpath.\n\nThe third and most important classloader from a developer‚Äôs perspective is the system classpath classloader, which is an immediate child of the extension classloader. It loads classes from directories and jar files specified by the CLASSPATH environment variable, java.class.path system property or -classpath command line option.\n\nClassloader hierarchy\n\nClassLoader Namespace\n\nIn Java a class is uniquely identified using ClassLoader + Class as the same class may be loaded by two different class loaders.\n\nClass A loaded by ClassLoader A != Class A loaded by ClassLoader B\nHow is it helpful?\n\nIt is helpful for defining different protection and access policies for different classloaders. Take an example of applet which is loaded using a different classloader, you would not want a third party application all access to your resources. So for security its important to maintain different namespaces.']",0.3888888888888889
2,How to access a file in a Java Applet?,"['You need to wrap your code in AccessController.doPrivileged, like:\n\npublic class InJava extends Applet{\n\n  public void sayHello() {\n\n    final String parametro = getParameter(""parametro"");\n\n    FileInputStream fis =  AccessController.doPrivileged(new PrivilegedAction<FileInputStream>() {\n      public FileInputStream run() {\n        try  {\n          retrun new FileInputStream(parametro);\n        } catch (IOException e)  {\n          // handle exception\n        }\n      }\n    });\n  }\nMake sure that your applet jar(s) are signed, and that you understand all other consequences of running an applet.']",1.0
3,how to set JFrame background transparent but JPanel or JLabel Background opaque?,"['I found another solution.\n\nSet the background color of your frame to\n\n// Set the frame background color to a transparent color\nyourFrameHere.setBackground(new Color(0, 0, 0, 0));\nAnd remember to set the opacity off of the contentpane (your JPanel or other component)\n\n// turn off opacity of the content pane\nyourContentPaneHere.setOpaque(false);']",1.0
4,How to set a transparent background of JPanel?,"[""You could use setOpaque() to make the background of the JPanel transparent, but then you couldn't draw over the rectangles that you wanted to make transparent.\n\nSo another way of doing it would be to make a BufferedImage and draw the rectangles on that image and then add that BufferedImage to the JPanel.\n\nimport java.awt.AlphaComposite;\nimport java.awt.Color;\nimport java.awt.Component;\nimport java.awt.Dimension;\nimport java.awt.Graphics;\nimport java.awt.Graphics2D;\nimport java.awt.event.ActionEvent;\nimport java.awt.event.KeyEvent;\nimport java.awt.image.BufferedImage;\nimport java.beans.Transient;\nimport java.io.File;\nimport java.io.IOException;\n\nimport javax.imageio.ImageIO;\nimport javax.swing.AbstractAction;\nimport javax.swing.JFrame;\nimport javax.swing.JPanel;\nimport javax.swing.KeyStroke;\n\n\npublic class Showcase extends JFrame {\n\n    BufferedImage img;\n\n    public static void main(String[] args) {\n        Showcase window = new Showcase();\n    }\n\n    public Showcase() {\n        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n\n        final JPanel contentPane = new JPanel();\n        contentPane.setBackground(Color.CYAN);\n        setContentPane(contentPane);\n\n\n        final TestPane tP = new TestPane();\n        contentPane.add(tP);\n\n        // make new buffered image\n        img = new BufferedImage(tP.getPreferredSize().width, \n                tP.getPreferredSize().height, BufferedImage.TYPE_INT_ARGB);\n\n        setVisible(true);\n        pack();\n    }\n\n    @Override\n    public Dimension getPreferredSize() {\n        return new Dimension(500, 300);\n    }\n\n    public class TestPane extends JPanel{\n\n        @Override\n        protected void paintComponent(Graphics g) {              \n            Graphics2D g2 = (Graphics2D) g;\n\n            Graphics2D imgG2 = img.createGraphics();\n\n            // make img background transparent\n            imgG2.setBackground(new Color(0,0,0,0));\n\n            imgG2.setColor(Color.red);\n            imgG2.fillRect(0, 0, 100, 100);\n\n            imgG2.clearRect(0, 0, 50, 50);\n\n            imgG2.dispose();\n\n            // draw buffered image to jpanel\n            g2.drawImage(img, 0, 0, null);\n\n            g2.dispose();\n\n            super.paintComponent(g);   \n        }\n\n        @Override\n        @Transient\n        public Dimension getPreferredSize() {\n            return new Dimension(100, 100);\n        }\n    }\n}""]",0.13636363636363635
5,How to make JFrame background and JPanel transparent with only image showing,"['I try it on my computer and image is showing up on icon. If you want show the image on background try this :\n\nimport java.awt.Image;\nimport java.awt.Toolkit;\nimport javax.swing.*;\n\n        public class Caine extends JFrame{\n        //the pictures\n        ImageIcon guy = new ImageIcon(""tester.gif"");\n        JLabel pn = new JLabel(guy);\n        JPanel panel = new JPanel();\n\n        Caine(){\n            super(""Photuris Lucicrescens"");\n\n            //Important\n            setSize(700,600);\n            setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n            add(panel);\n            setVisible(true);\n            JLabel im = new JLabel(new ImageIcon(""iconImage.gif""));\n            setIconImage(customIcon);\n            panel.add(im);\n            add(pn);\n        }\n        }']",1.0
6,java: How to add Transparent Gradient Background to JFrame,"['I found another solution.\n\nSet the background color of your frame to\n\n// Set the frame background color to a transparent color\nyourFrameHere.setBackground(new Color(0, 0, 0, 0));\nAnd remember to set the opacity off of the contentpane (your JPanel or other component)\n\n// turn off opacity of the content pane\nyourContentPaneHere.setOpaque(false);']",1.0
7,Swing: Obtain Image of JFrame,"['I believe you are looking for internal frames.\n\nFor the background image bit, sublass JPanel, override its paintComponent() method, and blit your image there. Then set an instance of that panel as your JFrame\'s content pane.\n\npublic class BackgroundPanel extends JPanel {\n    private BufferedImage bgImg;\n\n    public BackgroundPanel() {\n        try {\n            bgImg = ImageIO.read(BackgroundPanel.class.getResourceAsStream(\n                    ""mybackgroundimage.png""));\n        } catch (IOException ex) {\n            System.err.println(""Could not load background image!"");\n            ex.printStackTrace();\n        }\n    }\n\n    @Override\n    protected void paintComponent(Graphics g) {\n        super.paintComponent(g);\n        if (bgImg != null) {\n            g.drawImage(bgImg, 0, 0, null);\n        }\n    }\n}\n\npublic class MyJFrame extends JFrame {\n\n    public MyJFrame() {\n        setContentPane(new BackgroundPanel());\n    }\n\n}']",1.0
8,Transparent JFrame background,"['You should make content pane transparent too.\n\nframe.setUndecorated(true);\nframe.getContentPane().setBackground(new Color(1.0f,1.0f,1.0f,0.0f));\nframe.setBackground(new Color(1.0f,1.0f,1.0f,0.0f));']",1.0
9,Java Serializable Object to Byte Array,['If the object array contains Serializable objects then you can use java.io.ObjectOutputStream\n\nObjectOutputStream out = new ObjectOutputStream(anyOutputStream);\nout.writeObject(objectArray);\n‚Ä¶'],1.0
10,JSONObject Not Serializable?,"['Call toString on the JSONObject, and then serialize the string. JSONObject itself is not serializable.\n\nString jsonString = jsonObject.toString();']",1.0
11,Convert InputStream to byte array in Java,"['I use this.\n\npublic static byte[] toByteArray(InputStream is) throws IOException {\n        ByteArrayOutputStream output = new ByteArrayOutputStream();\n        try {\n            byte[] b = new byte[4096];\n            int n = 0;\n            while ((n = is.read(b)) != -1) {\n                output.write(b, 0, n);\n            }\n            return output.toByteArray();\n        } finally {\n            output.close();\n        }\n    }']",1.0
12,Java: InputStream too slow to read huge files,"['I would try this\n\n// create the file so we have something to read.\nfinal String fileName = ""1.2.fasta"";\nFileOutputStream fos = new FileOutputStream(fileName);\nfos.write(new byte[54 * 1024 * 1024]);\nfos.close();\n\n// read the file in one hit.\nlong start = System.nanoTime();\nFileChannel fc = new FileInputStream(fileName).getChannel();\nByteBuffer bb = fc.map(FileChannel.MapMode.READ_ONLY, 0, fc.size());\nwhile (bb.remaining() > 0)\n    bb.getLong();\nlong time = System.nanoTime() - start;\nSystem.out.printf(""Took %.3f seconds to read %.1f MB%n"", time / 1e9, fc.size() / 1e6);\nfc.close();\n((DirectBuffer) bb).cleaner().clean();\nprints\n\nTook 0.016 seconds to read 56.6 MB']",1.0
13,Loading images using an InputStream,"['If you are using PDFBox 2.0.0 or above\n\nPDDocument document = PDDocument.load(new File(""filePath"")); //filePath is the path to your .pdf\nPDFRenderer pdfRenderer = new PDFRenderer(document);\n\nfor(int i=0; i<document.getPages().getCount(); i++){\n    BufferedImage bim = pdfRenderer.renderImage(i, 1.0f, ImageType.RGB); //Get bufferedImage for page ""i"" with scale 1\n    ByteArrayOutputStream os = new ByteArrayOutputStream();\n    ImageIO.write(bim, ""jpg"", os);\n    InputStream is = new ByteArrayInputStream(os.toByteArray());\n    //Do whatever you need with the inputstream\n}\ndocument.close()']",0.8333333333333334
14,How do I read bytes from InputStream?,['Try this( IOUtils is commons-io)\n\nbyte[] bytes = IOUtils.toByteArray(instream);'],1.0
15,FileInputStream read until last 128 bytes of file,"['This should work.\n\nInputStream is = Context.openFileInput(someFileName);\nByteArrayOutputStream bos = new ByteArrayOutputStream();\nbyte[] b = new byte[1024];\nwhile ((int bytesRead = is.read(b)) != -1) {\n   bos.write(b, 0, bytesRead);\n}\nbyte[] bytes = bos.toByteArray();']",1.0
16,Converting json from a file to a java Object,"['This simple example works like a charm:\nDTOs\n\npublic class SampleDTO \n{\n   private String name;\n   private InnerDTO inner;\n   // getters/setters\n}\n\npublic class InnerDTO \n{\n   private int number;\n   private String str; \n   // getters/setters  \n}  \nGson\n\n  BufferedReader br = new BufferedReader(new FileReader(""/tmp/test.json""));\n  SampleDTO sample = new Gson().fromJson(br, SampleDTO.class);  \nJackson\n\n  InputStream inJson = SampleDTO.class.getResourceAsStream(""/test.json"");\n  SampleDTO sample = new ObjectMapper().readValue(inJson, SampleDTO.class);\nJSON (test.json)\n\n{\n   ""name"" : ""Mike"",\n   ""inner"": {\n      ""number"" : 5,\n      ""str"" : ""Simple!""\n   }\n}']",0.26666666666666666
17,Java/JAXB: Unmarshall XML attributes to specific Java Object attributes,"['You may create a separate classes to represent structure of your XML:\n\npublic class Section {\n    @XmlAttribute\n    public String name;\n    @XmlElement(name = ""value"")\n    public List<Value> values;\n}\n\npublic class Value {\n    @XmlAttribute\n    public String name;\n    @XmlValue\n    public String value;\n}\nand then use an XmlAdapter to perform conversion:\n\npublic class OptionsAdapter extends XmlAdapter<Section, Options> {\n    public Options unmarshal(Section s) {\n        if (""default_options"".equals(s.name)) {\n            ...\n        } else if (...) {\n            ...\n        }\n        ...\n    }\n    ...\n}\n\n@XmlElement\npublic class Configuration {\n    @XmlElement(name = ""section"")\n    @XmlJavaTypeAdapter(OptionsAdapter.class)\n    public List<Options> options;\n}\n\npublic class DefaultOptions extends Options { ... }\npublic class CustomOptions extends Options { ... }']",1.0
18,Inserting Java Object to MongoDB Collection Using Java,"['You can convert your java object into json string using the gson library and then insert it in mongodb.\n\nEg:\n\nGson gson = new Gson();\nString json = gson.toJson(Employee);    \nBasicDBObject basicDBObject = new BasicDBObject(""Name"", json );          \nDBCollection dbCollection = db.getCollection(""NameColl"");          \ndbCollection.save(basicDBObject);    ']",1.0
19,Java - getting max value from an arraylist of Objects?,"['You can use Java 8 Streams :\n\nArrayList<ArrayList<String>> allChains = new ArrayList<>();\nallChains.add (new ArrayList<String>(Arrays.asList (""apple"", ""b"", ""c"")));\nallChains.add (new ArrayList<String>(Arrays.asList (""a"")));\nallChains.add (new ArrayList<String>(Arrays.asList (""a"",""b"",""c"",""d"")));\n\nArrayList<String> longest = allChains.stream()\n                                     .max(Comparator.comparingInt(ArrayList::size))\n                                     .get();\n\nSystem.out.println (longest);\nOutput:\n\n[a, b, c, d]']",1.0
20,Finding Largest String in ArrayList,"['Please try these code . Here i am trying with get() to access the ArrayList elements, which is working correctly.\n\nimport java.util.Scanner;                  \nimport java.util.ArrayList;\n\nclass ArraylistString\n{\n    public static void main(String args[])\n    {\n        ArrayList<String> Str = new ArrayList<String>();\n        Str.add(""Jim Bob"");\n        Str.add(""Bobby Jones"");\n        Str.add(""Rob Stiles"");\n        int largestString = Str.get(0).length();\n        int index = 0;\n\n        for(int i = 0; i < Str.size(); i++)\n        {\n            if(Str.get(i).length() > largestString)\n            {\n                largestString = Str.get(i).length();\n                                index = i;\n            }\n        }\n        System.out.println(""Index "" + index + "" ""+ Str.get(index) + "" "" + ""is the largest and is size "" + largestString);  \n\n    }\n\n}']",0.6071428571428571
21,Strings written to file do not preserve line breaks,"['When you use readline() the line breaks are removed. You have to re-insert them with\n\nsb = sb.append(line).append(""\\n"");']",1.0
22,Converting an int to a binary string representation in Java?,"['Convert Integer to Binary:\n\nimport java.util.Scanner;\n\npublic class IntegerToBinary {\n\n    public static void main(String[] args) {\n\n        Scanner input = new Scanner( System.in );\n\n        System.out.println(""Enter Integer: "");\n        String integerString =input.nextLine();\n\n        System.out.println(""Binary Number: ""+Integer.toBinaryString(Integer.parseInt(integerString)));\n    }\n\n}\nOutput:\n\nEnter Integer:\n\n10\n\nBinary Number: 1010']",0.35714285714285715
23,How to convert binary string value to decimal,"['Use Integer.parseInt (see javadoc), that converts your String to int using base two:\n\nint decimalValue = Integer.parseInt(c, 2);']",1.0
24,How to make a Java thread wait for another threads output?,"['You can use Thread.join() to do that:\n\nThread[] threads = new Thread[numOfThreads];\nfor (int i = 0; i < threads.length; i++) {\n    threads[i] = new Thread(new Runnable() {\n        public void run() {\n            System.out.println(""xxx"");\n        }\n    });\n    threads[i].start();\n}\n\nfor (int i = 0; i < threads.length; i++) {\n    try {\n        threads[i].join();\n    } catch (InterruptedException e) {\n    }\n}\nFor your solution\n\nThread[] threads = new Thread[3];\nthreads[i] = new Thread(new Runnable() {\n        ...\n}).start();\nthreads[i] = new Thread(new Runnable() {\n        ...\n}).start();\nthreads[i] = new Thread(new Runnable() {\n        ...\n}).start();\n\nfor (int i = 0; i < threads.length; i++) {\n    try {\n        threads[i].join();\n    } catch (InterruptedException e) {\n    }\n}']",0.3076923076923077
25,When does Javas Thread.sleep throw InterruptedException?,"['In this solution, I defined an interface Interruptible, and a method ignoreInterruption which converts an Interruptible to a Runnable:\n\npublic class Foo {\n\n  public static void main(String... args) {\n    new Thread(ignoreInterruption(Foo::bar)).start();\n    new Thread(ignoreInterruption(() -> Foo.baz(1, 2, 3))).start();\n  }\n\n  static void bar() throws InterruptedException {\n    // do something\n    Thread.sleep(1000);\n  }\n\n  static void baz(int a, int b, int c) throws InterruptedException {\n    // do something\n    Thread.sleep(1000);\n  }  \n\n  interface Interruptible {\n    public void run() throws InterruptedException;\n  }\n\n  static Runnable ignoreInterruption(Interruptible interruptible) {\n    return () -> { \n      try {\n        interruptible.run();\n      }\n      catch(InterruptedException ie) {\n        // ignored\n      }\n    };\n  }\n\n}']",0.16666666666666666
26,Java: Thread.currentThread().sleep(x) vs. Thread.sleep(x),"['The Thread.interrupt() method interrupts the specific Thread that the instance references to:\n\nThread x = getSomeThreadInstance();\nx.interrupt();\nThe x variable can refer to any thread instance.\n\nThe Thread.currentThread().interrupt() method is the same as before, but applied to the current Thread, interrupting only the current thread of execution. It is equivalent to:\n\nThread x = Thread.currentThread();\nx.interrupt();\nAbout Thread.sleep() and Thread.currentThread().sleep() there is no difference. sleep() is a static method on the Thread class, and makes no difference on the way you call it. Calling it causes the current thread of execution to pause for the indicated amount of time.\n\nNonetheless, one should not call static method on an instance, which means static method should be called in a static way.']",0.7142857142857143
27,How a thread should close itself in Java?,['You can add a method like this as any blocking IO operation will throw an IOException:-\n\npublic void close() throws IOException {\n    this.socket.close();\n}\nFrom the javadoc:-\n\nCloses this socket. Any thread currently blocked in accept() will throw a SocketException.'],1.0
28,Java sending and receiving file (byte[]) over sockets,"['Take a look at the tutorial on Reading from and Writing to a Socket.\n\nTo write a byte array to a socket you would:\n\nbyte[] message = ...;\nSocket socket=new Socket(ipAddress, port);\nOutputStream socketOutputStream = socket.getOutputStream();\nsocketOutputStream.write(message);\nSimilarly, to read, you would use socket.getInputStream.']",1.0
29,Sending compressed JPG image over socket,"['Actually the code looks ok. Here\'s a complete code, that works fine on my machine:\n\nimport java.awt.*;\nimport java.awt.image.BufferedImage;\nimport java.net.*;\n\nimport javax.imageio.ImageIO;\nimport javax.swing.*;\n\npublic class Server {\n  public static void main(String[] args) throws Exception {\n    BufferedImage screencapture = new Robot().createScreenCapture(new Rectangle(Toolkit.getDefaultToolkit().getScreenSize()));\n    try (ServerSocket serv = new ServerSocket(25000)) {\n      System.out.println(""waiting..."");\n      try (Socket socket = serv.accept()) {\n        System.out.println(""client connected"");\n        ImageIO.write(screencapture, ""jpg"", socket.getOutputStream());\n        System.out.println(""sent"");\n      }\n    }\n  }\n}\n\nclass Client {\n  public static void main(String[] args) throws Exception {\n    try(Socket socket = new Socket(""localhost"", 25000)){\n      BufferedImage image = ImageIO.read(socket.getInputStream());\n      JLabel label = new JLabel(new ImageIcon(image));\n      JFrame f = new JFrame(""vnc"");\n      f.getContentPane().add(label);\n      f.pack();\n      f.setVisible(true);\n    }\n  }\n}\nThough this will only work if you close the socket after sending the images. It will fail if you\'ll just try to send a few images over the same socket. See https://stackoverflow.com/a/6973863/211205.']",0.1951219512195122
30,Authentication during connection to MongoDB server instance using Java,"[""Following on from Bob Kuhar's accepted answer, in Mongo3 the mechanism has change to SHA1 from challenge response as shown in the code snippet. I need to update the code snippet as follows:\n\n...\nimport com.mongodb.MongoClient;\nimport com.mongodb.MongoCredential;\nimport com.mongodb.ServerAddress;\n...\n\n// Manage the mongo db connection...\nList<ServerAddress> seeds = new ArrayList<ServerAddress>();\nseeds.add( new ServerAddress(configuration.getMongoHost(), configuration.getMongoPort() ));\nList<MongoCredential> credentials = new ArrayList<MongoCredential>();\ncredentials.add(\n    MongoCredential.createScramSha1Credential(\n        configuration.getMongoUser(),\n        configuration.getMongoDb(),\n        configuration.getMongoPassword().toCharArray()\n    )\n);\nMongoClient mongo = new MongoClient( seeds, credentials );""]",0.7
31,How to get database url from java.sql.Connection?,['I believe you can use the DatabaseMetaData object from the Connection and then get the URL. Try:\n\nDatabaseMetaData dmd = connection.getMetaData();\nString url = dmd.getURL();'],1.0
32,How to get database schema name when using oracle jdbc connection?,"['You can get schema name using\n\nConnection conn = \nDriverManager.getConnection(""jdbc:oracle:thin:@server:port:SID"",prop);    \nDatabaseMetaData databaseMetaData = conn.getMetaData();\nSystem.out.println(""schema name >>>> ""+databaseMetaData.getUserName());']",1.0
33,Connect Java to a MySQL database,"['To create database through Java code, you must use executeUpdate(sql) instead of executeQuery(sql); and connect to the mysql database as root:\n\nconnection =  DriverManager.getConnection(\n    ""jdbc:mysql://localhost:3306/mysql?zeroDateTimeBehavior=convertToNull"",\n    ""root"", ""root""\n);\nStatement st = connection.createStatement();\nst.executeUpdate(sql);\nst.close();']",1.0
34,Should you set up database connection properties in server.xml or context.xml,"['A connection pool operates by performing the work of creating connections ahead of time. In the case of a JDBC connection pool, a pool of Connection objects is created at the time the application server starts. The client can access the connection object in connection pool and return the object to pool once the db work is completed.\n\nContext.xml\n\n   <Resource name=""jdbc/TestDB"" auth=""Container"" type=""javax.sql.DataSource"" \nmaxActive=""100"" maxIdle=""30"" maxWait=""10000"" username=""root"" password="""" \ndriverClassName=""com.mysql.jdbc.Driver""               \nurl=""jdbc:mysql://localhost:3306/cdcol""/>\n//This should be added in the servers context,xml file. For example if you are using apache server then the context.xml will be found in C:\\apache-tomcat-6.0.26\\conf\\Context.xml\n\nweb.xml\n\n  <resource-ref>\n      <description>DB Connection</description>\n      <res-ref-name>jdbc/TestDB</res-ref-name>\n      <res-type>javax.sql.DataSource</res-type>\n      <res-auth>Container</res-auth>\n  </resource-ref>\n//This should be added in the web.xml of the local project. (Not in server\'s web.xml).\n\nContext ctx=new InitialContext();\n          Context envContext = (Context)ctx.lookup(""java:comp/env"");\n          DataSource ds=(DataSource)envContext.lookup(""jdbc/TestDB"");//TestDB is the Database Name\n          con=ds.getConnection();\n          stmt = con.createStatement();']",0.3333333333333333
35,HSQLDB delete row(s) from JDBC resultset,"['Specify the cursor holdability in the code:\n\nc.prepareStatement(select,\n     ResultSet.TYPE_SCROLL_INSENSITIVE,\n     ResultSet.CONCUR_UPDATABLE,\n     ResultSet.HOLD_CURSORS_OVER_COMMIT);\nThe problem seems to be that HSQLDB JDBC driver uses ResultSet.CLOSE_CURSOS_AT_COMMIT as the default value.']",1.0
36,How to programmatically create a Java ResultSet from custom data with no database,"['Why you are getting ""Closed resultset:next"" error, see here:\n\nWhy am I getting ResultSet is closed error when I never closed any\n\nI suppose you are not using some ORM framework like Hibernate.\n\nIn this case, map the resultset data in the DAO or build an object mapper yourself, which maps the ResultSet to a some Data Transfer Object. Then pass this object to the createExcel() method.\n\nSomething like this:\n\nResultSet rs = myDao.getResult();\nList<ExcelDto> excelDtos = new ArrayList<>();\nExcelDto excelDto;\nwhile (rs.next()) {      \n    excelDto = new ExcelDto();    \n    dto.setXCol(rs.getString(""XColumn""))\n    excelDtos.add(dto);  \n}\nexcelCreator.createExcel(excelDtos);\nThen in the excelCreator you can work with an ArrayList instead of ResultSet.']",0.3125
37,Retrieve column names from java.sql.ResultSet,"['You can use the the ResultSetMetaData (http://java.sun.com/javase/6/docs/api/java/sql/ResultSetMetaData.html) object for that, like this:\n\nResultSet rs = stmt.executeQuery(""SELECT * FROM table"");\nResultSetMetaData rsmd = rs.getMetaData();\nString firstColumnName = rsmd.getColumnName(1);']",1.0
38,How to sort a Map by Value (ArrayList) size in Java?,"[""If you are using java-8, here's also a way to do this:\n\nList<String> keys = unsortedMap.entrySet()\n                   .stream()\n                   .sorted((e1, e2) -> Integer.compare(e2.getValue().size(), e1.getValue().size()))\n                   .map(Map.Entry::getKey)\n                   .collect(Collectors.toList());\nSystem.out.println(keys); //[C, A, B]\nWhat it does is:\n\nget a Stream of the entries of your map\nsort the entries by the the size of each arraylist\nmap each entry to its corresponding key\ncollect the result in a List\nIf you want you could also write the sorted line as :\n\n.sorted(Comparator.comparing(e -> e.getValue().size(), Comparator.reverseOrder()))""]",0.7142857142857143
39,How to convert comma-separated String to ArrayList?,"['Here is another one for converting CSV to ArrayList:\n\nString str=""string,with,comma"";\nArrayList aList= new ArrayList(Arrays.asList(str.split("","")));\nfor(int i=0;i<aList.size();i++)\n{\n    System.out.println("" -->""+aList.get(i));\n}\nPrints you\n\n-->string\n-->with\n-->comma']",1.0
40,How to get ArrayList<Integer> and Scanner to play nice?,['Your problem is here :\n\n while(scan.hasNextInt()){  <-- This will loop untill you enter any non integer value\n     list.add(scan.nextInt());\n  }\nYou just have to enter a character say e.g q once you finished entering all the integer values and then your program will print expected results.\n\nSample Input :14 17 18 33 54 1 4 6 q'],1.0
41,JAXB java.util.Map to key value pairs,"['I\'m still working on a better solution but using MOXy JAXB, I\'ve been able to handle the following XML:\n\n<?xml version=""1.0"" encoding=""UTF-8""?>\n<root>\n   <mapProperty>\n      <map>\n         <key>value</key>\n         <key2>value2</key2>\n      </map>\n   </mapProperty>\n</root>\nYou need to use an @XmlJavaTypeAdapter on your Map property:\n\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport javax.xml.bind.annotation.XmlRootElement;\nimport javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;\n\n@XmlRootElement\npublic class Root {\n\n    private Map<String, String> mapProperty;\n\n    public Root() {\n        mapProperty = new HashMap<String, String>();\n    }\n\n    @XmlJavaTypeAdapter(MapAdapter.class)\n    public Map<String, String> getMapProperty() {\n        return mapProperty;\n    }\n\n    public void setMapProperty(Map<String, String> map) {\n        this.mapProperty = map;\n    }\n\n}\nThe implementation of the XmlAdapter is as follows:\n\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.Map.Entry;\n\nimport javax.xml.bind.annotation.adapters.XmlAdapter;\nimport javax.xml.parsers.DocumentBuilder;\nimport javax.xml.parsers.DocumentBuilderFactory;\n\nimport org.w3c.dom.Document;\nimport org.w3c.dom.Element;\nimport org.w3c.dom.Node;\nimport org.w3c.dom.NodeList;\n\npublic class MapAdapter extends XmlAdapter<AdaptedMap, Map<String, String>> {\n\n    @Override\n    public AdaptedMap marshal(Map<String, String> map) throws Exception {\n        DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n        DocumentBuilder db = dbf.newDocumentBuilder();\n        Document document = db.newDocument();\n        Element rootElement = document.createElement(""map"");\n        document.appendChild(rootElement);\n\n        for(Entry<String,String> entry : map.entrySet()) {\n            Element mapElement = document.createElement(entry.getKey());\n            mapElement.setTextContent(entry.getValue());\n            rootElement.appendChild(mapElement);\n        }\n\n        AdaptedMap adaptedMap = new AdaptedMap();\n        adaptedMap.setValue(document);\n        return adaptedMap;\n    }\n\n    @Override\n    public Map<String, String> unmarshal(AdaptedMap adaptedMap) throws Exception {\n        Map<String, String> map = new HashMap<String, String>();\n        Element rootElement = (Element) adaptedMap.getValue();\n        NodeList childNodes = rootElement.getChildNodes();\n        for(int x=0,size=childNodes.getLength(); x<size; x++) {\n            Node childNode = childNodes.item(x);\n            if(childNode.getNodeType() == Node.ELEMENT_NODE) {\n                map.put(childNode.getLocalName(), childNode.getTextContent());\n            }\n        }\n        return map;\n    }\n\n}\nThe AdpatedMap class is where all the magic happens, we will use a DOM to represent the content. We will trick JAXB intro dealing with a DOM through the combination of @XmlAnyElement and a property of type Object:\n\nimport javax.xml.bind.annotation.XmlAnyElement;\n\npublic class AdaptedMap {\n\n    private Object value;\n\n    @XmlAnyElement\n    public Object getValue() {\n        return value;\n    }\n\n    public void setValue(Object value) {\n        this.value = value;\n    }\n\n}\nThis solution requires the MOXy JAXB implementation. You can configure the JAXB runtime to use the MOXy implementation by adding a file named jaxb.properties in with your model classes with the following entry:\n\njavax.xml.bind.context.factory=org.eclipse.persistence.jaxb.JAXBContextFactory\nThe following demo code can be used to verify the code:\n\nimport java.io.File;\n\nimport javax.xml.bind.JAXBContext;\nimport javax.xml.bind.Marshaller;\nimport javax.xml.bind.Unmarshaller;\n\npublic class Demo {\n\n    public static void main(String[] args) throws Exception {\n        JAXBContext jc = JAXBContext.newInstance(Root.class);\n\n        Unmarshaller unmarshaller = jc.createUnmarshaller();\n        Root root = (Root) unmarshaller.unmarshal(new File(""src/forum74/input.xml""));\n\n        Marshaller marshaller = jc.createMarshaller();\n        marshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, true);\n        marshaller.marshal(root, System.out);\n    }\n}']",0.18269230769230768
42,serialize json object which extends map,"['I came up with this solution:\n\npublic class ArrayToMapDeserializer extends JsonDeserializer<SortedMap<Object, Object>>\n    implements ContextualDeserializer {\n\n    private Class<?> keyAs;\n\n    private Class<?> contentAs;\n\n    @Override\n    public Map<Object, Object> deserialize(JsonParser p, DeserializationContext ctxt)\n        throws IOException, JsonProcessingException {\n        return this.deserialize(p, ctxt, new HashMap<>());\n    }\n\n    @Override\n    public Map<Object, Object> deserialize(JsonParser p, DeserializationContext ctxt,\n        Map<Object, Object> intoValue) throws IOException, JsonProcessingException {\n        JsonNode node = p.readValueAsTree();\n        ObjectCodec codec = p.getCodec();\n        if (node.isArray()) {\n            node.forEach(entry -> {\n                try {\n                    JsonNode keyNode = entry.get(0);\n                    JsonNode valueNode = entry.get(1);\n                    intoValue.put(keyNode.traverse(codec).readValueAs(this.keyAs),\n                        valueNode.traverse(codec).readValueAs(this.contentAs));\n                } catch (NullPointerException | IOException e) {\n                    // skip entry\n                }\n            });\n        }\n        return intoValue;\n    }\n\n    @Override\n    public JsonDeserializer<?> createContextual(DeserializationContext ctxt, BeanProperty property)\n        throws JsonMappingException {\n        JsonDeserialize jsonDeserialize = property.getAnnotation(JsonDeserialize.class);\n        this.keyAs = jsonDeserialize.keyAs();\n        this.contentAs = jsonDeserialize.contentAs();\n        return this;\n    }\n\n}\nwhich can be used like this:\n\npublic class Baz {\n\n    @JsonSerialize(using = MapToArraySerializer.class)\n    @JsonDeserialize(using = ArrayToMapDeserializer.class,\n        keyAs = Foo.class, contentAs = Bar.class)\n    Map<Foo, Bar> map;\n\n}']",0.22
43,Take a screenshot and save as Image in Java,"['Use Robot#createScreenCapture().\n\nBufferedImage image = new Robot().createScreenCapture(new Rectangle(Toolkit.getDefaultToolkit().getScreenSize()));\nImageIO.write(image, ""png"", new File(""/screenshot.png""));']",1.0
44,Is there a way to take a screenshot using Java and save it to some sort of Image?,"['GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();  \nGraphicsDevice[] screens = ge.getScreenDevices();       \nRectangle allScreenBounds = new Rectangle();  \nfor (GraphicsDevice screen : screens) {  \n       Rectangle screenBounds = screen.getDefaultConfiguration().getBounds();        \n       allScreenBounds.width += screenBounds.width;  \n       allScreenBounds.height = Math.max(allScreenBounds.height, screenBounds.height);\n       allScreenBounds.x=Math.min(allScreenBounds.x, screenBounds.x);\n       allScreenBounds.y=Math.min(allScreenBounds.y, screenBounds.y);\n      } \nRobot robot = new Robot();\nBufferedImage bufferedImage = robot.createScreenCapture(allScreenBounds);\nFile file = new File(""C:\\\\Users\\\\Joe\\\\Desktop\\\\scr.png"");\nif(!file.exists())\n    file.createNewFile();\nFileOutputStream fos = new FileOutputStream(file);\nImageIO.write( bufferedImage, ""png"", fos );\nbufferedImage will contain a full screenshot, this was tested with three monitors']",0.55
45,"Java- Write Text onto Image, then Write to Output File","['It\'s easy, just get the Graphics object from the image and draw your string onto the image. This example (and output image) is doing that:\n\npublic static void main(String[] args) throws Exception {\n    final BufferedImage image = ImageIO.read(new URL(\n        ""http://upload.wikimedia.org/wikipedia/en/2/24/Lenna.png""));\n\n    Graphics g = image.getGraphics();\n    g.setFont(g.getFont().deriveFont(30f));\n    g.drawString(""Hello World!"", 100, 100);\n    g.dispose();\n\n    ImageIO.write(image, ""png"", new File(""test.png""));\n}']",1.0
46,How to connect SQLite with Java?,['nan'],1.0
47,Resize image while keeping aspect ratio in Java,['nan'],1.0
48,How to resize JLabel ImageIcon?,['nan'],1.0
49,Java JPanel resize Image,['nan'],1.0
